/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelLibraryUpdateMediaPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelLibraryUpdateMediaPath{}

// ModelLibraryUpdateMediaPath struct for ModelLibraryUpdateMediaPath
type ModelLibraryUpdateMediaPath struct {
	Id *string `json:"Id,omitempty"`
	PathInfo *ModelMediaPathInfo `json:"PathInfo,omitempty"`
}

// NewModelLibraryUpdateMediaPath instantiates a new ModelLibraryUpdateMediaPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelLibraryUpdateMediaPath() *ModelLibraryUpdateMediaPath {
	this := ModelLibraryUpdateMediaPath{}
	return &this
}

// NewModelLibraryUpdateMediaPathWithDefaults instantiates a new ModelLibraryUpdateMediaPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelLibraryUpdateMediaPathWithDefaults() *ModelLibraryUpdateMediaPath {
	this := ModelLibraryUpdateMediaPath{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelLibraryUpdateMediaPath) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryUpdateMediaPath) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelLibraryUpdateMediaPath) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelLibraryUpdateMediaPath) SetId(v string) {
	o.Id = &v
}

// GetPathInfo returns the PathInfo field value if set, zero value otherwise.
func (o *ModelLibraryUpdateMediaPath) GetPathInfo() ModelMediaPathInfo {
	if o == nil || IsNil(o.PathInfo) {
		var ret ModelMediaPathInfo
		return ret
	}
	return *o.PathInfo
}

// GetPathInfoOk returns a tuple with the PathInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryUpdateMediaPath) GetPathInfoOk() (*ModelMediaPathInfo, bool) {
	if o == nil || IsNil(o.PathInfo) {
		return nil, false
	}
	return o.PathInfo, true
}

// HasPathInfo returns a boolean if a field has been set.
func (o *ModelLibraryUpdateMediaPath) HasPathInfo() bool {
	if o != nil && !IsNil(o.PathInfo) {
		return true
	}

	return false
}

// SetPathInfo gets a reference to the given ModelMediaPathInfo and assigns it to the PathInfo field.
func (o *ModelLibraryUpdateMediaPath) SetPathInfo(v ModelMediaPathInfo) {
	o.PathInfo = &v
}

func (o ModelLibraryUpdateMediaPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelLibraryUpdateMediaPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.PathInfo) {
		toSerialize["PathInfo"] = o.PathInfo
	}
	return toSerialize, nil
}

type NullableModelLibraryUpdateMediaPath struct {
	value *ModelLibraryUpdateMediaPath
	isSet bool
}

func (v NullableModelLibraryUpdateMediaPath) Get() *ModelLibraryUpdateMediaPath {
	return v.value
}

func (v *NullableModelLibraryUpdateMediaPath) Set(val *ModelLibraryUpdateMediaPath) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLibraryUpdateMediaPath) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLibraryUpdateMediaPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLibraryUpdateMediaPath(val *ModelLibraryUpdateMediaPath) *NullableModelLibraryUpdateMediaPath {
	return &NullableModelLibraryUpdateMediaPath{value: val, isSet: true}
}

func (v NullableModelLibraryUpdateMediaPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLibraryUpdateMediaPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


