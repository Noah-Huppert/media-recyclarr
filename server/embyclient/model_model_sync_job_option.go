/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelSyncJobOption the model 'ModelSyncJobOption'
type ModelSyncJobOption string

// List of SyncJobOption
const (
	MODELSYNCJOBOPTION_NAME ModelSyncJobOption = "Name"
	MODELSYNCJOBOPTION_QUALITY ModelSyncJobOption = "Quality"
	MODELSYNCJOBOPTION_UNWATCHED_ONLY ModelSyncJobOption = "UnwatchedOnly"
	MODELSYNCJOBOPTION_SYNC_NEW_CONTENT ModelSyncJobOption = "SyncNewContent"
	MODELSYNCJOBOPTION_ITEM_LIMIT ModelSyncJobOption = "ItemLimit"
	MODELSYNCJOBOPTION_PROFILE ModelSyncJobOption = "Profile"
)

// All allowed values of ModelSyncJobOption enum
var AllowedModelSyncJobOptionEnumValues = []ModelSyncJobOption{
	"Name",
	"Quality",
	"UnwatchedOnly",
	"SyncNewContent",
	"ItemLimit",
	"Profile",
}

func (v *ModelSyncJobOption) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelSyncJobOption(value)
	for _, existing := range AllowedModelSyncJobOptionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelSyncJobOption", value)
}

// NewModelSyncJobOptionFromValue returns a pointer to a valid ModelSyncJobOption
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelSyncJobOptionFromValue(v string) (*ModelSyncJobOption, error) {
	ev := ModelSyncJobOption(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelSyncJobOption: valid values are %v", v, AllowedModelSyncJobOptionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelSyncJobOption) IsValid() bool {
	for _, existing := range AllowedModelSyncJobOptionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SyncJobOption value
func (v ModelSyncJobOption) Ptr() *ModelSyncJobOption {
	return &v
}

type NullableModelSyncJobOption struct {
	value *ModelSyncJobOption
	isSet bool
}

func (v NullableModelSyncJobOption) Get() *ModelSyncJobOption {
	return v.value
}

func (v *NullableModelSyncJobOption) Set(val *ModelSyncJobOption) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSyncJobOption) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSyncJobOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSyncJobOption(val *ModelSyncJobOption) *NullableModelSyncJobOption {
	return &NullableModelSyncJobOption{value: val, isSet: true}
}

func (v NullableModelSyncJobOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSyncJobOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

