/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelMediaSourceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelMediaSourceInfo{}

// ModelMediaSourceInfo struct for ModelMediaSourceInfo
type ModelMediaSourceInfo struct {
	Protocol *ModelMediaProtocol `json:"Protocol,omitempty"`
	Id *string `json:"Id,omitempty"`
	Path *string `json:"Path,omitempty"`
	EncoderPath *string `json:"EncoderPath,omitempty"`
	EncoderProtocol *ModelMediaProtocol `json:"EncoderProtocol,omitempty"`
	Type *ModelMediaSourceType `json:"Type,omitempty"`
	Container *string `json:"Container,omitempty"`
	Size NullableInt64 `json:"Size,omitempty"`
	Name *string `json:"Name,omitempty"`
	SortName *string `json:"SortName,omitempty"`
	IsRemote *bool `json:"IsRemote,omitempty"`
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	ContainerStartTimeTicks NullableInt64 `json:"ContainerStartTimeTicks,omitempty"`
	SupportsTranscoding *bool `json:"SupportsTranscoding,omitempty"`
	SupportsDirectStream *bool `json:"SupportsDirectStream,omitempty"`
	SupportsDirectPlay *bool `json:"SupportsDirectPlay,omitempty"`
	IsInfiniteStream *bool `json:"IsInfiniteStream,omitempty"`
	RequiresOpening *bool `json:"RequiresOpening,omitempty"`
	OpenToken *string `json:"OpenToken,omitempty"`
	RequiresClosing *bool `json:"RequiresClosing,omitempty"`
	LiveStreamId *string `json:"LiveStreamId,omitempty"`
	// Deprecated
	BufferMs NullableInt32 `json:"BufferMs,omitempty"`
	RequiresLooping *bool `json:"RequiresLooping,omitempty"`
	// Deprecated
	SupportsProbing *bool `json:"SupportsProbing,omitempty"`
	Video3DFormat *ModelVideo3DFormat `json:"Video3DFormat,omitempty"`
	MediaStreams []ModelMediaStream `json:"MediaStreams,omitempty"`
	Formats []string `json:"Formats,omitempty"`
	Bitrate NullableInt32 `json:"Bitrate,omitempty"`
	Timestamp *ModelTransportStreamTimestamp `json:"Timestamp,omitempty"`
	RequiredHttpHeaders *map[string]string `json:"RequiredHttpHeaders,omitempty"`
	DirectStreamUrl *string `json:"DirectStreamUrl,omitempty"`
	TranscodingUrl *string `json:"TranscodingUrl,omitempty"`
	TranscodingSubProtocol *string `json:"TranscodingSubProtocol,omitempty"`
	TranscodingContainer *string `json:"TranscodingContainer,omitempty"`
	// Deprecated
	AnalyzeDurationMs NullableInt32 `json:"AnalyzeDurationMs,omitempty"`
	// Deprecated
	ReadAtNativeFramerate *bool `json:"ReadAtNativeFramerate,omitempty"`
	DefaultAudioStreamIndex NullableInt32 `json:"DefaultAudioStreamIndex,omitempty"`
	DefaultSubtitleStreamIndex NullableInt32 `json:"DefaultSubtitleStreamIndex,omitempty"`
	ItemId *string `json:"ItemId,omitempty"`
	ServerId *string `json:"ServerId,omitempty"`
}

// NewModelMediaSourceInfo instantiates a new ModelMediaSourceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelMediaSourceInfo() *ModelMediaSourceInfo {
	this := ModelMediaSourceInfo{}
	return &this
}

// NewModelMediaSourceInfoWithDefaults instantiates a new ModelMediaSourceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelMediaSourceInfoWithDefaults() *ModelMediaSourceInfo {
	this := ModelMediaSourceInfo{}
	return &this
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetProtocol() ModelMediaProtocol {
	if o == nil || IsNil(o.Protocol) {
		var ret ModelMediaProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetProtocolOk() (*ModelMediaProtocol, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given ModelMediaProtocol and assigns it to the Protocol field.
func (o *ModelMediaSourceInfo) SetProtocol(v ModelMediaProtocol) {
	o.Protocol = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelMediaSourceInfo) SetId(v string) {
	o.Id = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ModelMediaSourceInfo) SetPath(v string) {
	o.Path = &v
}

// GetEncoderPath returns the EncoderPath field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetEncoderPath() string {
	if o == nil || IsNil(o.EncoderPath) {
		var ret string
		return ret
	}
	return *o.EncoderPath
}

// GetEncoderPathOk returns a tuple with the EncoderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetEncoderPathOk() (*string, bool) {
	if o == nil || IsNil(o.EncoderPath) {
		return nil, false
	}
	return o.EncoderPath, true
}

// HasEncoderPath returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasEncoderPath() bool {
	if o != nil && !IsNil(o.EncoderPath) {
		return true
	}

	return false
}

// SetEncoderPath gets a reference to the given string and assigns it to the EncoderPath field.
func (o *ModelMediaSourceInfo) SetEncoderPath(v string) {
	o.EncoderPath = &v
}

// GetEncoderProtocol returns the EncoderProtocol field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetEncoderProtocol() ModelMediaProtocol {
	if o == nil || IsNil(o.EncoderProtocol) {
		var ret ModelMediaProtocol
		return ret
	}
	return *o.EncoderProtocol
}

// GetEncoderProtocolOk returns a tuple with the EncoderProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetEncoderProtocolOk() (*ModelMediaProtocol, bool) {
	if o == nil || IsNil(o.EncoderProtocol) {
		return nil, false
	}
	return o.EncoderProtocol, true
}

// HasEncoderProtocol returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasEncoderProtocol() bool {
	if o != nil && !IsNil(o.EncoderProtocol) {
		return true
	}

	return false
}

// SetEncoderProtocol gets a reference to the given ModelMediaProtocol and assigns it to the EncoderProtocol field.
func (o *ModelMediaSourceInfo) SetEncoderProtocol(v ModelMediaProtocol) {
	o.EncoderProtocol = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetType() ModelMediaSourceType {
	if o == nil || IsNil(o.Type) {
		var ret ModelMediaSourceType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetTypeOk() (*ModelMediaSourceType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ModelMediaSourceType and assigns it to the Type field.
func (o *ModelMediaSourceInfo) SetType(v ModelMediaSourceType) {
	o.Type = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetContainer() string {
	if o == nil || IsNil(o.Container) {
		var ret string
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetContainerOk() (*string, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given string and assigns it to the Container field.
func (o *ModelMediaSourceInfo) SetContainer(v string) {
	o.Container = &v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelMediaSourceInfo) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMediaSourceInfo) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *ModelMediaSourceInfo) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *ModelMediaSourceInfo) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetSize() {
	o.Size.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelMediaSourceInfo) SetName(v string) {
	o.Name = &v
}

// GetSortName returns the SortName field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetSortName() string {
	if o == nil || IsNil(o.SortName) {
		var ret string
		return ret
	}
	return *o.SortName
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetSortNameOk() (*string, bool) {
	if o == nil || IsNil(o.SortName) {
		return nil, false
	}
	return o.SortName, true
}

// HasSortName returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasSortName() bool {
	if o != nil && !IsNil(o.SortName) {
		return true
	}

	return false
}

// SetSortName gets a reference to the given string and assigns it to the SortName field.
func (o *ModelMediaSourceInfo) SetSortName(v string) {
	o.SortName = &v
}

// GetIsRemote returns the IsRemote field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetIsRemote() bool {
	if o == nil || IsNil(o.IsRemote) {
		var ret bool
		return ret
	}
	return *o.IsRemote
}

// GetIsRemoteOk returns a tuple with the IsRemote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetIsRemoteOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemote) {
		return nil, false
	}
	return o.IsRemote, true
}

// HasIsRemote returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasIsRemote() bool {
	if o != nil && !IsNil(o.IsRemote) {
		return true
	}

	return false
}

// SetIsRemote gets a reference to the given bool and assigns it to the IsRemote field.
func (o *ModelMediaSourceInfo) SetIsRemote(v bool) {
	o.IsRemote = &v
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelMediaSourceInfo) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMediaSourceInfo) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *ModelMediaSourceInfo) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *ModelMediaSourceInfo) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetContainerStartTimeTicks returns the ContainerStartTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelMediaSourceInfo) GetContainerStartTimeTicks() int64 {
	if o == nil || IsNil(o.ContainerStartTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.ContainerStartTimeTicks.Get()
}

// GetContainerStartTimeTicksOk returns a tuple with the ContainerStartTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMediaSourceInfo) GetContainerStartTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerStartTimeTicks.Get(), o.ContainerStartTimeTicks.IsSet()
}

// HasContainerStartTimeTicks returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasContainerStartTimeTicks() bool {
	if o != nil && o.ContainerStartTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetContainerStartTimeTicks gets a reference to the given NullableInt64 and assigns it to the ContainerStartTimeTicks field.
func (o *ModelMediaSourceInfo) SetContainerStartTimeTicks(v int64) {
	o.ContainerStartTimeTicks.Set(&v)
}
// SetContainerStartTimeTicksNil sets the value for ContainerStartTimeTicks to be an explicit nil
func (o *ModelMediaSourceInfo) SetContainerStartTimeTicksNil() {
	o.ContainerStartTimeTicks.Set(nil)
}

// UnsetContainerStartTimeTicks ensures that no value is present for ContainerStartTimeTicks, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetContainerStartTimeTicks() {
	o.ContainerStartTimeTicks.Unset()
}

// GetSupportsTranscoding returns the SupportsTranscoding field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetSupportsTranscoding() bool {
	if o == nil || IsNil(o.SupportsTranscoding) {
		var ret bool
		return ret
	}
	return *o.SupportsTranscoding
}

// GetSupportsTranscodingOk returns a tuple with the SupportsTranscoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetSupportsTranscodingOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsTranscoding) {
		return nil, false
	}
	return o.SupportsTranscoding, true
}

// HasSupportsTranscoding returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasSupportsTranscoding() bool {
	if o != nil && !IsNil(o.SupportsTranscoding) {
		return true
	}

	return false
}

// SetSupportsTranscoding gets a reference to the given bool and assigns it to the SupportsTranscoding field.
func (o *ModelMediaSourceInfo) SetSupportsTranscoding(v bool) {
	o.SupportsTranscoding = &v
}

// GetSupportsDirectStream returns the SupportsDirectStream field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetSupportsDirectStream() bool {
	if o == nil || IsNil(o.SupportsDirectStream) {
		var ret bool
		return ret
	}
	return *o.SupportsDirectStream
}

// GetSupportsDirectStreamOk returns a tuple with the SupportsDirectStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetSupportsDirectStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsDirectStream) {
		return nil, false
	}
	return o.SupportsDirectStream, true
}

// HasSupportsDirectStream returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasSupportsDirectStream() bool {
	if o != nil && !IsNil(o.SupportsDirectStream) {
		return true
	}

	return false
}

// SetSupportsDirectStream gets a reference to the given bool and assigns it to the SupportsDirectStream field.
func (o *ModelMediaSourceInfo) SetSupportsDirectStream(v bool) {
	o.SupportsDirectStream = &v
}

// GetSupportsDirectPlay returns the SupportsDirectPlay field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetSupportsDirectPlay() bool {
	if o == nil || IsNil(o.SupportsDirectPlay) {
		var ret bool
		return ret
	}
	return *o.SupportsDirectPlay
}

// GetSupportsDirectPlayOk returns a tuple with the SupportsDirectPlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetSupportsDirectPlayOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsDirectPlay) {
		return nil, false
	}
	return o.SupportsDirectPlay, true
}

// HasSupportsDirectPlay returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasSupportsDirectPlay() bool {
	if o != nil && !IsNil(o.SupportsDirectPlay) {
		return true
	}

	return false
}

// SetSupportsDirectPlay gets a reference to the given bool and assigns it to the SupportsDirectPlay field.
func (o *ModelMediaSourceInfo) SetSupportsDirectPlay(v bool) {
	o.SupportsDirectPlay = &v
}

// GetIsInfiniteStream returns the IsInfiniteStream field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetIsInfiniteStream() bool {
	if o == nil || IsNil(o.IsInfiniteStream) {
		var ret bool
		return ret
	}
	return *o.IsInfiniteStream
}

// GetIsInfiniteStreamOk returns a tuple with the IsInfiniteStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetIsInfiniteStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInfiniteStream) {
		return nil, false
	}
	return o.IsInfiniteStream, true
}

// HasIsInfiniteStream returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasIsInfiniteStream() bool {
	if o != nil && !IsNil(o.IsInfiniteStream) {
		return true
	}

	return false
}

// SetIsInfiniteStream gets a reference to the given bool and assigns it to the IsInfiniteStream field.
func (o *ModelMediaSourceInfo) SetIsInfiniteStream(v bool) {
	o.IsInfiniteStream = &v
}

// GetRequiresOpening returns the RequiresOpening field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetRequiresOpening() bool {
	if o == nil || IsNil(o.RequiresOpening) {
		var ret bool
		return ret
	}
	return *o.RequiresOpening
}

// GetRequiresOpeningOk returns a tuple with the RequiresOpening field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetRequiresOpeningOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresOpening) {
		return nil, false
	}
	return o.RequiresOpening, true
}

// HasRequiresOpening returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasRequiresOpening() bool {
	if o != nil && !IsNil(o.RequiresOpening) {
		return true
	}

	return false
}

// SetRequiresOpening gets a reference to the given bool and assigns it to the RequiresOpening field.
func (o *ModelMediaSourceInfo) SetRequiresOpening(v bool) {
	o.RequiresOpening = &v
}

// GetOpenToken returns the OpenToken field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetOpenToken() string {
	if o == nil || IsNil(o.OpenToken) {
		var ret string
		return ret
	}
	return *o.OpenToken
}

// GetOpenTokenOk returns a tuple with the OpenToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetOpenTokenOk() (*string, bool) {
	if o == nil || IsNil(o.OpenToken) {
		return nil, false
	}
	return o.OpenToken, true
}

// HasOpenToken returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasOpenToken() bool {
	if o != nil && !IsNil(o.OpenToken) {
		return true
	}

	return false
}

// SetOpenToken gets a reference to the given string and assigns it to the OpenToken field.
func (o *ModelMediaSourceInfo) SetOpenToken(v string) {
	o.OpenToken = &v
}

// GetRequiresClosing returns the RequiresClosing field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetRequiresClosing() bool {
	if o == nil || IsNil(o.RequiresClosing) {
		var ret bool
		return ret
	}
	return *o.RequiresClosing
}

// GetRequiresClosingOk returns a tuple with the RequiresClosing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetRequiresClosingOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresClosing) {
		return nil, false
	}
	return o.RequiresClosing, true
}

// HasRequiresClosing returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasRequiresClosing() bool {
	if o != nil && !IsNil(o.RequiresClosing) {
		return true
	}

	return false
}

// SetRequiresClosing gets a reference to the given bool and assigns it to the RequiresClosing field.
func (o *ModelMediaSourceInfo) SetRequiresClosing(v bool) {
	o.RequiresClosing = &v
}

// GetLiveStreamId returns the LiveStreamId field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetLiveStreamId() string {
	if o == nil || IsNil(o.LiveStreamId) {
		var ret string
		return ret
	}
	return *o.LiveStreamId
}

// GetLiveStreamIdOk returns a tuple with the LiveStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetLiveStreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.LiveStreamId) {
		return nil, false
	}
	return o.LiveStreamId, true
}

// HasLiveStreamId returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasLiveStreamId() bool {
	if o != nil && !IsNil(o.LiveStreamId) {
		return true
	}

	return false
}

// SetLiveStreamId gets a reference to the given string and assigns it to the LiveStreamId field.
func (o *ModelMediaSourceInfo) SetLiveStreamId(v string) {
	o.LiveStreamId = &v
}

// GetBufferMs returns the BufferMs field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ModelMediaSourceInfo) GetBufferMs() int32 {
	if o == nil || IsNil(o.BufferMs.Get()) {
		var ret int32
		return ret
	}
	return *o.BufferMs.Get()
}

// GetBufferMsOk returns a tuple with the BufferMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ModelMediaSourceInfo) GetBufferMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BufferMs.Get(), o.BufferMs.IsSet()
}

// HasBufferMs returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasBufferMs() bool {
	if o != nil && o.BufferMs.IsSet() {
		return true
	}

	return false
}

// SetBufferMs gets a reference to the given NullableInt32 and assigns it to the BufferMs field.
// Deprecated
func (o *ModelMediaSourceInfo) SetBufferMs(v int32) {
	o.BufferMs.Set(&v)
}
// SetBufferMsNil sets the value for BufferMs to be an explicit nil
func (o *ModelMediaSourceInfo) SetBufferMsNil() {
	o.BufferMs.Set(nil)
}

// UnsetBufferMs ensures that no value is present for BufferMs, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetBufferMs() {
	o.BufferMs.Unset()
}

// GetRequiresLooping returns the RequiresLooping field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetRequiresLooping() bool {
	if o == nil || IsNil(o.RequiresLooping) {
		var ret bool
		return ret
	}
	return *o.RequiresLooping
}

// GetRequiresLoopingOk returns a tuple with the RequiresLooping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetRequiresLoopingOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresLooping) {
		return nil, false
	}
	return o.RequiresLooping, true
}

// HasRequiresLooping returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasRequiresLooping() bool {
	if o != nil && !IsNil(o.RequiresLooping) {
		return true
	}

	return false
}

// SetRequiresLooping gets a reference to the given bool and assigns it to the RequiresLooping field.
func (o *ModelMediaSourceInfo) SetRequiresLooping(v bool) {
	o.RequiresLooping = &v
}

// GetSupportsProbing returns the SupportsProbing field value if set, zero value otherwise.
// Deprecated
func (o *ModelMediaSourceInfo) GetSupportsProbing() bool {
	if o == nil || IsNil(o.SupportsProbing) {
		var ret bool
		return ret
	}
	return *o.SupportsProbing
}

// GetSupportsProbingOk returns a tuple with the SupportsProbing field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ModelMediaSourceInfo) GetSupportsProbingOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsProbing) {
		return nil, false
	}
	return o.SupportsProbing, true
}

// HasSupportsProbing returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasSupportsProbing() bool {
	if o != nil && !IsNil(o.SupportsProbing) {
		return true
	}

	return false
}

// SetSupportsProbing gets a reference to the given bool and assigns it to the SupportsProbing field.
// Deprecated
func (o *ModelMediaSourceInfo) SetSupportsProbing(v bool) {
	o.SupportsProbing = &v
}

// GetVideo3DFormat returns the Video3DFormat field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetVideo3DFormat() ModelVideo3DFormat {
	if o == nil || IsNil(o.Video3DFormat) {
		var ret ModelVideo3DFormat
		return ret
	}
	return *o.Video3DFormat
}

// GetVideo3DFormatOk returns a tuple with the Video3DFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetVideo3DFormatOk() (*ModelVideo3DFormat, bool) {
	if o == nil || IsNil(o.Video3DFormat) {
		return nil, false
	}
	return o.Video3DFormat, true
}

// HasVideo3DFormat returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasVideo3DFormat() bool {
	if o != nil && !IsNil(o.Video3DFormat) {
		return true
	}

	return false
}

// SetVideo3DFormat gets a reference to the given ModelVideo3DFormat and assigns it to the Video3DFormat field.
func (o *ModelMediaSourceInfo) SetVideo3DFormat(v ModelVideo3DFormat) {
	o.Video3DFormat = &v
}

// GetMediaStreams returns the MediaStreams field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetMediaStreams() []ModelMediaStream {
	if o == nil || IsNil(o.MediaStreams) {
		var ret []ModelMediaStream
		return ret
	}
	return o.MediaStreams
}

// GetMediaStreamsOk returns a tuple with the MediaStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetMediaStreamsOk() ([]ModelMediaStream, bool) {
	if o == nil || IsNil(o.MediaStreams) {
		return nil, false
	}
	return o.MediaStreams, true
}

// HasMediaStreams returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasMediaStreams() bool {
	if o != nil && !IsNil(o.MediaStreams) {
		return true
	}

	return false
}

// SetMediaStreams gets a reference to the given []ModelMediaStream and assigns it to the MediaStreams field.
func (o *ModelMediaSourceInfo) SetMediaStreams(v []ModelMediaStream) {
	o.MediaStreams = v
}

// GetFormats returns the Formats field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetFormats() []string {
	if o == nil || IsNil(o.Formats) {
		var ret []string
		return ret
	}
	return o.Formats
}

// GetFormatsOk returns a tuple with the Formats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetFormatsOk() ([]string, bool) {
	if o == nil || IsNil(o.Formats) {
		return nil, false
	}
	return o.Formats, true
}

// HasFormats returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasFormats() bool {
	if o != nil && !IsNil(o.Formats) {
		return true
	}

	return false
}

// SetFormats gets a reference to the given []string and assigns it to the Formats field.
func (o *ModelMediaSourceInfo) SetFormats(v []string) {
	o.Formats = v
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelMediaSourceInfo) GetBitrate() int32 {
	if o == nil || IsNil(o.Bitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.Bitrate.Get()
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMediaSourceInfo) GetBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bitrate.Get(), o.Bitrate.IsSet()
}

// HasBitrate returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasBitrate() bool {
	if o != nil && o.Bitrate.IsSet() {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given NullableInt32 and assigns it to the Bitrate field.
func (o *ModelMediaSourceInfo) SetBitrate(v int32) {
	o.Bitrate.Set(&v)
}
// SetBitrateNil sets the value for Bitrate to be an explicit nil
func (o *ModelMediaSourceInfo) SetBitrateNil() {
	o.Bitrate.Set(nil)
}

// UnsetBitrate ensures that no value is present for Bitrate, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetBitrate() {
	o.Bitrate.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetTimestamp() ModelTransportStreamTimestamp {
	if o == nil || IsNil(o.Timestamp) {
		var ret ModelTransportStreamTimestamp
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetTimestampOk() (*ModelTransportStreamTimestamp, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given ModelTransportStreamTimestamp and assigns it to the Timestamp field.
func (o *ModelMediaSourceInfo) SetTimestamp(v ModelTransportStreamTimestamp) {
	o.Timestamp = &v
}

// GetRequiredHttpHeaders returns the RequiredHttpHeaders field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetRequiredHttpHeaders() map[string]string {
	if o == nil || IsNil(o.RequiredHttpHeaders) {
		var ret map[string]string
		return ret
	}
	return *o.RequiredHttpHeaders
}

// GetRequiredHttpHeadersOk returns a tuple with the RequiredHttpHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetRequiredHttpHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.RequiredHttpHeaders) {
		return nil, false
	}
	return o.RequiredHttpHeaders, true
}

// HasRequiredHttpHeaders returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasRequiredHttpHeaders() bool {
	if o != nil && !IsNil(o.RequiredHttpHeaders) {
		return true
	}

	return false
}

// SetRequiredHttpHeaders gets a reference to the given map[string]string and assigns it to the RequiredHttpHeaders field.
func (o *ModelMediaSourceInfo) SetRequiredHttpHeaders(v map[string]string) {
	o.RequiredHttpHeaders = &v
}

// GetDirectStreamUrl returns the DirectStreamUrl field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetDirectStreamUrl() string {
	if o == nil || IsNil(o.DirectStreamUrl) {
		var ret string
		return ret
	}
	return *o.DirectStreamUrl
}

// GetDirectStreamUrlOk returns a tuple with the DirectStreamUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetDirectStreamUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DirectStreamUrl) {
		return nil, false
	}
	return o.DirectStreamUrl, true
}

// HasDirectStreamUrl returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasDirectStreamUrl() bool {
	if o != nil && !IsNil(o.DirectStreamUrl) {
		return true
	}

	return false
}

// SetDirectStreamUrl gets a reference to the given string and assigns it to the DirectStreamUrl field.
func (o *ModelMediaSourceInfo) SetDirectStreamUrl(v string) {
	o.DirectStreamUrl = &v
}

// GetTranscodingUrl returns the TranscodingUrl field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetTranscodingUrl() string {
	if o == nil || IsNil(o.TranscodingUrl) {
		var ret string
		return ret
	}
	return *o.TranscodingUrl
}

// GetTranscodingUrlOk returns a tuple with the TranscodingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetTranscodingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TranscodingUrl) {
		return nil, false
	}
	return o.TranscodingUrl, true
}

// HasTranscodingUrl returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasTranscodingUrl() bool {
	if o != nil && !IsNil(o.TranscodingUrl) {
		return true
	}

	return false
}

// SetTranscodingUrl gets a reference to the given string and assigns it to the TranscodingUrl field.
func (o *ModelMediaSourceInfo) SetTranscodingUrl(v string) {
	o.TranscodingUrl = &v
}

// GetTranscodingSubProtocol returns the TranscodingSubProtocol field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetTranscodingSubProtocol() string {
	if o == nil || IsNil(o.TranscodingSubProtocol) {
		var ret string
		return ret
	}
	return *o.TranscodingSubProtocol
}

// GetTranscodingSubProtocolOk returns a tuple with the TranscodingSubProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetTranscodingSubProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.TranscodingSubProtocol) {
		return nil, false
	}
	return o.TranscodingSubProtocol, true
}

// HasTranscodingSubProtocol returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasTranscodingSubProtocol() bool {
	if o != nil && !IsNil(o.TranscodingSubProtocol) {
		return true
	}

	return false
}

// SetTranscodingSubProtocol gets a reference to the given string and assigns it to the TranscodingSubProtocol field.
func (o *ModelMediaSourceInfo) SetTranscodingSubProtocol(v string) {
	o.TranscodingSubProtocol = &v
}

// GetTranscodingContainer returns the TranscodingContainer field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetTranscodingContainer() string {
	if o == nil || IsNil(o.TranscodingContainer) {
		var ret string
		return ret
	}
	return *o.TranscodingContainer
}

// GetTranscodingContainerOk returns a tuple with the TranscodingContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetTranscodingContainerOk() (*string, bool) {
	if o == nil || IsNil(o.TranscodingContainer) {
		return nil, false
	}
	return o.TranscodingContainer, true
}

// HasTranscodingContainer returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasTranscodingContainer() bool {
	if o != nil && !IsNil(o.TranscodingContainer) {
		return true
	}

	return false
}

// SetTranscodingContainer gets a reference to the given string and assigns it to the TranscodingContainer field.
func (o *ModelMediaSourceInfo) SetTranscodingContainer(v string) {
	o.TranscodingContainer = &v
}

// GetAnalyzeDurationMs returns the AnalyzeDurationMs field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ModelMediaSourceInfo) GetAnalyzeDurationMs() int32 {
	if o == nil || IsNil(o.AnalyzeDurationMs.Get()) {
		var ret int32
		return ret
	}
	return *o.AnalyzeDurationMs.Get()
}

// GetAnalyzeDurationMsOk returns a tuple with the AnalyzeDurationMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ModelMediaSourceInfo) GetAnalyzeDurationMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AnalyzeDurationMs.Get(), o.AnalyzeDurationMs.IsSet()
}

// HasAnalyzeDurationMs returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasAnalyzeDurationMs() bool {
	if o != nil && o.AnalyzeDurationMs.IsSet() {
		return true
	}

	return false
}

// SetAnalyzeDurationMs gets a reference to the given NullableInt32 and assigns it to the AnalyzeDurationMs field.
// Deprecated
func (o *ModelMediaSourceInfo) SetAnalyzeDurationMs(v int32) {
	o.AnalyzeDurationMs.Set(&v)
}
// SetAnalyzeDurationMsNil sets the value for AnalyzeDurationMs to be an explicit nil
func (o *ModelMediaSourceInfo) SetAnalyzeDurationMsNil() {
	o.AnalyzeDurationMs.Set(nil)
}

// UnsetAnalyzeDurationMs ensures that no value is present for AnalyzeDurationMs, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetAnalyzeDurationMs() {
	o.AnalyzeDurationMs.Unset()
}

// GetReadAtNativeFramerate returns the ReadAtNativeFramerate field value if set, zero value otherwise.
// Deprecated
func (o *ModelMediaSourceInfo) GetReadAtNativeFramerate() bool {
	if o == nil || IsNil(o.ReadAtNativeFramerate) {
		var ret bool
		return ret
	}
	return *o.ReadAtNativeFramerate
}

// GetReadAtNativeFramerateOk returns a tuple with the ReadAtNativeFramerate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ModelMediaSourceInfo) GetReadAtNativeFramerateOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadAtNativeFramerate) {
		return nil, false
	}
	return o.ReadAtNativeFramerate, true
}

// HasReadAtNativeFramerate returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasReadAtNativeFramerate() bool {
	if o != nil && !IsNil(o.ReadAtNativeFramerate) {
		return true
	}

	return false
}

// SetReadAtNativeFramerate gets a reference to the given bool and assigns it to the ReadAtNativeFramerate field.
// Deprecated
func (o *ModelMediaSourceInfo) SetReadAtNativeFramerate(v bool) {
	o.ReadAtNativeFramerate = &v
}

// GetDefaultAudioStreamIndex returns the DefaultAudioStreamIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelMediaSourceInfo) GetDefaultAudioStreamIndex() int32 {
	if o == nil || IsNil(o.DefaultAudioStreamIndex.Get()) {
		var ret int32
		return ret
	}
	return *o.DefaultAudioStreamIndex.Get()
}

// GetDefaultAudioStreamIndexOk returns a tuple with the DefaultAudioStreamIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMediaSourceInfo) GetDefaultAudioStreamIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultAudioStreamIndex.Get(), o.DefaultAudioStreamIndex.IsSet()
}

// HasDefaultAudioStreamIndex returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasDefaultAudioStreamIndex() bool {
	if o != nil && o.DefaultAudioStreamIndex.IsSet() {
		return true
	}

	return false
}

// SetDefaultAudioStreamIndex gets a reference to the given NullableInt32 and assigns it to the DefaultAudioStreamIndex field.
func (o *ModelMediaSourceInfo) SetDefaultAudioStreamIndex(v int32) {
	o.DefaultAudioStreamIndex.Set(&v)
}
// SetDefaultAudioStreamIndexNil sets the value for DefaultAudioStreamIndex to be an explicit nil
func (o *ModelMediaSourceInfo) SetDefaultAudioStreamIndexNil() {
	o.DefaultAudioStreamIndex.Set(nil)
}

// UnsetDefaultAudioStreamIndex ensures that no value is present for DefaultAudioStreamIndex, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetDefaultAudioStreamIndex() {
	o.DefaultAudioStreamIndex.Unset()
}

// GetDefaultSubtitleStreamIndex returns the DefaultSubtitleStreamIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelMediaSourceInfo) GetDefaultSubtitleStreamIndex() int32 {
	if o == nil || IsNil(o.DefaultSubtitleStreamIndex.Get()) {
		var ret int32
		return ret
	}
	return *o.DefaultSubtitleStreamIndex.Get()
}

// GetDefaultSubtitleStreamIndexOk returns a tuple with the DefaultSubtitleStreamIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMediaSourceInfo) GetDefaultSubtitleStreamIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultSubtitleStreamIndex.Get(), o.DefaultSubtitleStreamIndex.IsSet()
}

// HasDefaultSubtitleStreamIndex returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasDefaultSubtitleStreamIndex() bool {
	if o != nil && o.DefaultSubtitleStreamIndex.IsSet() {
		return true
	}

	return false
}

// SetDefaultSubtitleStreamIndex gets a reference to the given NullableInt32 and assigns it to the DefaultSubtitleStreamIndex field.
func (o *ModelMediaSourceInfo) SetDefaultSubtitleStreamIndex(v int32) {
	o.DefaultSubtitleStreamIndex.Set(&v)
}
// SetDefaultSubtitleStreamIndexNil sets the value for DefaultSubtitleStreamIndex to be an explicit nil
func (o *ModelMediaSourceInfo) SetDefaultSubtitleStreamIndexNil() {
	o.DefaultSubtitleStreamIndex.Set(nil)
}

// UnsetDefaultSubtitleStreamIndex ensures that no value is present for DefaultSubtitleStreamIndex, not even an explicit nil
func (o *ModelMediaSourceInfo) UnsetDefaultSubtitleStreamIndex() {
	o.DefaultSubtitleStreamIndex.Unset()
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ModelMediaSourceInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ModelMediaSourceInfo) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMediaSourceInfo) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ModelMediaSourceInfo) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *ModelMediaSourceInfo) SetServerId(v string) {
	o.ServerId = &v
}

func (o ModelMediaSourceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelMediaSourceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Protocol) {
		toSerialize["Protocol"] = o.Protocol
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.EncoderPath) {
		toSerialize["EncoderPath"] = o.EncoderPath
	}
	if !IsNil(o.EncoderProtocol) {
		toSerialize["EncoderProtocol"] = o.EncoderProtocol
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Container) {
		toSerialize["Container"] = o.Container
	}
	if o.Size.IsSet() {
		toSerialize["Size"] = o.Size.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.SortName) {
		toSerialize["SortName"] = o.SortName
	}
	if !IsNil(o.IsRemote) {
		toSerialize["IsRemote"] = o.IsRemote
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if o.ContainerStartTimeTicks.IsSet() {
		toSerialize["ContainerStartTimeTicks"] = o.ContainerStartTimeTicks.Get()
	}
	if !IsNil(o.SupportsTranscoding) {
		toSerialize["SupportsTranscoding"] = o.SupportsTranscoding
	}
	if !IsNil(o.SupportsDirectStream) {
		toSerialize["SupportsDirectStream"] = o.SupportsDirectStream
	}
	if !IsNil(o.SupportsDirectPlay) {
		toSerialize["SupportsDirectPlay"] = o.SupportsDirectPlay
	}
	if !IsNil(o.IsInfiniteStream) {
		toSerialize["IsInfiniteStream"] = o.IsInfiniteStream
	}
	if !IsNil(o.RequiresOpening) {
		toSerialize["RequiresOpening"] = o.RequiresOpening
	}
	if !IsNil(o.OpenToken) {
		toSerialize["OpenToken"] = o.OpenToken
	}
	if !IsNil(o.RequiresClosing) {
		toSerialize["RequiresClosing"] = o.RequiresClosing
	}
	if !IsNil(o.LiveStreamId) {
		toSerialize["LiveStreamId"] = o.LiveStreamId
	}
	if o.BufferMs.IsSet() {
		toSerialize["BufferMs"] = o.BufferMs.Get()
	}
	if !IsNil(o.RequiresLooping) {
		toSerialize["RequiresLooping"] = o.RequiresLooping
	}
	if !IsNil(o.SupportsProbing) {
		toSerialize["SupportsProbing"] = o.SupportsProbing
	}
	if !IsNil(o.Video3DFormat) {
		toSerialize["Video3DFormat"] = o.Video3DFormat
	}
	if !IsNil(o.MediaStreams) {
		toSerialize["MediaStreams"] = o.MediaStreams
	}
	if !IsNil(o.Formats) {
		toSerialize["Formats"] = o.Formats
	}
	if o.Bitrate.IsSet() {
		toSerialize["Bitrate"] = o.Bitrate.Get()
	}
	if !IsNil(o.Timestamp) {
		toSerialize["Timestamp"] = o.Timestamp
	}
	if !IsNil(o.RequiredHttpHeaders) {
		toSerialize["RequiredHttpHeaders"] = o.RequiredHttpHeaders
	}
	if !IsNil(o.DirectStreamUrl) {
		toSerialize["DirectStreamUrl"] = o.DirectStreamUrl
	}
	if !IsNil(o.TranscodingUrl) {
		toSerialize["TranscodingUrl"] = o.TranscodingUrl
	}
	if !IsNil(o.TranscodingSubProtocol) {
		toSerialize["TranscodingSubProtocol"] = o.TranscodingSubProtocol
	}
	if !IsNil(o.TranscodingContainer) {
		toSerialize["TranscodingContainer"] = o.TranscodingContainer
	}
	if o.AnalyzeDurationMs.IsSet() {
		toSerialize["AnalyzeDurationMs"] = o.AnalyzeDurationMs.Get()
	}
	if !IsNil(o.ReadAtNativeFramerate) {
		toSerialize["ReadAtNativeFramerate"] = o.ReadAtNativeFramerate
	}
	if o.DefaultAudioStreamIndex.IsSet() {
		toSerialize["DefaultAudioStreamIndex"] = o.DefaultAudioStreamIndex.Get()
	}
	if o.DefaultSubtitleStreamIndex.IsSet() {
		toSerialize["DefaultSubtitleStreamIndex"] = o.DefaultSubtitleStreamIndex.Get()
	}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	return toSerialize, nil
}

type NullableModelMediaSourceInfo struct {
	value *ModelMediaSourceInfo
	isSet bool
}

func (v NullableModelMediaSourceInfo) Get() *ModelMediaSourceInfo {
	return v.value
}

func (v *NullableModelMediaSourceInfo) Set(val *ModelMediaSourceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelMediaSourceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelMediaSourceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelMediaSourceInfo(val *ModelMediaSourceInfo) *NullableModelMediaSourceInfo {
	return &NullableModelMediaSourceInfo{value: val, isSet: true}
}

func (v NullableModelMediaSourceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelMediaSourceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


