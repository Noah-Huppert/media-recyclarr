/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelTranscodingVpStepTypes the model 'ModelTranscodingVpStepTypes'
type ModelTranscodingVpStepTypes string

// List of Transcoding.VpStepTypes
const (
	MODELTRANSCODINGVPSTEPTYPES_DECODER ModelTranscodingVpStepTypes = "Decoder"
	MODELTRANSCODINGVPSTEPTYPES_ENCODER ModelTranscodingVpStepTypes = "Encoder"
	MODELTRANSCODINGVPSTEPTYPES_SCALING ModelTranscodingVpStepTypes = "Scaling"
	MODELTRANSCODINGVPSTEPTYPES_DEINTERLACE ModelTranscodingVpStepTypes = "Deinterlace"
	MODELTRANSCODINGVPSTEPTYPES_SUBTITLE_OVERLAY ModelTranscodingVpStepTypes = "SubtitleOverlay"
	MODELTRANSCODINGVPSTEPTYPES_TONE_MAPPING ModelTranscodingVpStepTypes = "ToneMapping"
	MODELTRANSCODINGVPSTEPTYPES_COLOR_CONVERSION ModelTranscodingVpStepTypes = "ColorConversion"
	MODELTRANSCODINGVPSTEPTYPES_SPLIT_CAPTIONS ModelTranscodingVpStepTypes = "SplitCaptions"
	MODELTRANSCODINGVPSTEPTYPES_TEXT_SUB2_VIDEO ModelTranscodingVpStepTypes = "TextSub2Video"
	MODELTRANSCODINGVPSTEPTYPES_GRAPHIC_SUB2_VIDEO ModelTranscodingVpStepTypes = "GraphicSub2Video"
	MODELTRANSCODINGVPSTEPTYPES_GRAPHIC_SUB2_TEXT ModelTranscodingVpStepTypes = "GraphicSub2Text"
	MODELTRANSCODINGVPSTEPTYPES_BURN_IN_TEXT_SUBS ModelTranscodingVpStepTypes = "BurnInTextSubs"
	MODELTRANSCODINGVPSTEPTYPES_BURN_IN_GRAPHIC_SUBS ModelTranscodingVpStepTypes = "BurnInGraphicSubs"
	MODELTRANSCODINGVPSTEPTYPES_SCALE_SUBS ModelTranscodingVpStepTypes = "ScaleSubs"
	MODELTRANSCODINGVPSTEPTYPES_TEXT_MOD ModelTranscodingVpStepTypes = "TextMod"
	MODELTRANSCODINGVPSTEPTYPES_CENSOR ModelTranscodingVpStepTypes = "Censor"
	MODELTRANSCODINGVPSTEPTYPES_SHOW_SPEAKER ModelTranscodingVpStepTypes = "ShowSpeaker"
	MODELTRANSCODINGVPSTEPTYPES_STRIP_STYLES ModelTranscodingVpStepTypes = "StripStyles"
	MODELTRANSCODINGVPSTEPTYPES_CONNECT_TO ModelTranscodingVpStepTypes = "ConnectTo"
)

// All allowed values of ModelTranscodingVpStepTypes enum
var AllowedModelTranscodingVpStepTypesEnumValues = []ModelTranscodingVpStepTypes{
	"Decoder",
	"Encoder",
	"Scaling",
	"Deinterlace",
	"SubtitleOverlay",
	"ToneMapping",
	"ColorConversion",
	"SplitCaptions",
	"TextSub2Video",
	"GraphicSub2Video",
	"GraphicSub2Text",
	"BurnInTextSubs",
	"BurnInGraphicSubs",
	"ScaleSubs",
	"TextMod",
	"Censor",
	"ShowSpeaker",
	"StripStyles",
	"ConnectTo",
}

func (v *ModelTranscodingVpStepTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelTranscodingVpStepTypes(value)
	for _, existing := range AllowedModelTranscodingVpStepTypesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelTranscodingVpStepTypes", value)
}

// NewModelTranscodingVpStepTypesFromValue returns a pointer to a valid ModelTranscodingVpStepTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelTranscodingVpStepTypesFromValue(v string) (*ModelTranscodingVpStepTypes, error) {
	ev := ModelTranscodingVpStepTypes(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelTranscodingVpStepTypes: valid values are %v", v, AllowedModelTranscodingVpStepTypesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelTranscodingVpStepTypes) IsValid() bool {
	for _, existing := range AllowedModelTranscodingVpStepTypesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Transcoding.VpStepTypes value
func (v ModelTranscodingVpStepTypes) Ptr() *ModelTranscodingVpStepTypes {
	return &v
}

type NullableModelTranscodingVpStepTypes struct {
	value *ModelTranscodingVpStepTypes
	isSet bool
}

func (v NullableModelTranscodingVpStepTypes) Get() *ModelTranscodingVpStepTypes {
	return v.value
}

func (v *NullableModelTranscodingVpStepTypes) Set(val *ModelTranscodingVpStepTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableModelTranscodingVpStepTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableModelTranscodingVpStepTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelTranscodingVpStepTypes(val *ModelTranscodingVpStepTypes) *NullableModelTranscodingVpStepTypes {
	return &NullableModelTranscodingVpStepTypes{value: val, isSet: true}
}

func (v NullableModelTranscodingVpStepTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelTranscodingVpStepTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

