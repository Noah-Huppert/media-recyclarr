/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelSyncedItemProgress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSyncedItemProgress{}

// ModelSyncedItemProgress struct for ModelSyncedItemProgress
type ModelSyncedItemProgress struct {
	Progress NullableFloat64 `json:"Progress,omitempty"`
	Status *ModelSyncJobItemStatus `json:"Status,omitempty"`
}

// NewModelSyncedItemProgress instantiates a new ModelSyncedItemProgress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSyncedItemProgress() *ModelSyncedItemProgress {
	this := ModelSyncedItemProgress{}
	return &this
}

// NewModelSyncedItemProgressWithDefaults instantiates a new ModelSyncedItemProgress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSyncedItemProgressWithDefaults() *ModelSyncedItemProgress {
	this := ModelSyncedItemProgress{}
	return &this
}

// GetProgress returns the Progress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelSyncedItemProgress) GetProgress() float64 {
	if o == nil || IsNil(o.Progress.Get()) {
		var ret float64
		return ret
	}
	return *o.Progress.Get()
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelSyncedItemProgress) GetProgressOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Progress.Get(), o.Progress.IsSet()
}

// HasProgress returns a boolean if a field has been set.
func (o *ModelSyncedItemProgress) HasProgress() bool {
	if o != nil && o.Progress.IsSet() {
		return true
	}

	return false
}

// SetProgress gets a reference to the given NullableFloat64 and assigns it to the Progress field.
func (o *ModelSyncedItemProgress) SetProgress(v float64) {
	o.Progress.Set(&v)
}
// SetProgressNil sets the value for Progress to be an explicit nil
func (o *ModelSyncedItemProgress) SetProgressNil() {
	o.Progress.Set(nil)
}

// UnsetProgress ensures that no value is present for Progress, not even an explicit nil
func (o *ModelSyncedItemProgress) UnsetProgress() {
	o.Progress.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelSyncedItemProgress) GetStatus() ModelSyncJobItemStatus {
	if o == nil || IsNil(o.Status) {
		var ret ModelSyncJobItemStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItemProgress) GetStatusOk() (*ModelSyncJobItemStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelSyncedItemProgress) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ModelSyncJobItemStatus and assigns it to the Status field.
func (o *ModelSyncedItemProgress) SetStatus(v ModelSyncJobItemStatus) {
	o.Status = &v
}

func (o ModelSyncedItemProgress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSyncedItemProgress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Progress.IsSet() {
		toSerialize["Progress"] = o.Progress.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	return toSerialize, nil
}

type NullableModelSyncedItemProgress struct {
	value *ModelSyncedItemProgress
	isSet bool
}

func (v NullableModelSyncedItemProgress) Get() *ModelSyncedItemProgress {
	return v.value
}

func (v *NullableModelSyncedItemProgress) Set(val *ModelSyncedItemProgress) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSyncedItemProgress) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSyncedItemProgress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSyncedItemProgress(val *ModelSyncedItemProgress) *NullableModelSyncedItemProgress {
	return &NullableModelSyncedItemProgress{value: val, isSet: true}
}

func (v NullableModelSyncedItemProgress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSyncedItemProgress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


