/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelLibraryUpdateLibraryOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelLibraryUpdateLibraryOptions{}

// ModelLibraryUpdateLibraryOptions struct for ModelLibraryUpdateLibraryOptions
type ModelLibraryUpdateLibraryOptions struct {
	Id *string `json:"Id,omitempty"`
	LibraryOptions *ModelLibraryOptions `json:"LibraryOptions,omitempty"`
}

// NewModelLibraryUpdateLibraryOptions instantiates a new ModelLibraryUpdateLibraryOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelLibraryUpdateLibraryOptions() *ModelLibraryUpdateLibraryOptions {
	this := ModelLibraryUpdateLibraryOptions{}
	return &this
}

// NewModelLibraryUpdateLibraryOptionsWithDefaults instantiates a new ModelLibraryUpdateLibraryOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelLibraryUpdateLibraryOptionsWithDefaults() *ModelLibraryUpdateLibraryOptions {
	this := ModelLibraryUpdateLibraryOptions{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelLibraryUpdateLibraryOptions) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryUpdateLibraryOptions) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelLibraryUpdateLibraryOptions) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelLibraryUpdateLibraryOptions) SetId(v string) {
	o.Id = &v
}

// GetLibraryOptions returns the LibraryOptions field value if set, zero value otherwise.
func (o *ModelLibraryUpdateLibraryOptions) GetLibraryOptions() ModelLibraryOptions {
	if o == nil || IsNil(o.LibraryOptions) {
		var ret ModelLibraryOptions
		return ret
	}
	return *o.LibraryOptions
}

// GetLibraryOptionsOk returns a tuple with the LibraryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryUpdateLibraryOptions) GetLibraryOptionsOk() (*ModelLibraryOptions, bool) {
	if o == nil || IsNil(o.LibraryOptions) {
		return nil, false
	}
	return o.LibraryOptions, true
}

// HasLibraryOptions returns a boolean if a field has been set.
func (o *ModelLibraryUpdateLibraryOptions) HasLibraryOptions() bool {
	if o != nil && !IsNil(o.LibraryOptions) {
		return true
	}

	return false
}

// SetLibraryOptions gets a reference to the given ModelLibraryOptions and assigns it to the LibraryOptions field.
func (o *ModelLibraryUpdateLibraryOptions) SetLibraryOptions(v ModelLibraryOptions) {
	o.LibraryOptions = &v
}

func (o ModelLibraryUpdateLibraryOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelLibraryUpdateLibraryOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.LibraryOptions) {
		toSerialize["LibraryOptions"] = o.LibraryOptions
	}
	return toSerialize, nil
}

type NullableModelLibraryUpdateLibraryOptions struct {
	value *ModelLibraryUpdateLibraryOptions
	isSet bool
}

func (v NullableModelLibraryUpdateLibraryOptions) Get() *ModelLibraryUpdateLibraryOptions {
	return v.value
}

func (v *NullableModelLibraryUpdateLibraryOptions) Set(val *ModelLibraryUpdateLibraryOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLibraryUpdateLibraryOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLibraryUpdateLibraryOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLibraryUpdateLibraryOptions(val *ModelLibraryUpdateLibraryOptions) *NullableModelLibraryUpdateLibraryOptions {
	return &NullableModelLibraryUpdateLibraryOptions{value: val, isSet: true}
}

func (v NullableModelLibraryUpdateLibraryOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLibraryUpdateLibraryOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


