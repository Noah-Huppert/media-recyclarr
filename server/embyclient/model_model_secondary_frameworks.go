/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelSecondaryFrameworks the model 'ModelSecondaryFrameworks'
type ModelSecondaryFrameworks string

// List of SecondaryFrameworks
const (
	MODELSECONDARYFRAMEWORKS_UNKNOWN ModelSecondaryFrameworks = "Unknown"
	MODELSECONDARYFRAMEWORKS_NONE ModelSecondaryFrameworks = "None"
	MODELSECONDARYFRAMEWORKS_AMD_AMF ModelSecondaryFrameworks = "AmdAmf"
	MODELSECONDARYFRAMEWORKS_MEDIA_CODEC ModelSecondaryFrameworks = "MediaCodec"
	MODELSECONDARYFRAMEWORKS_NV_ENC_DEC ModelSecondaryFrameworks = "NvEncDec"
	MODELSECONDARYFRAMEWORKS_OPEN_MAX ModelSecondaryFrameworks = "OpenMax"
	MODELSECONDARYFRAMEWORKS_QUICK_SYNC ModelSecondaryFrameworks = "QuickSync"
	MODELSECONDARYFRAMEWORKS_VA_API ModelSecondaryFrameworks = "VaApi"
	MODELSECONDARYFRAMEWORKS_V4_L2 ModelSecondaryFrameworks = "V4L2"
	MODELSECONDARYFRAMEWORKS_DX_VA ModelSecondaryFrameworks = "DxVa"
	MODELSECONDARYFRAMEWORKS_D3D11VA ModelSecondaryFrameworks = "D3d11va"
	MODELSECONDARYFRAMEWORKS_VIDEO_TOOLBOX ModelSecondaryFrameworks = "VideoToolbox"
	MODELSECONDARYFRAMEWORKS_MMAL ModelSecondaryFrameworks = "Mmal"
)

// All allowed values of ModelSecondaryFrameworks enum
var AllowedModelSecondaryFrameworksEnumValues = []ModelSecondaryFrameworks{
	"Unknown",
	"None",
	"AmdAmf",
	"MediaCodec",
	"NvEncDec",
	"OpenMax",
	"QuickSync",
	"VaApi",
	"V4L2",
	"DxVa",
	"D3d11va",
	"VideoToolbox",
	"Mmal",
}

func (v *ModelSecondaryFrameworks) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelSecondaryFrameworks(value)
	for _, existing := range AllowedModelSecondaryFrameworksEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelSecondaryFrameworks", value)
}

// NewModelSecondaryFrameworksFromValue returns a pointer to a valid ModelSecondaryFrameworks
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelSecondaryFrameworksFromValue(v string) (*ModelSecondaryFrameworks, error) {
	ev := ModelSecondaryFrameworks(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelSecondaryFrameworks: valid values are %v", v, AllowedModelSecondaryFrameworksEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelSecondaryFrameworks) IsValid() bool {
	for _, existing := range AllowedModelSecondaryFrameworksEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SecondaryFrameworks value
func (v ModelSecondaryFrameworks) Ptr() *ModelSecondaryFrameworks {
	return &v
}

type NullableModelSecondaryFrameworks struct {
	value *ModelSecondaryFrameworks
	isSet bool
}

func (v NullableModelSecondaryFrameworks) Get() *ModelSecondaryFrameworks {
	return v.value
}

func (v *NullableModelSecondaryFrameworks) Set(val *ModelSecondaryFrameworks) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSecondaryFrameworks) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSecondaryFrameworks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSecondaryFrameworks(val *ModelSecondaryFrameworks) *NullableModelSecondaryFrameworks {
	return &NullableModelSecondaryFrameworks{value: val, isSet: true}
}

func (v NullableModelSecondaryFrameworks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSecondaryFrameworks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

