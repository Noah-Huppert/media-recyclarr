/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelDisplayPreferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelDisplayPreferences{}

// ModelDisplayPreferences struct for ModelDisplayPreferences
type ModelDisplayPreferences struct {
	Id *string `json:"Id,omitempty"`
	SortBy *string `json:"SortBy,omitempty"`
	CustomPrefs *map[string]string `json:"CustomPrefs,omitempty"`
	SortOrder *ModelSortOrder `json:"SortOrder,omitempty"`
	Client *string `json:"Client,omitempty"`
}

// NewModelDisplayPreferences instantiates a new ModelDisplayPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelDisplayPreferences() *ModelDisplayPreferences {
	this := ModelDisplayPreferences{}
	return &this
}

// NewModelDisplayPreferencesWithDefaults instantiates a new ModelDisplayPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelDisplayPreferencesWithDefaults() *ModelDisplayPreferences {
	this := ModelDisplayPreferences{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelDisplayPreferences) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDisplayPreferences) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelDisplayPreferences) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelDisplayPreferences) SetId(v string) {
	o.Id = &v
}

// GetSortBy returns the SortBy field value if set, zero value otherwise.
func (o *ModelDisplayPreferences) GetSortBy() string {
	if o == nil || IsNil(o.SortBy) {
		var ret string
		return ret
	}
	return *o.SortBy
}

// GetSortByOk returns a tuple with the SortBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDisplayPreferences) GetSortByOk() (*string, bool) {
	if o == nil || IsNil(o.SortBy) {
		return nil, false
	}
	return o.SortBy, true
}

// HasSortBy returns a boolean if a field has been set.
func (o *ModelDisplayPreferences) HasSortBy() bool {
	if o != nil && !IsNil(o.SortBy) {
		return true
	}

	return false
}

// SetSortBy gets a reference to the given string and assigns it to the SortBy field.
func (o *ModelDisplayPreferences) SetSortBy(v string) {
	o.SortBy = &v
}

// GetCustomPrefs returns the CustomPrefs field value if set, zero value otherwise.
func (o *ModelDisplayPreferences) GetCustomPrefs() map[string]string {
	if o == nil || IsNil(o.CustomPrefs) {
		var ret map[string]string
		return ret
	}
	return *o.CustomPrefs
}

// GetCustomPrefsOk returns a tuple with the CustomPrefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDisplayPreferences) GetCustomPrefsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomPrefs) {
		return nil, false
	}
	return o.CustomPrefs, true
}

// HasCustomPrefs returns a boolean if a field has been set.
func (o *ModelDisplayPreferences) HasCustomPrefs() bool {
	if o != nil && !IsNil(o.CustomPrefs) {
		return true
	}

	return false
}

// SetCustomPrefs gets a reference to the given map[string]string and assigns it to the CustomPrefs field.
func (o *ModelDisplayPreferences) SetCustomPrefs(v map[string]string) {
	o.CustomPrefs = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ModelDisplayPreferences) GetSortOrder() ModelSortOrder {
	if o == nil || IsNil(o.SortOrder) {
		var ret ModelSortOrder
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDisplayPreferences) GetSortOrderOk() (*ModelSortOrder, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ModelDisplayPreferences) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given ModelSortOrder and assigns it to the SortOrder field.
func (o *ModelDisplayPreferences) SetSortOrder(v ModelSortOrder) {
	o.SortOrder = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *ModelDisplayPreferences) GetClient() string {
	if o == nil || IsNil(o.Client) {
		var ret string
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDisplayPreferences) GetClientOk() (*string, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *ModelDisplayPreferences) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given string and assigns it to the Client field.
func (o *ModelDisplayPreferences) SetClient(v string) {
	o.Client = &v
}

func (o ModelDisplayPreferences) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelDisplayPreferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.SortBy) {
		toSerialize["SortBy"] = o.SortBy
	}
	if !IsNil(o.CustomPrefs) {
		toSerialize["CustomPrefs"] = o.CustomPrefs
	}
	if !IsNil(o.SortOrder) {
		toSerialize["SortOrder"] = o.SortOrder
	}
	if !IsNil(o.Client) {
		toSerialize["Client"] = o.Client
	}
	return toSerialize, nil
}

type NullableModelDisplayPreferences struct {
	value *ModelDisplayPreferences
	isSet bool
}

func (v NullableModelDisplayPreferences) Get() *ModelDisplayPreferences {
	return v.value
}

func (v *NullableModelDisplayPreferences) Set(val *ModelDisplayPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableModelDisplayPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableModelDisplayPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelDisplayPreferences(val *ModelDisplayPreferences) *NullableModelDisplayPreferences {
	return &NullableModelDisplayPreferences{value: val, isSet: true}
}

func (v NullableModelDisplayPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelDisplayPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


