/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelLibraryAddMediaPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelLibraryAddMediaPath{}

// ModelLibraryAddMediaPath struct for ModelLibraryAddMediaPath
type ModelLibraryAddMediaPath struct {
	Id *string `json:"Id,omitempty"`
	Path *string `json:"Path,omitempty"`
	PathInfo *ModelMediaPathInfo `json:"PathInfo,omitempty"`
	RefreshLibrary *bool `json:"RefreshLibrary,omitempty"`
}

// NewModelLibraryAddMediaPath instantiates a new ModelLibraryAddMediaPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelLibraryAddMediaPath() *ModelLibraryAddMediaPath {
	this := ModelLibraryAddMediaPath{}
	return &this
}

// NewModelLibraryAddMediaPathWithDefaults instantiates a new ModelLibraryAddMediaPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelLibraryAddMediaPathWithDefaults() *ModelLibraryAddMediaPath {
	this := ModelLibraryAddMediaPath{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelLibraryAddMediaPath) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryAddMediaPath) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelLibraryAddMediaPath) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelLibraryAddMediaPath) SetId(v string) {
	o.Id = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ModelLibraryAddMediaPath) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryAddMediaPath) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ModelLibraryAddMediaPath) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ModelLibraryAddMediaPath) SetPath(v string) {
	o.Path = &v
}

// GetPathInfo returns the PathInfo field value if set, zero value otherwise.
func (o *ModelLibraryAddMediaPath) GetPathInfo() ModelMediaPathInfo {
	if o == nil || IsNil(o.PathInfo) {
		var ret ModelMediaPathInfo
		return ret
	}
	return *o.PathInfo
}

// GetPathInfoOk returns a tuple with the PathInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryAddMediaPath) GetPathInfoOk() (*ModelMediaPathInfo, bool) {
	if o == nil || IsNil(o.PathInfo) {
		return nil, false
	}
	return o.PathInfo, true
}

// HasPathInfo returns a boolean if a field has been set.
func (o *ModelLibraryAddMediaPath) HasPathInfo() bool {
	if o != nil && !IsNil(o.PathInfo) {
		return true
	}

	return false
}

// SetPathInfo gets a reference to the given ModelMediaPathInfo and assigns it to the PathInfo field.
func (o *ModelLibraryAddMediaPath) SetPathInfo(v ModelMediaPathInfo) {
	o.PathInfo = &v
}

// GetRefreshLibrary returns the RefreshLibrary field value if set, zero value otherwise.
func (o *ModelLibraryAddMediaPath) GetRefreshLibrary() bool {
	if o == nil || IsNil(o.RefreshLibrary) {
		var ret bool
		return ret
	}
	return *o.RefreshLibrary
}

// GetRefreshLibraryOk returns a tuple with the RefreshLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryAddMediaPath) GetRefreshLibraryOk() (*bool, bool) {
	if o == nil || IsNil(o.RefreshLibrary) {
		return nil, false
	}
	return o.RefreshLibrary, true
}

// HasRefreshLibrary returns a boolean if a field has been set.
func (o *ModelLibraryAddMediaPath) HasRefreshLibrary() bool {
	if o != nil && !IsNil(o.RefreshLibrary) {
		return true
	}

	return false
}

// SetRefreshLibrary gets a reference to the given bool and assigns it to the RefreshLibrary field.
func (o *ModelLibraryAddMediaPath) SetRefreshLibrary(v bool) {
	o.RefreshLibrary = &v
}

func (o ModelLibraryAddMediaPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelLibraryAddMediaPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.PathInfo) {
		toSerialize["PathInfo"] = o.PathInfo
	}
	if !IsNil(o.RefreshLibrary) {
		toSerialize["RefreshLibrary"] = o.RefreshLibrary
	}
	return toSerialize, nil
}

type NullableModelLibraryAddMediaPath struct {
	value *ModelLibraryAddMediaPath
	isSet bool
}

func (v NullableModelLibraryAddMediaPath) Get() *ModelLibraryAddMediaPath {
	return v.value
}

func (v *NullableModelLibraryAddMediaPath) Set(val *ModelLibraryAddMediaPath) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLibraryAddMediaPath) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLibraryAddMediaPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLibraryAddMediaPath(val *ModelLibraryAddMediaPath) *NullableModelLibraryAddMediaPath {
	return &NullableModelLibraryAddMediaPath{value: val, isSet: true}
}

func (v NullableModelLibraryAddMediaPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLibraryAddMediaPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


