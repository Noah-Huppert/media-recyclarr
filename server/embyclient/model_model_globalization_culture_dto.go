/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelGlobalizationCultureDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelGlobalizationCultureDto{}

// ModelGlobalizationCultureDto struct for ModelGlobalizationCultureDto
type ModelGlobalizationCultureDto struct {
	Name *string `json:"Name,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	TwoLetterISOLanguageName *string `json:"TwoLetterISOLanguageName,omitempty"`
	ThreeLetterISOLanguageName *string `json:"ThreeLetterISOLanguageName,omitempty"`
	ThreeLetterISOLanguageNames []string `json:"ThreeLetterISOLanguageNames,omitempty"`
	TwoLetterISOLanguageNames []string `json:"TwoLetterISOLanguageNames,omitempty"`
}

// NewModelGlobalizationCultureDto instantiates a new ModelGlobalizationCultureDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelGlobalizationCultureDto() *ModelGlobalizationCultureDto {
	this := ModelGlobalizationCultureDto{}
	return &this
}

// NewModelGlobalizationCultureDtoWithDefaults instantiates a new ModelGlobalizationCultureDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelGlobalizationCultureDtoWithDefaults() *ModelGlobalizationCultureDto {
	this := ModelGlobalizationCultureDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelGlobalizationCultureDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGlobalizationCultureDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelGlobalizationCultureDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelGlobalizationCultureDto) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelGlobalizationCultureDto) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGlobalizationCultureDto) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelGlobalizationCultureDto) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelGlobalizationCultureDto) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetTwoLetterISOLanguageName returns the TwoLetterISOLanguageName field value if set, zero value otherwise.
func (o *ModelGlobalizationCultureDto) GetTwoLetterISOLanguageName() string {
	if o == nil || IsNil(o.TwoLetterISOLanguageName) {
		var ret string
		return ret
	}
	return *o.TwoLetterISOLanguageName
}

// GetTwoLetterISOLanguageNameOk returns a tuple with the TwoLetterISOLanguageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGlobalizationCultureDto) GetTwoLetterISOLanguageNameOk() (*string, bool) {
	if o == nil || IsNil(o.TwoLetterISOLanguageName) {
		return nil, false
	}
	return o.TwoLetterISOLanguageName, true
}

// HasTwoLetterISOLanguageName returns a boolean if a field has been set.
func (o *ModelGlobalizationCultureDto) HasTwoLetterISOLanguageName() bool {
	if o != nil && !IsNil(o.TwoLetterISOLanguageName) {
		return true
	}

	return false
}

// SetTwoLetterISOLanguageName gets a reference to the given string and assigns it to the TwoLetterISOLanguageName field.
func (o *ModelGlobalizationCultureDto) SetTwoLetterISOLanguageName(v string) {
	o.TwoLetterISOLanguageName = &v
}

// GetThreeLetterISOLanguageName returns the ThreeLetterISOLanguageName field value if set, zero value otherwise.
func (o *ModelGlobalizationCultureDto) GetThreeLetterISOLanguageName() string {
	if o == nil || IsNil(o.ThreeLetterISOLanguageName) {
		var ret string
		return ret
	}
	return *o.ThreeLetterISOLanguageName
}

// GetThreeLetterISOLanguageNameOk returns a tuple with the ThreeLetterISOLanguageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGlobalizationCultureDto) GetThreeLetterISOLanguageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ThreeLetterISOLanguageName) {
		return nil, false
	}
	return o.ThreeLetterISOLanguageName, true
}

// HasThreeLetterISOLanguageName returns a boolean if a field has been set.
func (o *ModelGlobalizationCultureDto) HasThreeLetterISOLanguageName() bool {
	if o != nil && !IsNil(o.ThreeLetterISOLanguageName) {
		return true
	}

	return false
}

// SetThreeLetterISOLanguageName gets a reference to the given string and assigns it to the ThreeLetterISOLanguageName field.
func (o *ModelGlobalizationCultureDto) SetThreeLetterISOLanguageName(v string) {
	o.ThreeLetterISOLanguageName = &v
}

// GetThreeLetterISOLanguageNames returns the ThreeLetterISOLanguageNames field value if set, zero value otherwise.
func (o *ModelGlobalizationCultureDto) GetThreeLetterISOLanguageNames() []string {
	if o == nil || IsNil(o.ThreeLetterISOLanguageNames) {
		var ret []string
		return ret
	}
	return o.ThreeLetterISOLanguageNames
}

// GetThreeLetterISOLanguageNamesOk returns a tuple with the ThreeLetterISOLanguageNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGlobalizationCultureDto) GetThreeLetterISOLanguageNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ThreeLetterISOLanguageNames) {
		return nil, false
	}
	return o.ThreeLetterISOLanguageNames, true
}

// HasThreeLetterISOLanguageNames returns a boolean if a field has been set.
func (o *ModelGlobalizationCultureDto) HasThreeLetterISOLanguageNames() bool {
	if o != nil && !IsNil(o.ThreeLetterISOLanguageNames) {
		return true
	}

	return false
}

// SetThreeLetterISOLanguageNames gets a reference to the given []string and assigns it to the ThreeLetterISOLanguageNames field.
func (o *ModelGlobalizationCultureDto) SetThreeLetterISOLanguageNames(v []string) {
	o.ThreeLetterISOLanguageNames = v
}

// GetTwoLetterISOLanguageNames returns the TwoLetterISOLanguageNames field value if set, zero value otherwise.
func (o *ModelGlobalizationCultureDto) GetTwoLetterISOLanguageNames() []string {
	if o == nil || IsNil(o.TwoLetterISOLanguageNames) {
		var ret []string
		return ret
	}
	return o.TwoLetterISOLanguageNames
}

// GetTwoLetterISOLanguageNamesOk returns a tuple with the TwoLetterISOLanguageNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGlobalizationCultureDto) GetTwoLetterISOLanguageNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.TwoLetterISOLanguageNames) {
		return nil, false
	}
	return o.TwoLetterISOLanguageNames, true
}

// HasTwoLetterISOLanguageNames returns a boolean if a field has been set.
func (o *ModelGlobalizationCultureDto) HasTwoLetterISOLanguageNames() bool {
	if o != nil && !IsNil(o.TwoLetterISOLanguageNames) {
		return true
	}

	return false
}

// SetTwoLetterISOLanguageNames gets a reference to the given []string and assigns it to the TwoLetterISOLanguageNames field.
func (o *ModelGlobalizationCultureDto) SetTwoLetterISOLanguageNames(v []string) {
	o.TwoLetterISOLanguageNames = v
}

func (o ModelGlobalizationCultureDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelGlobalizationCultureDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !IsNil(o.TwoLetterISOLanguageName) {
		toSerialize["TwoLetterISOLanguageName"] = o.TwoLetterISOLanguageName
	}
	if !IsNil(o.ThreeLetterISOLanguageName) {
		toSerialize["ThreeLetterISOLanguageName"] = o.ThreeLetterISOLanguageName
	}
	if !IsNil(o.ThreeLetterISOLanguageNames) {
		toSerialize["ThreeLetterISOLanguageNames"] = o.ThreeLetterISOLanguageNames
	}
	if !IsNil(o.TwoLetterISOLanguageNames) {
		toSerialize["TwoLetterISOLanguageNames"] = o.TwoLetterISOLanguageNames
	}
	return toSerialize, nil
}

type NullableModelGlobalizationCultureDto struct {
	value *ModelGlobalizationCultureDto
	isSet bool
}

func (v NullableModelGlobalizationCultureDto) Get() *ModelGlobalizationCultureDto {
	return v.value
}

func (v *NullableModelGlobalizationCultureDto) Set(val *ModelGlobalizationCultureDto) {
	v.value = val
	v.isSet = true
}

func (v NullableModelGlobalizationCultureDto) IsSet() bool {
	return v.isSet
}

func (v *NullableModelGlobalizationCultureDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelGlobalizationCultureDto(val *ModelGlobalizationCultureDto) *NullableModelGlobalizationCultureDto {
	return &NullableModelGlobalizationCultureDto{value: val, isSet: true}
}

func (v NullableModelGlobalizationCultureDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelGlobalizationCultureDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


