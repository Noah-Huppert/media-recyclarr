/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelSessionSessionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSessionSessionInfo{}

// ModelSessionSessionInfo struct for ModelSessionSessionInfo
type ModelSessionSessionInfo struct {
	PlayState *ModelPlayerStateInfo `json:"PlayState,omitempty"`
	AdditionalUsers []ModelSessionUserInfo `json:"AdditionalUsers,omitempty"`
	RemoteEndPoint *string `json:"RemoteEndPoint,omitempty"`
	Protocol *string `json:"Protocol,omitempty"`
	PlayableMediaTypes []string `json:"PlayableMediaTypes,omitempty"`
	PlaylistItemId *string `json:"PlaylistItemId,omitempty"`
	PlaylistIndex *int32 `json:"PlaylistIndex,omitempty"`
	PlaylistLength *int32 `json:"PlaylistLength,omitempty"`
	Id *string `json:"Id,omitempty"`
	ServerId *string `json:"ServerId,omitempty"`
	UserId *string `json:"UserId,omitempty"`
	UserName *string `json:"UserName,omitempty"`
	UserPrimaryImageTag *string `json:"UserPrimaryImageTag,omitempty"`
	Client *string `json:"Client,omitempty"`
	LastActivityDate *time.Time `json:"LastActivityDate,omitempty"`
	DeviceName *string `json:"DeviceName,omitempty"`
	DeviceType *string `json:"DeviceType,omitempty"`
	NowPlayingItem *ModelBaseItemDto `json:"NowPlayingItem,omitempty"`
	InternalDeviceId *int64 `json:"InternalDeviceId,omitempty"`
	DeviceId *string `json:"DeviceId,omitempty"`
	ApplicationVersion *string `json:"ApplicationVersion,omitempty"`
	AppIconUrl *string `json:"AppIconUrl,omitempty"`
	SupportedCommands []string `json:"SupportedCommands,omitempty"`
	TranscodingInfo *ModelTranscodingInfo `json:"TranscodingInfo,omitempty"`
	SupportsRemoteControl *bool `json:"SupportsRemoteControl,omitempty"`
}

// NewModelSessionSessionInfo instantiates a new ModelSessionSessionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSessionSessionInfo() *ModelSessionSessionInfo {
	this := ModelSessionSessionInfo{}
	return &this
}

// NewModelSessionSessionInfoWithDefaults instantiates a new ModelSessionSessionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSessionSessionInfoWithDefaults() *ModelSessionSessionInfo {
	this := ModelSessionSessionInfo{}
	return &this
}

// GetPlayState returns the PlayState field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetPlayState() ModelPlayerStateInfo {
	if o == nil || IsNil(o.PlayState) {
		var ret ModelPlayerStateInfo
		return ret
	}
	return *o.PlayState
}

// GetPlayStateOk returns a tuple with the PlayState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetPlayStateOk() (*ModelPlayerStateInfo, bool) {
	if o == nil || IsNil(o.PlayState) {
		return nil, false
	}
	return o.PlayState, true
}

// HasPlayState returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasPlayState() bool {
	if o != nil && !IsNil(o.PlayState) {
		return true
	}

	return false
}

// SetPlayState gets a reference to the given ModelPlayerStateInfo and assigns it to the PlayState field.
func (o *ModelSessionSessionInfo) SetPlayState(v ModelPlayerStateInfo) {
	o.PlayState = &v
}

// GetAdditionalUsers returns the AdditionalUsers field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetAdditionalUsers() []ModelSessionUserInfo {
	if o == nil || IsNil(o.AdditionalUsers) {
		var ret []ModelSessionUserInfo
		return ret
	}
	return o.AdditionalUsers
}

// GetAdditionalUsersOk returns a tuple with the AdditionalUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetAdditionalUsersOk() ([]ModelSessionUserInfo, bool) {
	if o == nil || IsNil(o.AdditionalUsers) {
		return nil, false
	}
	return o.AdditionalUsers, true
}

// HasAdditionalUsers returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasAdditionalUsers() bool {
	if o != nil && !IsNil(o.AdditionalUsers) {
		return true
	}

	return false
}

// SetAdditionalUsers gets a reference to the given []ModelSessionUserInfo and assigns it to the AdditionalUsers field.
func (o *ModelSessionSessionInfo) SetAdditionalUsers(v []ModelSessionUserInfo) {
	o.AdditionalUsers = v
}

// GetRemoteEndPoint returns the RemoteEndPoint field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetRemoteEndPoint() string {
	if o == nil || IsNil(o.RemoteEndPoint) {
		var ret string
		return ret
	}
	return *o.RemoteEndPoint
}

// GetRemoteEndPointOk returns a tuple with the RemoteEndPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetRemoteEndPointOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteEndPoint) {
		return nil, false
	}
	return o.RemoteEndPoint, true
}

// HasRemoteEndPoint returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasRemoteEndPoint() bool {
	if o != nil && !IsNil(o.RemoteEndPoint) {
		return true
	}

	return false
}

// SetRemoteEndPoint gets a reference to the given string and assigns it to the RemoteEndPoint field.
func (o *ModelSessionSessionInfo) SetRemoteEndPoint(v string) {
	o.RemoteEndPoint = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *ModelSessionSessionInfo) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPlayableMediaTypes returns the PlayableMediaTypes field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetPlayableMediaTypes() []string {
	if o == nil || IsNil(o.PlayableMediaTypes) {
		var ret []string
		return ret
	}
	return o.PlayableMediaTypes
}

// GetPlayableMediaTypesOk returns a tuple with the PlayableMediaTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetPlayableMediaTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.PlayableMediaTypes) {
		return nil, false
	}
	return o.PlayableMediaTypes, true
}

// HasPlayableMediaTypes returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasPlayableMediaTypes() bool {
	if o != nil && !IsNil(o.PlayableMediaTypes) {
		return true
	}

	return false
}

// SetPlayableMediaTypes gets a reference to the given []string and assigns it to the PlayableMediaTypes field.
func (o *ModelSessionSessionInfo) SetPlayableMediaTypes(v []string) {
	o.PlayableMediaTypes = v
}

// GetPlaylistItemId returns the PlaylistItemId field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetPlaylistItemId() string {
	if o == nil || IsNil(o.PlaylistItemId) {
		var ret string
		return ret
	}
	return *o.PlaylistItemId
}

// GetPlaylistItemIdOk returns a tuple with the PlaylistItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetPlaylistItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlaylistItemId) {
		return nil, false
	}
	return o.PlaylistItemId, true
}

// HasPlaylistItemId returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasPlaylistItemId() bool {
	if o != nil && !IsNil(o.PlaylistItemId) {
		return true
	}

	return false
}

// SetPlaylistItemId gets a reference to the given string and assigns it to the PlaylistItemId field.
func (o *ModelSessionSessionInfo) SetPlaylistItemId(v string) {
	o.PlaylistItemId = &v
}

// GetPlaylistIndex returns the PlaylistIndex field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetPlaylistIndex() int32 {
	if o == nil || IsNil(o.PlaylistIndex) {
		var ret int32
		return ret
	}
	return *o.PlaylistIndex
}

// GetPlaylistIndexOk returns a tuple with the PlaylistIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetPlaylistIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PlaylistIndex) {
		return nil, false
	}
	return o.PlaylistIndex, true
}

// HasPlaylistIndex returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasPlaylistIndex() bool {
	if o != nil && !IsNil(o.PlaylistIndex) {
		return true
	}

	return false
}

// SetPlaylistIndex gets a reference to the given int32 and assigns it to the PlaylistIndex field.
func (o *ModelSessionSessionInfo) SetPlaylistIndex(v int32) {
	o.PlaylistIndex = &v
}

// GetPlaylistLength returns the PlaylistLength field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetPlaylistLength() int32 {
	if o == nil || IsNil(o.PlaylistLength) {
		var ret int32
		return ret
	}
	return *o.PlaylistLength
}

// GetPlaylistLengthOk returns a tuple with the PlaylistLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetPlaylistLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PlaylistLength) {
		return nil, false
	}
	return o.PlaylistLength, true
}

// HasPlaylistLength returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasPlaylistLength() bool {
	if o != nil && !IsNil(o.PlaylistLength) {
		return true
	}

	return false
}

// SetPlaylistLength gets a reference to the given int32 and assigns it to the PlaylistLength field.
func (o *ModelSessionSessionInfo) SetPlaylistLength(v int32) {
	o.PlaylistLength = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelSessionSessionInfo) SetId(v string) {
	o.Id = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *ModelSessionSessionInfo) SetServerId(v string) {
	o.ServerId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelSessionSessionInfo) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *ModelSessionSessionInfo) SetUserName(v string) {
	o.UserName = &v
}

// GetUserPrimaryImageTag returns the UserPrimaryImageTag field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetUserPrimaryImageTag() string {
	if o == nil || IsNil(o.UserPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.UserPrimaryImageTag
}

// GetUserPrimaryImageTagOk returns a tuple with the UserPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetUserPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.UserPrimaryImageTag) {
		return nil, false
	}
	return o.UserPrimaryImageTag, true
}

// HasUserPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasUserPrimaryImageTag() bool {
	if o != nil && !IsNil(o.UserPrimaryImageTag) {
		return true
	}

	return false
}

// SetUserPrimaryImageTag gets a reference to the given string and assigns it to the UserPrimaryImageTag field.
func (o *ModelSessionSessionInfo) SetUserPrimaryImageTag(v string) {
	o.UserPrimaryImageTag = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetClient() string {
	if o == nil || IsNil(o.Client) {
		var ret string
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetClientOk() (*string, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given string and assigns it to the Client field.
func (o *ModelSessionSessionInfo) SetClient(v string) {
	o.Client = &v
}

// GetLastActivityDate returns the LastActivityDate field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetLastActivityDate() time.Time {
	if o == nil || IsNil(o.LastActivityDate) {
		var ret time.Time
		return ret
	}
	return *o.LastActivityDate
}

// GetLastActivityDateOk returns a tuple with the LastActivityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetLastActivityDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastActivityDate) {
		return nil, false
	}
	return o.LastActivityDate, true
}

// HasLastActivityDate returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasLastActivityDate() bool {
	if o != nil && !IsNil(o.LastActivityDate) {
		return true
	}

	return false
}

// SetLastActivityDate gets a reference to the given time.Time and assigns it to the LastActivityDate field.
func (o *ModelSessionSessionInfo) SetLastActivityDate(v time.Time) {
	o.LastActivityDate = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *ModelSessionSessionInfo) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *ModelSessionSessionInfo) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetNowPlayingItem returns the NowPlayingItem field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetNowPlayingItem() ModelBaseItemDto {
	if o == nil || IsNil(o.NowPlayingItem) {
		var ret ModelBaseItemDto
		return ret
	}
	return *o.NowPlayingItem
}

// GetNowPlayingItemOk returns a tuple with the NowPlayingItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetNowPlayingItemOk() (*ModelBaseItemDto, bool) {
	if o == nil || IsNil(o.NowPlayingItem) {
		return nil, false
	}
	return o.NowPlayingItem, true
}

// HasNowPlayingItem returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasNowPlayingItem() bool {
	if o != nil && !IsNil(o.NowPlayingItem) {
		return true
	}

	return false
}

// SetNowPlayingItem gets a reference to the given ModelBaseItemDto and assigns it to the NowPlayingItem field.
func (o *ModelSessionSessionInfo) SetNowPlayingItem(v ModelBaseItemDto) {
	o.NowPlayingItem = &v
}

// GetInternalDeviceId returns the InternalDeviceId field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetInternalDeviceId() int64 {
	if o == nil || IsNil(o.InternalDeviceId) {
		var ret int64
		return ret
	}
	return *o.InternalDeviceId
}

// GetInternalDeviceIdOk returns a tuple with the InternalDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetInternalDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InternalDeviceId) {
		return nil, false
	}
	return o.InternalDeviceId, true
}

// HasInternalDeviceId returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasInternalDeviceId() bool {
	if o != nil && !IsNil(o.InternalDeviceId) {
		return true
	}

	return false
}

// SetInternalDeviceId gets a reference to the given int64 and assigns it to the InternalDeviceId field.
func (o *ModelSessionSessionInfo) SetInternalDeviceId(v int64) {
	o.InternalDeviceId = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *ModelSessionSessionInfo) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetApplicationVersion returns the ApplicationVersion field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetApplicationVersion() string {
	if o == nil || IsNil(o.ApplicationVersion) {
		var ret string
		return ret
	}
	return *o.ApplicationVersion
}

// GetApplicationVersionOk returns a tuple with the ApplicationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetApplicationVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationVersion) {
		return nil, false
	}
	return o.ApplicationVersion, true
}

// HasApplicationVersion returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasApplicationVersion() bool {
	if o != nil && !IsNil(o.ApplicationVersion) {
		return true
	}

	return false
}

// SetApplicationVersion gets a reference to the given string and assigns it to the ApplicationVersion field.
func (o *ModelSessionSessionInfo) SetApplicationVersion(v string) {
	o.ApplicationVersion = &v
}

// GetAppIconUrl returns the AppIconUrl field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetAppIconUrl() string {
	if o == nil || IsNil(o.AppIconUrl) {
		var ret string
		return ret
	}
	return *o.AppIconUrl
}

// GetAppIconUrlOk returns a tuple with the AppIconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetAppIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AppIconUrl) {
		return nil, false
	}
	return o.AppIconUrl, true
}

// HasAppIconUrl returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasAppIconUrl() bool {
	if o != nil && !IsNil(o.AppIconUrl) {
		return true
	}

	return false
}

// SetAppIconUrl gets a reference to the given string and assigns it to the AppIconUrl field.
func (o *ModelSessionSessionInfo) SetAppIconUrl(v string) {
	o.AppIconUrl = &v
}

// GetSupportedCommands returns the SupportedCommands field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetSupportedCommands() []string {
	if o == nil || IsNil(o.SupportedCommands) {
		var ret []string
		return ret
	}
	return o.SupportedCommands
}

// GetSupportedCommandsOk returns a tuple with the SupportedCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetSupportedCommandsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedCommands) {
		return nil, false
	}
	return o.SupportedCommands, true
}

// HasSupportedCommands returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasSupportedCommands() bool {
	if o != nil && !IsNil(o.SupportedCommands) {
		return true
	}

	return false
}

// SetSupportedCommands gets a reference to the given []string and assigns it to the SupportedCommands field.
func (o *ModelSessionSessionInfo) SetSupportedCommands(v []string) {
	o.SupportedCommands = v
}

// GetTranscodingInfo returns the TranscodingInfo field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetTranscodingInfo() ModelTranscodingInfo {
	if o == nil || IsNil(o.TranscodingInfo) {
		var ret ModelTranscodingInfo
		return ret
	}
	return *o.TranscodingInfo
}

// GetTranscodingInfoOk returns a tuple with the TranscodingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetTranscodingInfoOk() (*ModelTranscodingInfo, bool) {
	if o == nil || IsNil(o.TranscodingInfo) {
		return nil, false
	}
	return o.TranscodingInfo, true
}

// HasTranscodingInfo returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasTranscodingInfo() bool {
	if o != nil && !IsNil(o.TranscodingInfo) {
		return true
	}

	return false
}

// SetTranscodingInfo gets a reference to the given ModelTranscodingInfo and assigns it to the TranscodingInfo field.
func (o *ModelSessionSessionInfo) SetTranscodingInfo(v ModelTranscodingInfo) {
	o.TranscodingInfo = &v
}

// GetSupportsRemoteControl returns the SupportsRemoteControl field value if set, zero value otherwise.
func (o *ModelSessionSessionInfo) GetSupportsRemoteControl() bool {
	if o == nil || IsNil(o.SupportsRemoteControl) {
		var ret bool
		return ret
	}
	return *o.SupportsRemoteControl
}

// GetSupportsRemoteControlOk returns a tuple with the SupportsRemoteControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSessionSessionInfo) GetSupportsRemoteControlOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsRemoteControl) {
		return nil, false
	}
	return o.SupportsRemoteControl, true
}

// HasSupportsRemoteControl returns a boolean if a field has been set.
func (o *ModelSessionSessionInfo) HasSupportsRemoteControl() bool {
	if o != nil && !IsNil(o.SupportsRemoteControl) {
		return true
	}

	return false
}

// SetSupportsRemoteControl gets a reference to the given bool and assigns it to the SupportsRemoteControl field.
func (o *ModelSessionSessionInfo) SetSupportsRemoteControl(v bool) {
	o.SupportsRemoteControl = &v
}

func (o ModelSessionSessionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSessionSessionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlayState) {
		toSerialize["PlayState"] = o.PlayState
	}
	if !IsNil(o.AdditionalUsers) {
		toSerialize["AdditionalUsers"] = o.AdditionalUsers
	}
	if !IsNil(o.RemoteEndPoint) {
		toSerialize["RemoteEndPoint"] = o.RemoteEndPoint
	}
	if !IsNil(o.Protocol) {
		toSerialize["Protocol"] = o.Protocol
	}
	if !IsNil(o.PlayableMediaTypes) {
		toSerialize["PlayableMediaTypes"] = o.PlayableMediaTypes
	}
	if !IsNil(o.PlaylistItemId) {
		toSerialize["PlaylistItemId"] = o.PlaylistItemId
	}
	if !IsNil(o.PlaylistIndex) {
		toSerialize["PlaylistIndex"] = o.PlaylistIndex
	}
	if !IsNil(o.PlaylistLength) {
		toSerialize["PlaylistLength"] = o.PlaylistLength
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !IsNil(o.UserId) {
		toSerialize["UserId"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["UserName"] = o.UserName
	}
	if !IsNil(o.UserPrimaryImageTag) {
		toSerialize["UserPrimaryImageTag"] = o.UserPrimaryImageTag
	}
	if !IsNil(o.Client) {
		toSerialize["Client"] = o.Client
	}
	if !IsNil(o.LastActivityDate) {
		toSerialize["LastActivityDate"] = o.LastActivityDate
	}
	if !IsNil(o.DeviceName) {
		toSerialize["DeviceName"] = o.DeviceName
	}
	if !IsNil(o.DeviceType) {
		toSerialize["DeviceType"] = o.DeviceType
	}
	if !IsNil(o.NowPlayingItem) {
		toSerialize["NowPlayingItem"] = o.NowPlayingItem
	}
	if !IsNil(o.InternalDeviceId) {
		toSerialize["InternalDeviceId"] = o.InternalDeviceId
	}
	if !IsNil(o.DeviceId) {
		toSerialize["DeviceId"] = o.DeviceId
	}
	if !IsNil(o.ApplicationVersion) {
		toSerialize["ApplicationVersion"] = o.ApplicationVersion
	}
	if !IsNil(o.AppIconUrl) {
		toSerialize["AppIconUrl"] = o.AppIconUrl
	}
	if !IsNil(o.SupportedCommands) {
		toSerialize["SupportedCommands"] = o.SupportedCommands
	}
	if !IsNil(o.TranscodingInfo) {
		toSerialize["TranscodingInfo"] = o.TranscodingInfo
	}
	if !IsNil(o.SupportsRemoteControl) {
		toSerialize["SupportsRemoteControl"] = o.SupportsRemoteControl
	}
	return toSerialize, nil
}

type NullableModelSessionSessionInfo struct {
	value *ModelSessionSessionInfo
	isSet bool
}

func (v NullableModelSessionSessionInfo) Get() *ModelSessionSessionInfo {
	return v.value
}

func (v *NullableModelSessionSessionInfo) Set(val *ModelSessionSessionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSessionSessionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSessionSessionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSessionSessionInfo(val *ModelSessionSessionInfo) *NullableModelSessionSessionInfo {
	return &NullableModelSessionSessionInfo{value: val, isSet: true}
}

func (v NullableModelSessionSessionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSessionSessionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


