/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelPlaylistsAddToPlaylistResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelPlaylistsAddToPlaylistResult{}

// ModelPlaylistsAddToPlaylistResult struct for ModelPlaylistsAddToPlaylistResult
type ModelPlaylistsAddToPlaylistResult struct {
	Id *string `json:"Id,omitempty"`
	ItemAddedCount *int32 `json:"ItemAddedCount,omitempty"`
}

// NewModelPlaylistsAddToPlaylistResult instantiates a new ModelPlaylistsAddToPlaylistResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelPlaylistsAddToPlaylistResult() *ModelPlaylistsAddToPlaylistResult {
	this := ModelPlaylistsAddToPlaylistResult{}
	return &this
}

// NewModelPlaylistsAddToPlaylistResultWithDefaults instantiates a new ModelPlaylistsAddToPlaylistResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelPlaylistsAddToPlaylistResultWithDefaults() *ModelPlaylistsAddToPlaylistResult {
	this := ModelPlaylistsAddToPlaylistResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelPlaylistsAddToPlaylistResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaylistsAddToPlaylistResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelPlaylistsAddToPlaylistResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelPlaylistsAddToPlaylistResult) SetId(v string) {
	o.Id = &v
}

// GetItemAddedCount returns the ItemAddedCount field value if set, zero value otherwise.
func (o *ModelPlaylistsAddToPlaylistResult) GetItemAddedCount() int32 {
	if o == nil || IsNil(o.ItemAddedCount) {
		var ret int32
		return ret
	}
	return *o.ItemAddedCount
}

// GetItemAddedCountOk returns a tuple with the ItemAddedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaylistsAddToPlaylistResult) GetItemAddedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemAddedCount) {
		return nil, false
	}
	return o.ItemAddedCount, true
}

// HasItemAddedCount returns a boolean if a field has been set.
func (o *ModelPlaylistsAddToPlaylistResult) HasItemAddedCount() bool {
	if o != nil && !IsNil(o.ItemAddedCount) {
		return true
	}

	return false
}

// SetItemAddedCount gets a reference to the given int32 and assigns it to the ItemAddedCount field.
func (o *ModelPlaylistsAddToPlaylistResult) SetItemAddedCount(v int32) {
	o.ItemAddedCount = &v
}

func (o ModelPlaylistsAddToPlaylistResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelPlaylistsAddToPlaylistResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ItemAddedCount) {
		toSerialize["ItemAddedCount"] = o.ItemAddedCount
	}
	return toSerialize, nil
}

type NullableModelPlaylistsAddToPlaylistResult struct {
	value *ModelPlaylistsAddToPlaylistResult
	isSet bool
}

func (v NullableModelPlaylistsAddToPlaylistResult) Get() *ModelPlaylistsAddToPlaylistResult {
	return v.value
}

func (v *NullableModelPlaylistsAddToPlaylistResult) Set(val *ModelPlaylistsAddToPlaylistResult) {
	v.value = val
	v.isSet = true
}

func (v NullableModelPlaylistsAddToPlaylistResult) IsSet() bool {
	return v.isSet
}

func (v *NullableModelPlaylistsAddToPlaylistResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelPlaylistsAddToPlaylistResult(val *ModelPlaylistsAddToPlaylistResult) *NullableModelPlaylistsAddToPlaylistResult {
	return &NullableModelPlaylistsAddToPlaylistResult{value: val, isSet: true}
}

func (v NullableModelPlaylistsAddToPlaylistResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelPlaylistsAddToPlaylistResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


