/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelRemoteImageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelRemoteImageInfo{}

// ModelRemoteImageInfo struct for ModelRemoteImageInfo
type ModelRemoteImageInfo struct {
	ProviderName *string `json:"ProviderName,omitempty"`
	Url *string `json:"Url,omitempty"`
	ThumbnailUrl *string `json:"ThumbnailUrl,omitempty"`
	Height NullableInt32 `json:"Height,omitempty"`
	Width NullableInt32 `json:"Width,omitempty"`
	CommunityRating NullableFloat64 `json:"CommunityRating,omitempty"`
	VoteCount NullableInt32 `json:"VoteCount,omitempty"`
	Language *string `json:"Language,omitempty"`
	DisplayLanguage *string `json:"DisplayLanguage,omitempty"`
	Type *ModelImageType `json:"Type,omitempty"`
	RatingType *ModelRatingType `json:"RatingType,omitempty"`
}

// NewModelRemoteImageInfo instantiates a new ModelRemoteImageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelRemoteImageInfo() *ModelRemoteImageInfo {
	this := ModelRemoteImageInfo{}
	return &this
}

// NewModelRemoteImageInfoWithDefaults instantiates a new ModelRemoteImageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelRemoteImageInfoWithDefaults() *ModelRemoteImageInfo {
	this := ModelRemoteImageInfo{}
	return &this
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *ModelRemoteImageInfo) GetProviderName() string {
	if o == nil || IsNil(o.ProviderName) {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteImageInfo) GetProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderName) {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasProviderName() bool {
	if o != nil && !IsNil(o.ProviderName) {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *ModelRemoteImageInfo) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ModelRemoteImageInfo) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteImageInfo) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ModelRemoteImageInfo) SetUrl(v string) {
	o.Url = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *ModelRemoteImageInfo) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteImageInfo) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *ModelRemoteImageInfo) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetHeight returns the Height field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteImageInfo) GetHeight() int32 {
	if o == nil || IsNil(o.Height.Get()) {
		var ret int32
		return ret
	}
	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteImageInfo) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// HasHeight returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasHeight() bool {
	if o != nil && o.Height.IsSet() {
		return true
	}

	return false
}

// SetHeight gets a reference to the given NullableInt32 and assigns it to the Height field.
func (o *ModelRemoteImageInfo) SetHeight(v int32) {
	o.Height.Set(&v)
}
// SetHeightNil sets the value for Height to be an explicit nil
func (o *ModelRemoteImageInfo) SetHeightNil() {
	o.Height.Set(nil)
}

// UnsetHeight ensures that no value is present for Height, not even an explicit nil
func (o *ModelRemoteImageInfo) UnsetHeight() {
	o.Height.Unset()
}

// GetWidth returns the Width field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteImageInfo) GetWidth() int32 {
	if o == nil || IsNil(o.Width.Get()) {
		var ret int32
		return ret
	}
	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteImageInfo) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// HasWidth returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasWidth() bool {
	if o != nil && o.Width.IsSet() {
		return true
	}

	return false
}

// SetWidth gets a reference to the given NullableInt32 and assigns it to the Width field.
func (o *ModelRemoteImageInfo) SetWidth(v int32) {
	o.Width.Set(&v)
}
// SetWidthNil sets the value for Width to be an explicit nil
func (o *ModelRemoteImageInfo) SetWidthNil() {
	o.Width.Set(nil)
}

// UnsetWidth ensures that no value is present for Width, not even an explicit nil
func (o *ModelRemoteImageInfo) UnsetWidth() {
	o.Width.Unset()
}

// GetCommunityRating returns the CommunityRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteImageInfo) GetCommunityRating() float64 {
	if o == nil || IsNil(o.CommunityRating.Get()) {
		var ret float64
		return ret
	}
	return *o.CommunityRating.Get()
}

// GetCommunityRatingOk returns a tuple with the CommunityRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteImageInfo) GetCommunityRatingOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommunityRating.Get(), o.CommunityRating.IsSet()
}

// HasCommunityRating returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasCommunityRating() bool {
	if o != nil && o.CommunityRating.IsSet() {
		return true
	}

	return false
}

// SetCommunityRating gets a reference to the given NullableFloat64 and assigns it to the CommunityRating field.
func (o *ModelRemoteImageInfo) SetCommunityRating(v float64) {
	o.CommunityRating.Set(&v)
}
// SetCommunityRatingNil sets the value for CommunityRating to be an explicit nil
func (o *ModelRemoteImageInfo) SetCommunityRatingNil() {
	o.CommunityRating.Set(nil)
}

// UnsetCommunityRating ensures that no value is present for CommunityRating, not even an explicit nil
func (o *ModelRemoteImageInfo) UnsetCommunityRating() {
	o.CommunityRating.Unset()
}

// GetVoteCount returns the VoteCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteImageInfo) GetVoteCount() int32 {
	if o == nil || IsNil(o.VoteCount.Get()) {
		var ret int32
		return ret
	}
	return *o.VoteCount.Get()
}

// GetVoteCountOk returns a tuple with the VoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteImageInfo) GetVoteCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoteCount.Get(), o.VoteCount.IsSet()
}

// HasVoteCount returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasVoteCount() bool {
	if o != nil && o.VoteCount.IsSet() {
		return true
	}

	return false
}

// SetVoteCount gets a reference to the given NullableInt32 and assigns it to the VoteCount field.
func (o *ModelRemoteImageInfo) SetVoteCount(v int32) {
	o.VoteCount.Set(&v)
}
// SetVoteCountNil sets the value for VoteCount to be an explicit nil
func (o *ModelRemoteImageInfo) SetVoteCountNil() {
	o.VoteCount.Set(nil)
}

// UnsetVoteCount ensures that no value is present for VoteCount, not even an explicit nil
func (o *ModelRemoteImageInfo) UnsetVoteCount() {
	o.VoteCount.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ModelRemoteImageInfo) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteImageInfo) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ModelRemoteImageInfo) SetLanguage(v string) {
	o.Language = &v
}

// GetDisplayLanguage returns the DisplayLanguage field value if set, zero value otherwise.
func (o *ModelRemoteImageInfo) GetDisplayLanguage() string {
	if o == nil || IsNil(o.DisplayLanguage) {
		var ret string
		return ret
	}
	return *o.DisplayLanguage
}

// GetDisplayLanguageOk returns a tuple with the DisplayLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteImageInfo) GetDisplayLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayLanguage) {
		return nil, false
	}
	return o.DisplayLanguage, true
}

// HasDisplayLanguage returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasDisplayLanguage() bool {
	if o != nil && !IsNil(o.DisplayLanguage) {
		return true
	}

	return false
}

// SetDisplayLanguage gets a reference to the given string and assigns it to the DisplayLanguage field.
func (o *ModelRemoteImageInfo) SetDisplayLanguage(v string) {
	o.DisplayLanguage = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelRemoteImageInfo) GetType() ModelImageType {
	if o == nil || IsNil(o.Type) {
		var ret ModelImageType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteImageInfo) GetTypeOk() (*ModelImageType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ModelImageType and assigns it to the Type field.
func (o *ModelRemoteImageInfo) SetType(v ModelImageType) {
	o.Type = &v
}

// GetRatingType returns the RatingType field value if set, zero value otherwise.
func (o *ModelRemoteImageInfo) GetRatingType() ModelRatingType {
	if o == nil || IsNil(o.RatingType) {
		var ret ModelRatingType
		return ret
	}
	return *o.RatingType
}

// GetRatingTypeOk returns a tuple with the RatingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteImageInfo) GetRatingTypeOk() (*ModelRatingType, bool) {
	if o == nil || IsNil(o.RatingType) {
		return nil, false
	}
	return o.RatingType, true
}

// HasRatingType returns a boolean if a field has been set.
func (o *ModelRemoteImageInfo) HasRatingType() bool {
	if o != nil && !IsNil(o.RatingType) {
		return true
	}

	return false
}

// SetRatingType gets a reference to the given ModelRatingType and assigns it to the RatingType field.
func (o *ModelRemoteImageInfo) SetRatingType(v ModelRatingType) {
	o.RatingType = &v
}

func (o ModelRemoteImageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelRemoteImageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProviderName) {
		toSerialize["ProviderName"] = o.ProviderName
	}
	if !IsNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["ThumbnailUrl"] = o.ThumbnailUrl
	}
	if o.Height.IsSet() {
		toSerialize["Height"] = o.Height.Get()
	}
	if o.Width.IsSet() {
		toSerialize["Width"] = o.Width.Get()
	}
	if o.CommunityRating.IsSet() {
		toSerialize["CommunityRating"] = o.CommunityRating.Get()
	}
	if o.VoteCount.IsSet() {
		toSerialize["VoteCount"] = o.VoteCount.Get()
	}
	if !IsNil(o.Language) {
		toSerialize["Language"] = o.Language
	}
	if !IsNil(o.DisplayLanguage) {
		toSerialize["DisplayLanguage"] = o.DisplayLanguage
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.RatingType) {
		toSerialize["RatingType"] = o.RatingType
	}
	return toSerialize, nil
}

type NullableModelRemoteImageInfo struct {
	value *ModelRemoteImageInfo
	isSet bool
}

func (v NullableModelRemoteImageInfo) Get() *ModelRemoteImageInfo {
	return v.value
}

func (v *NullableModelRemoteImageInfo) Set(val *ModelRemoteImageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelRemoteImageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelRemoteImageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelRemoteImageInfo(val *ModelRemoteImageInfo) *NullableModelRemoteImageInfo {
	return &NullableModelRemoteImageInfo{value: val, isSet: true}
}

func (v NullableModelRemoteImageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelRemoteImageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


