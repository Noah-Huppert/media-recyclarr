/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelLiveStreamResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelLiveStreamResponse{}

// ModelLiveStreamResponse struct for ModelLiveStreamResponse
type ModelLiveStreamResponse struct {
	MediaSource *ModelMediaSourceInfo `json:"MediaSource,omitempty"`
}

// NewModelLiveStreamResponse instantiates a new ModelLiveStreamResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelLiveStreamResponse() *ModelLiveStreamResponse {
	this := ModelLiveStreamResponse{}
	return &this
}

// NewModelLiveStreamResponseWithDefaults instantiates a new ModelLiveStreamResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelLiveStreamResponseWithDefaults() *ModelLiveStreamResponse {
	this := ModelLiveStreamResponse{}
	return &this
}

// GetMediaSource returns the MediaSource field value if set, zero value otherwise.
func (o *ModelLiveStreamResponse) GetMediaSource() ModelMediaSourceInfo {
	if o == nil || IsNil(o.MediaSource) {
		var ret ModelMediaSourceInfo
		return ret
	}
	return *o.MediaSource
}

// GetMediaSourceOk returns a tuple with the MediaSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveStreamResponse) GetMediaSourceOk() (*ModelMediaSourceInfo, bool) {
	if o == nil || IsNil(o.MediaSource) {
		return nil, false
	}
	return o.MediaSource, true
}

// HasMediaSource returns a boolean if a field has been set.
func (o *ModelLiveStreamResponse) HasMediaSource() bool {
	if o != nil && !IsNil(o.MediaSource) {
		return true
	}

	return false
}

// SetMediaSource gets a reference to the given ModelMediaSourceInfo and assigns it to the MediaSource field.
func (o *ModelLiveStreamResponse) SetMediaSource(v ModelMediaSourceInfo) {
	o.MediaSource = &v
}

func (o ModelLiveStreamResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelLiveStreamResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MediaSource) {
		toSerialize["MediaSource"] = o.MediaSource
	}
	return toSerialize, nil
}

type NullableModelLiveStreamResponse struct {
	value *ModelLiveStreamResponse
	isSet bool
}

func (v NullableModelLiveStreamResponse) Get() *ModelLiveStreamResponse {
	return v.value
}

func (v *NullableModelLiveStreamResponse) Set(val *ModelLiveStreamResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLiveStreamResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLiveStreamResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLiveStreamResponse(val *ModelLiveStreamResponse) *NullableModelLiveStreamResponse {
	return &NullableModelLiveStreamResponse{value: val, isSet: true}
}

func (v NullableModelLiveStreamResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLiveStreamResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


