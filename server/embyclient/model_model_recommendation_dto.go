/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelRecommendationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelRecommendationDto{}

// ModelRecommendationDto struct for ModelRecommendationDto
type ModelRecommendationDto struct {
	Items []ModelBaseItemDto `json:"Items,omitempty"`
	RecommendationType *ModelRecommendationType `json:"RecommendationType,omitempty"`
	BaselineItemName *string `json:"BaselineItemName,omitempty"`
	CategoryId *int64 `json:"CategoryId,omitempty"`
}

// NewModelRecommendationDto instantiates a new ModelRecommendationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelRecommendationDto() *ModelRecommendationDto {
	this := ModelRecommendationDto{}
	return &this
}

// NewModelRecommendationDtoWithDefaults instantiates a new ModelRecommendationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelRecommendationDtoWithDefaults() *ModelRecommendationDto {
	this := ModelRecommendationDto{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ModelRecommendationDto) GetItems() []ModelBaseItemDto {
	if o == nil || IsNil(o.Items) {
		var ret []ModelBaseItemDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRecommendationDto) GetItemsOk() ([]ModelBaseItemDto, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ModelRecommendationDto) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ModelBaseItemDto and assigns it to the Items field.
func (o *ModelRecommendationDto) SetItems(v []ModelBaseItemDto) {
	o.Items = v
}

// GetRecommendationType returns the RecommendationType field value if set, zero value otherwise.
func (o *ModelRecommendationDto) GetRecommendationType() ModelRecommendationType {
	if o == nil || IsNil(o.RecommendationType) {
		var ret ModelRecommendationType
		return ret
	}
	return *o.RecommendationType
}

// GetRecommendationTypeOk returns a tuple with the RecommendationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRecommendationDto) GetRecommendationTypeOk() (*ModelRecommendationType, bool) {
	if o == nil || IsNil(o.RecommendationType) {
		return nil, false
	}
	return o.RecommendationType, true
}

// HasRecommendationType returns a boolean if a field has been set.
func (o *ModelRecommendationDto) HasRecommendationType() bool {
	if o != nil && !IsNil(o.RecommendationType) {
		return true
	}

	return false
}

// SetRecommendationType gets a reference to the given ModelRecommendationType and assigns it to the RecommendationType field.
func (o *ModelRecommendationDto) SetRecommendationType(v ModelRecommendationType) {
	o.RecommendationType = &v
}

// GetBaselineItemName returns the BaselineItemName field value if set, zero value otherwise.
func (o *ModelRecommendationDto) GetBaselineItemName() string {
	if o == nil || IsNil(o.BaselineItemName) {
		var ret string
		return ret
	}
	return *o.BaselineItemName
}

// GetBaselineItemNameOk returns a tuple with the BaselineItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRecommendationDto) GetBaselineItemNameOk() (*string, bool) {
	if o == nil || IsNil(o.BaselineItemName) {
		return nil, false
	}
	return o.BaselineItemName, true
}

// HasBaselineItemName returns a boolean if a field has been set.
func (o *ModelRecommendationDto) HasBaselineItemName() bool {
	if o != nil && !IsNil(o.BaselineItemName) {
		return true
	}

	return false
}

// SetBaselineItemName gets a reference to the given string and assigns it to the BaselineItemName field.
func (o *ModelRecommendationDto) SetBaselineItemName(v string) {
	o.BaselineItemName = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ModelRecommendationDto) GetCategoryId() int64 {
	if o == nil || IsNil(o.CategoryId) {
		var ret int64
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRecommendationDto) GetCategoryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ModelRecommendationDto) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int64 and assigns it to the CategoryId field.
func (o *ModelRecommendationDto) SetCategoryId(v int64) {
	o.CategoryId = &v
}

func (o ModelRecommendationDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelRecommendationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["Items"] = o.Items
	}
	if !IsNil(o.RecommendationType) {
		toSerialize["RecommendationType"] = o.RecommendationType
	}
	if !IsNil(o.BaselineItemName) {
		toSerialize["BaselineItemName"] = o.BaselineItemName
	}
	if !IsNil(o.CategoryId) {
		toSerialize["CategoryId"] = o.CategoryId
	}
	return toSerialize, nil
}

type NullableModelRecommendationDto struct {
	value *ModelRecommendationDto
	isSet bool
}

func (v NullableModelRecommendationDto) Get() *ModelRecommendationDto {
	return v.value
}

func (v *NullableModelRecommendationDto) Set(val *ModelRecommendationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableModelRecommendationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableModelRecommendationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelRecommendationDto(val *ModelRecommendationDto) *NullableModelRecommendationDto {
	return &NullableModelRecommendationDto{value: val, isSet: true}
}

func (v NullableModelRecommendationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelRecommendationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


