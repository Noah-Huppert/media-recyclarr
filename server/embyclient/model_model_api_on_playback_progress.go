/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelApiOnPlaybackProgress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelApiOnPlaybackProgress{}

// ModelApiOnPlaybackProgress struct for ModelApiOnPlaybackProgress
type ModelApiOnPlaybackProgress struct {
	PlaylistIndex *int32 `json:"PlaylistIndex,omitempty"`
	PlaylistLength *int32 `json:"PlaylistLength,omitempty"`
	EventName *ModelProgressEvent `json:"EventName,omitempty"`
}

// NewModelApiOnPlaybackProgress instantiates a new ModelApiOnPlaybackProgress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelApiOnPlaybackProgress() *ModelApiOnPlaybackProgress {
	this := ModelApiOnPlaybackProgress{}
	return &this
}

// NewModelApiOnPlaybackProgressWithDefaults instantiates a new ModelApiOnPlaybackProgress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelApiOnPlaybackProgressWithDefaults() *ModelApiOnPlaybackProgress {
	this := ModelApiOnPlaybackProgress{}
	return &this
}

// GetPlaylistIndex returns the PlaylistIndex field value if set, zero value otherwise.
func (o *ModelApiOnPlaybackProgress) GetPlaylistIndex() int32 {
	if o == nil || IsNil(o.PlaylistIndex) {
		var ret int32
		return ret
	}
	return *o.PlaylistIndex
}

// GetPlaylistIndexOk returns a tuple with the PlaylistIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiOnPlaybackProgress) GetPlaylistIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PlaylistIndex) {
		return nil, false
	}
	return o.PlaylistIndex, true
}

// HasPlaylistIndex returns a boolean if a field has been set.
func (o *ModelApiOnPlaybackProgress) HasPlaylistIndex() bool {
	if o != nil && !IsNil(o.PlaylistIndex) {
		return true
	}

	return false
}

// SetPlaylistIndex gets a reference to the given int32 and assigns it to the PlaylistIndex field.
func (o *ModelApiOnPlaybackProgress) SetPlaylistIndex(v int32) {
	o.PlaylistIndex = &v
}

// GetPlaylistLength returns the PlaylistLength field value if set, zero value otherwise.
func (o *ModelApiOnPlaybackProgress) GetPlaylistLength() int32 {
	if o == nil || IsNil(o.PlaylistLength) {
		var ret int32
		return ret
	}
	return *o.PlaylistLength
}

// GetPlaylistLengthOk returns a tuple with the PlaylistLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiOnPlaybackProgress) GetPlaylistLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PlaylistLength) {
		return nil, false
	}
	return o.PlaylistLength, true
}

// HasPlaylistLength returns a boolean if a field has been set.
func (o *ModelApiOnPlaybackProgress) HasPlaylistLength() bool {
	if o != nil && !IsNil(o.PlaylistLength) {
		return true
	}

	return false
}

// SetPlaylistLength gets a reference to the given int32 and assigns it to the PlaylistLength field.
func (o *ModelApiOnPlaybackProgress) SetPlaylistLength(v int32) {
	o.PlaylistLength = &v
}

// GetEventName returns the EventName field value if set, zero value otherwise.
func (o *ModelApiOnPlaybackProgress) GetEventName() ModelProgressEvent {
	if o == nil || IsNil(o.EventName) {
		var ret ModelProgressEvent
		return ret
	}
	return *o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiOnPlaybackProgress) GetEventNameOk() (*ModelProgressEvent, bool) {
	if o == nil || IsNil(o.EventName) {
		return nil, false
	}
	return o.EventName, true
}

// HasEventName returns a boolean if a field has been set.
func (o *ModelApiOnPlaybackProgress) HasEventName() bool {
	if o != nil && !IsNil(o.EventName) {
		return true
	}

	return false
}

// SetEventName gets a reference to the given ModelProgressEvent and assigns it to the EventName field.
func (o *ModelApiOnPlaybackProgress) SetEventName(v ModelProgressEvent) {
	o.EventName = &v
}

func (o ModelApiOnPlaybackProgress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelApiOnPlaybackProgress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlaylistIndex) {
		toSerialize["PlaylistIndex"] = o.PlaylistIndex
	}
	if !IsNil(o.PlaylistLength) {
		toSerialize["PlaylistLength"] = o.PlaylistLength
	}
	if !IsNil(o.EventName) {
		toSerialize["EventName"] = o.EventName
	}
	return toSerialize, nil
}

type NullableModelApiOnPlaybackProgress struct {
	value *ModelApiOnPlaybackProgress
	isSet bool
}

func (v NullableModelApiOnPlaybackProgress) Get() *ModelApiOnPlaybackProgress {
	return v.value
}

func (v *NullableModelApiOnPlaybackProgress) Set(val *ModelApiOnPlaybackProgress) {
	v.value = val
	v.isSet = true
}

func (v NullableModelApiOnPlaybackProgress) IsSet() bool {
	return v.isSet
}

func (v *NullableModelApiOnPlaybackProgress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelApiOnPlaybackProgress(val *ModelApiOnPlaybackProgress) *NullableModelApiOnPlaybackProgress {
	return &NullableModelApiOnPlaybackProgress{value: val, isSet: true}
}

func (v NullableModelApiOnPlaybackProgress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelApiOnPlaybackProgress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


