/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelSyncDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSyncDataResponse{}

// ModelSyncDataResponse struct for ModelSyncDataResponse
type ModelSyncDataResponse struct {
	ItemIdsToRemove []string `json:"ItemIdsToRemove,omitempty"`
}

// NewModelSyncDataResponse instantiates a new ModelSyncDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSyncDataResponse() *ModelSyncDataResponse {
	this := ModelSyncDataResponse{}
	return &this
}

// NewModelSyncDataResponseWithDefaults instantiates a new ModelSyncDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSyncDataResponseWithDefaults() *ModelSyncDataResponse {
	this := ModelSyncDataResponse{}
	return &this
}

// GetItemIdsToRemove returns the ItemIdsToRemove field value if set, zero value otherwise.
func (o *ModelSyncDataResponse) GetItemIdsToRemove() []string {
	if o == nil || IsNil(o.ItemIdsToRemove) {
		var ret []string
		return ret
	}
	return o.ItemIdsToRemove
}

// GetItemIdsToRemoveOk returns a tuple with the ItemIdsToRemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncDataResponse) GetItemIdsToRemoveOk() ([]string, bool) {
	if o == nil || IsNil(o.ItemIdsToRemove) {
		return nil, false
	}
	return o.ItemIdsToRemove, true
}

// HasItemIdsToRemove returns a boolean if a field has been set.
func (o *ModelSyncDataResponse) HasItemIdsToRemove() bool {
	if o != nil && !IsNil(o.ItemIdsToRemove) {
		return true
	}

	return false
}

// SetItemIdsToRemove gets a reference to the given []string and assigns it to the ItemIdsToRemove field.
func (o *ModelSyncDataResponse) SetItemIdsToRemove(v []string) {
	o.ItemIdsToRemove = v
}

func (o ModelSyncDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSyncDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemIdsToRemove) {
		toSerialize["ItemIdsToRemove"] = o.ItemIdsToRemove
	}
	return toSerialize, nil
}

type NullableModelSyncDataResponse struct {
	value *ModelSyncDataResponse
	isSet bool
}

func (v NullableModelSyncDataResponse) Get() *ModelSyncDataResponse {
	return v.value
}

func (v *NullableModelSyncDataResponse) Set(val *ModelSyncDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSyncDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSyncDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSyncDataResponse(val *ModelSyncDataResponse) *NullableModelSyncDataResponse {
	return &NullableModelSyncDataResponse{value: val, isSet: true}
}

func (v NullableModelSyncDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSyncDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


