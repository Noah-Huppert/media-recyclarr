/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelInstallationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelInstallationInfo{}

// ModelInstallationInfo struct for ModelInstallationInfo
type ModelInstallationInfo struct {
	Id *string `json:"Id,omitempty"`
	Name *string `json:"Name,omitempty"`
	AssemblyGuid *string `json:"AssemblyGuid,omitempty"`
	Version *string `json:"Version,omitempty"`
	UpdateClass *ModelPackageVersionClass `json:"UpdateClass,omitempty"`
	PercentComplete NullableFloat64 `json:"PercentComplete,omitempty"`
}

// NewModelInstallationInfo instantiates a new ModelInstallationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelInstallationInfo() *ModelInstallationInfo {
	this := ModelInstallationInfo{}
	return &this
}

// NewModelInstallationInfoWithDefaults instantiates a new ModelInstallationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelInstallationInfoWithDefaults() *ModelInstallationInfo {
	this := ModelInstallationInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelInstallationInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInstallationInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelInstallationInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelInstallationInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelInstallationInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInstallationInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelInstallationInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelInstallationInfo) SetName(v string) {
	o.Name = &v
}

// GetAssemblyGuid returns the AssemblyGuid field value if set, zero value otherwise.
func (o *ModelInstallationInfo) GetAssemblyGuid() string {
	if o == nil || IsNil(o.AssemblyGuid) {
		var ret string
		return ret
	}
	return *o.AssemblyGuid
}

// GetAssemblyGuidOk returns a tuple with the AssemblyGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInstallationInfo) GetAssemblyGuidOk() (*string, bool) {
	if o == nil || IsNil(o.AssemblyGuid) {
		return nil, false
	}
	return o.AssemblyGuid, true
}

// HasAssemblyGuid returns a boolean if a field has been set.
func (o *ModelInstallationInfo) HasAssemblyGuid() bool {
	if o != nil && !IsNil(o.AssemblyGuid) {
		return true
	}

	return false
}

// SetAssemblyGuid gets a reference to the given string and assigns it to the AssemblyGuid field.
func (o *ModelInstallationInfo) SetAssemblyGuid(v string) {
	o.AssemblyGuid = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ModelInstallationInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInstallationInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ModelInstallationInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ModelInstallationInfo) SetVersion(v string) {
	o.Version = &v
}

// GetUpdateClass returns the UpdateClass field value if set, zero value otherwise.
func (o *ModelInstallationInfo) GetUpdateClass() ModelPackageVersionClass {
	if o == nil || IsNil(o.UpdateClass) {
		var ret ModelPackageVersionClass
		return ret
	}
	return *o.UpdateClass
}

// GetUpdateClassOk returns a tuple with the UpdateClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInstallationInfo) GetUpdateClassOk() (*ModelPackageVersionClass, bool) {
	if o == nil || IsNil(o.UpdateClass) {
		return nil, false
	}
	return o.UpdateClass, true
}

// HasUpdateClass returns a boolean if a field has been set.
func (o *ModelInstallationInfo) HasUpdateClass() bool {
	if o != nil && !IsNil(o.UpdateClass) {
		return true
	}

	return false
}

// SetUpdateClass gets a reference to the given ModelPackageVersionClass and assigns it to the UpdateClass field.
func (o *ModelInstallationInfo) SetUpdateClass(v ModelPackageVersionClass) {
	o.UpdateClass = &v
}

// GetPercentComplete returns the PercentComplete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelInstallationInfo) GetPercentComplete() float64 {
	if o == nil || IsNil(o.PercentComplete.Get()) {
		var ret float64
		return ret
	}
	return *o.PercentComplete.Get()
}

// GetPercentCompleteOk returns a tuple with the PercentComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelInstallationInfo) GetPercentCompleteOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PercentComplete.Get(), o.PercentComplete.IsSet()
}

// HasPercentComplete returns a boolean if a field has been set.
func (o *ModelInstallationInfo) HasPercentComplete() bool {
	if o != nil && o.PercentComplete.IsSet() {
		return true
	}

	return false
}

// SetPercentComplete gets a reference to the given NullableFloat64 and assigns it to the PercentComplete field.
func (o *ModelInstallationInfo) SetPercentComplete(v float64) {
	o.PercentComplete.Set(&v)
}
// SetPercentCompleteNil sets the value for PercentComplete to be an explicit nil
func (o *ModelInstallationInfo) SetPercentCompleteNil() {
	o.PercentComplete.Set(nil)
}

// UnsetPercentComplete ensures that no value is present for PercentComplete, not even an explicit nil
func (o *ModelInstallationInfo) UnsetPercentComplete() {
	o.PercentComplete.Unset()
}

func (o ModelInstallationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelInstallationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.AssemblyGuid) {
		toSerialize["AssemblyGuid"] = o.AssemblyGuid
	}
	if !IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	if !IsNil(o.UpdateClass) {
		toSerialize["UpdateClass"] = o.UpdateClass
	}
	if o.PercentComplete.IsSet() {
		toSerialize["PercentComplete"] = o.PercentComplete.Get()
	}
	return toSerialize, nil
}

type NullableModelInstallationInfo struct {
	value *ModelInstallationInfo
	isSet bool
}

func (v NullableModelInstallationInfo) Get() *ModelInstallationInfo {
	return v.value
}

func (v *NullableModelInstallationInfo) Set(val *ModelInstallationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelInstallationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelInstallationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelInstallationInfo(val *ModelInstallationInfo) *NullableModelInstallationInfo {
	return &NullableModelInstallationInfo{value: val, isSet: true}
}

func (v NullableModelInstallationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelInstallationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


