/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelVideo3DFormat the model 'ModelVideo3DFormat'
type ModelVideo3DFormat string

// List of Video3DFormat
const (
	MODELVIDEO3DFORMAT_HALF_SIDE_BY_SIDE ModelVideo3DFormat = "HalfSideBySide"
	MODELVIDEO3DFORMAT_FULL_SIDE_BY_SIDE ModelVideo3DFormat = "FullSideBySide"
	MODELVIDEO3DFORMAT_FULL_TOP_AND_BOTTOM ModelVideo3DFormat = "FullTopAndBottom"
	MODELVIDEO3DFORMAT_HALF_TOP_AND_BOTTOM ModelVideo3DFormat = "HalfTopAndBottom"
	MODELVIDEO3DFORMAT_MVC ModelVideo3DFormat = "MVC"
)

// All allowed values of ModelVideo3DFormat enum
var AllowedModelVideo3DFormatEnumValues = []ModelVideo3DFormat{
	"HalfSideBySide",
	"FullSideBySide",
	"FullTopAndBottom",
	"HalfTopAndBottom",
	"MVC",
}

func (v *ModelVideo3DFormat) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelVideo3DFormat(value)
	for _, existing := range AllowedModelVideo3DFormatEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelVideo3DFormat", value)
}

// NewModelVideo3DFormatFromValue returns a pointer to a valid ModelVideo3DFormat
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelVideo3DFormatFromValue(v string) (*ModelVideo3DFormat, error) {
	ev := ModelVideo3DFormat(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelVideo3DFormat: valid values are %v", v, AllowedModelVideo3DFormatEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelVideo3DFormat) IsValid() bool {
	for _, existing := range AllowedModelVideo3DFormatEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Video3DFormat value
func (v ModelVideo3DFormat) Ptr() *ModelVideo3DFormat {
	return &v
}

type NullableModelVideo3DFormat struct {
	value *ModelVideo3DFormat
	isSet bool
}

func (v NullableModelVideo3DFormat) Get() *ModelVideo3DFormat {
	return v.value
}

func (v *NullableModelVideo3DFormat) Set(val *ModelVideo3DFormat) {
	v.value = val
	v.isSet = true
}

func (v NullableModelVideo3DFormat) IsSet() bool {
	return v.isSet
}

func (v *NullableModelVideo3DFormat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelVideo3DFormat(val *ModelVideo3DFormat) *NullableModelVideo3DFormat {
	return &NullableModelVideo3DFormat{value: val, isSet: true}
}

func (v NullableModelVideo3DFormat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelVideo3DFormat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

