/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelTranscodingInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelTranscodingInfo{}

// ModelTranscodingInfo struct for ModelTranscodingInfo
type ModelTranscodingInfo struct {
	AudioCodec *string `json:"AudioCodec,omitempty"`
	VideoCodec *string `json:"VideoCodec,omitempty"`
	SubProtocol *string `json:"SubProtocol,omitempty"`
	Container *string `json:"Container,omitempty"`
	IsVideoDirect *bool `json:"IsVideoDirect,omitempty"`
	IsAudioDirect *bool `json:"IsAudioDirect,omitempty"`
	Bitrate NullableInt32 `json:"Bitrate,omitempty"`
	AudioBitrate NullableInt32 `json:"AudioBitrate,omitempty"`
	VideoBitrate NullableInt32 `json:"VideoBitrate,omitempty"`
	Framerate NullableFloat32 `json:"Framerate,omitempty"`
	CompletionPercentage NullableFloat64 `json:"CompletionPercentage,omitempty"`
	TranscodingPositionTicks NullableFloat64 `json:"TranscodingPositionTicks,omitempty"`
	TranscodingStartPositionTicks NullableFloat64 `json:"TranscodingStartPositionTicks,omitempty"`
	Width NullableInt32 `json:"Width,omitempty"`
	Height NullableInt32 `json:"Height,omitempty"`
	AudioChannels NullableInt32 `json:"AudioChannels,omitempty"`
	TranscodeReasons []ModelTranscodeReason `json:"TranscodeReasons,omitempty"`
	// Deprecated, please use ProcessStatistics instead
	// Deprecated
	CurrentCpuUsage NullableFloat64 `json:"CurrentCpuUsage,omitempty"`
	// Deprecated, please use ProcessStatistics instead
	// Deprecated
	AverageCpuUsage NullableFloat64 `json:"AverageCpuUsage,omitempty"`
	// Deprecated, please use ProcessStatistics instead
	// Deprecated
	CpuHistory []ModelTupleDoubleDouble `json:"CpuHistory,omitempty"`
	ProcessStatistics *ModelProcessRunMetricsProcessStatistics `json:"ProcessStatistics,omitempty"`
	CurrentThrottle NullableInt32 `json:"CurrentThrottle,omitempty"`
	VideoDecoder *string `json:"VideoDecoder,omitempty"`
	VideoDecoderIsHardware *bool `json:"VideoDecoderIsHardware,omitempty"`
	VideoDecoderMediaType *string `json:"VideoDecoderMediaType,omitempty"`
	VideoDecoderHwAccel *string `json:"VideoDecoderHwAccel,omitempty"`
	VideoEncoder *string `json:"VideoEncoder,omitempty"`
	VideoEncoderIsHardware *bool `json:"VideoEncoderIsHardware,omitempty"`
	VideoEncoderMediaType *string `json:"VideoEncoderMediaType,omitempty"`
	VideoEncoderHwAccel *string `json:"VideoEncoderHwAccel,omitempty"`
	VideoPipelineInfo []ModelTranscodingVpStepInfo `json:"VideoPipelineInfo,omitempty"`
	SubtitlePipelineInfos [][]ModelTranscodingVpStepInfo `json:"SubtitlePipelineInfos,omitempty"`
}

// NewModelTranscodingInfo instantiates a new ModelTranscodingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelTranscodingInfo() *ModelTranscodingInfo {
	this := ModelTranscodingInfo{}
	return &this
}

// NewModelTranscodingInfoWithDefaults instantiates a new ModelTranscodingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelTranscodingInfoWithDefaults() *ModelTranscodingInfo {
	this := ModelTranscodingInfo{}
	return &this
}

// GetAudioCodec returns the AudioCodec field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetAudioCodec() string {
	if o == nil || IsNil(o.AudioCodec) {
		var ret string
		return ret
	}
	return *o.AudioCodec
}

// GetAudioCodecOk returns a tuple with the AudioCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetAudioCodecOk() (*string, bool) {
	if o == nil || IsNil(o.AudioCodec) {
		return nil, false
	}
	return o.AudioCodec, true
}

// HasAudioCodec returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasAudioCodec() bool {
	if o != nil && !IsNil(o.AudioCodec) {
		return true
	}

	return false
}

// SetAudioCodec gets a reference to the given string and assigns it to the AudioCodec field.
func (o *ModelTranscodingInfo) SetAudioCodec(v string) {
	o.AudioCodec = &v
}

// GetVideoCodec returns the VideoCodec field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoCodec() string {
	if o == nil || IsNil(o.VideoCodec) {
		var ret string
		return ret
	}
	return *o.VideoCodec
}

// GetVideoCodecOk returns a tuple with the VideoCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoCodecOk() (*string, bool) {
	if o == nil || IsNil(o.VideoCodec) {
		return nil, false
	}
	return o.VideoCodec, true
}

// HasVideoCodec returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoCodec() bool {
	if o != nil && !IsNil(o.VideoCodec) {
		return true
	}

	return false
}

// SetVideoCodec gets a reference to the given string and assigns it to the VideoCodec field.
func (o *ModelTranscodingInfo) SetVideoCodec(v string) {
	o.VideoCodec = &v
}

// GetSubProtocol returns the SubProtocol field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetSubProtocol() string {
	if o == nil || IsNil(o.SubProtocol) {
		var ret string
		return ret
	}
	return *o.SubProtocol
}

// GetSubProtocolOk returns a tuple with the SubProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetSubProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.SubProtocol) {
		return nil, false
	}
	return o.SubProtocol, true
}

// HasSubProtocol returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasSubProtocol() bool {
	if o != nil && !IsNil(o.SubProtocol) {
		return true
	}

	return false
}

// SetSubProtocol gets a reference to the given string and assigns it to the SubProtocol field.
func (o *ModelTranscodingInfo) SetSubProtocol(v string) {
	o.SubProtocol = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetContainer() string {
	if o == nil || IsNil(o.Container) {
		var ret string
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetContainerOk() (*string, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given string and assigns it to the Container field.
func (o *ModelTranscodingInfo) SetContainer(v string) {
	o.Container = &v
}

// GetIsVideoDirect returns the IsVideoDirect field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetIsVideoDirect() bool {
	if o == nil || IsNil(o.IsVideoDirect) {
		var ret bool
		return ret
	}
	return *o.IsVideoDirect
}

// GetIsVideoDirectOk returns a tuple with the IsVideoDirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetIsVideoDirectOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVideoDirect) {
		return nil, false
	}
	return o.IsVideoDirect, true
}

// HasIsVideoDirect returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasIsVideoDirect() bool {
	if o != nil && !IsNil(o.IsVideoDirect) {
		return true
	}

	return false
}

// SetIsVideoDirect gets a reference to the given bool and assigns it to the IsVideoDirect field.
func (o *ModelTranscodingInfo) SetIsVideoDirect(v bool) {
	o.IsVideoDirect = &v
}

// GetIsAudioDirect returns the IsAudioDirect field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetIsAudioDirect() bool {
	if o == nil || IsNil(o.IsAudioDirect) {
		var ret bool
		return ret
	}
	return *o.IsAudioDirect
}

// GetIsAudioDirectOk returns a tuple with the IsAudioDirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetIsAudioDirectOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAudioDirect) {
		return nil, false
	}
	return o.IsAudioDirect, true
}

// HasIsAudioDirect returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasIsAudioDirect() bool {
	if o != nil && !IsNil(o.IsAudioDirect) {
		return true
	}

	return false
}

// SetIsAudioDirect gets a reference to the given bool and assigns it to the IsAudioDirect field.
func (o *ModelTranscodingInfo) SetIsAudioDirect(v bool) {
	o.IsAudioDirect = &v
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetBitrate() int32 {
	if o == nil || IsNil(o.Bitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.Bitrate.Get()
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bitrate.Get(), o.Bitrate.IsSet()
}

// HasBitrate returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasBitrate() bool {
	if o != nil && o.Bitrate.IsSet() {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given NullableInt32 and assigns it to the Bitrate field.
func (o *ModelTranscodingInfo) SetBitrate(v int32) {
	o.Bitrate.Set(&v)
}
// SetBitrateNil sets the value for Bitrate to be an explicit nil
func (o *ModelTranscodingInfo) SetBitrateNil() {
	o.Bitrate.Set(nil)
}

// UnsetBitrate ensures that no value is present for Bitrate, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetBitrate() {
	o.Bitrate.Unset()
}

// GetAudioBitrate returns the AudioBitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetAudioBitrate() int32 {
	if o == nil || IsNil(o.AudioBitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.AudioBitrate.Get()
}

// GetAudioBitrateOk returns a tuple with the AudioBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetAudioBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AudioBitrate.Get(), o.AudioBitrate.IsSet()
}

// HasAudioBitrate returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasAudioBitrate() bool {
	if o != nil && o.AudioBitrate.IsSet() {
		return true
	}

	return false
}

// SetAudioBitrate gets a reference to the given NullableInt32 and assigns it to the AudioBitrate field.
func (o *ModelTranscodingInfo) SetAudioBitrate(v int32) {
	o.AudioBitrate.Set(&v)
}
// SetAudioBitrateNil sets the value for AudioBitrate to be an explicit nil
func (o *ModelTranscodingInfo) SetAudioBitrateNil() {
	o.AudioBitrate.Set(nil)
}

// UnsetAudioBitrate ensures that no value is present for AudioBitrate, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetAudioBitrate() {
	o.AudioBitrate.Unset()
}

// GetVideoBitrate returns the VideoBitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetVideoBitrate() int32 {
	if o == nil || IsNil(o.VideoBitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.VideoBitrate.Get()
}

// GetVideoBitrateOk returns a tuple with the VideoBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetVideoBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoBitrate.Get(), o.VideoBitrate.IsSet()
}

// HasVideoBitrate returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoBitrate() bool {
	if o != nil && o.VideoBitrate.IsSet() {
		return true
	}

	return false
}

// SetVideoBitrate gets a reference to the given NullableInt32 and assigns it to the VideoBitrate field.
func (o *ModelTranscodingInfo) SetVideoBitrate(v int32) {
	o.VideoBitrate.Set(&v)
}
// SetVideoBitrateNil sets the value for VideoBitrate to be an explicit nil
func (o *ModelTranscodingInfo) SetVideoBitrateNil() {
	o.VideoBitrate.Set(nil)
}

// UnsetVideoBitrate ensures that no value is present for VideoBitrate, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetVideoBitrate() {
	o.VideoBitrate.Unset()
}

// GetFramerate returns the Framerate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetFramerate() float32 {
	if o == nil || IsNil(o.Framerate.Get()) {
		var ret float32
		return ret
	}
	return *o.Framerate.Get()
}

// GetFramerateOk returns a tuple with the Framerate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetFramerateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Framerate.Get(), o.Framerate.IsSet()
}

// HasFramerate returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasFramerate() bool {
	if o != nil && o.Framerate.IsSet() {
		return true
	}

	return false
}

// SetFramerate gets a reference to the given NullableFloat32 and assigns it to the Framerate field.
func (o *ModelTranscodingInfo) SetFramerate(v float32) {
	o.Framerate.Set(&v)
}
// SetFramerateNil sets the value for Framerate to be an explicit nil
func (o *ModelTranscodingInfo) SetFramerateNil() {
	o.Framerate.Set(nil)
}

// UnsetFramerate ensures that no value is present for Framerate, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetFramerate() {
	o.Framerate.Unset()
}

// GetCompletionPercentage returns the CompletionPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetCompletionPercentage() float64 {
	if o == nil || IsNil(o.CompletionPercentage.Get()) {
		var ret float64
		return ret
	}
	return *o.CompletionPercentage.Get()
}

// GetCompletionPercentageOk returns a tuple with the CompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetCompletionPercentageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletionPercentage.Get(), o.CompletionPercentage.IsSet()
}

// HasCompletionPercentage returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasCompletionPercentage() bool {
	if o != nil && o.CompletionPercentage.IsSet() {
		return true
	}

	return false
}

// SetCompletionPercentage gets a reference to the given NullableFloat64 and assigns it to the CompletionPercentage field.
func (o *ModelTranscodingInfo) SetCompletionPercentage(v float64) {
	o.CompletionPercentage.Set(&v)
}
// SetCompletionPercentageNil sets the value for CompletionPercentage to be an explicit nil
func (o *ModelTranscodingInfo) SetCompletionPercentageNil() {
	o.CompletionPercentage.Set(nil)
}

// UnsetCompletionPercentage ensures that no value is present for CompletionPercentage, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetCompletionPercentage() {
	o.CompletionPercentage.Unset()
}

// GetTranscodingPositionTicks returns the TranscodingPositionTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetTranscodingPositionTicks() float64 {
	if o == nil || IsNil(o.TranscodingPositionTicks.Get()) {
		var ret float64
		return ret
	}
	return *o.TranscodingPositionTicks.Get()
}

// GetTranscodingPositionTicksOk returns a tuple with the TranscodingPositionTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetTranscodingPositionTicksOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TranscodingPositionTicks.Get(), o.TranscodingPositionTicks.IsSet()
}

// HasTranscodingPositionTicks returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasTranscodingPositionTicks() bool {
	if o != nil && o.TranscodingPositionTicks.IsSet() {
		return true
	}

	return false
}

// SetTranscodingPositionTicks gets a reference to the given NullableFloat64 and assigns it to the TranscodingPositionTicks field.
func (o *ModelTranscodingInfo) SetTranscodingPositionTicks(v float64) {
	o.TranscodingPositionTicks.Set(&v)
}
// SetTranscodingPositionTicksNil sets the value for TranscodingPositionTicks to be an explicit nil
func (o *ModelTranscodingInfo) SetTranscodingPositionTicksNil() {
	o.TranscodingPositionTicks.Set(nil)
}

// UnsetTranscodingPositionTicks ensures that no value is present for TranscodingPositionTicks, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetTranscodingPositionTicks() {
	o.TranscodingPositionTicks.Unset()
}

// GetTranscodingStartPositionTicks returns the TranscodingStartPositionTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetTranscodingStartPositionTicks() float64 {
	if o == nil || IsNil(o.TranscodingStartPositionTicks.Get()) {
		var ret float64
		return ret
	}
	return *o.TranscodingStartPositionTicks.Get()
}

// GetTranscodingStartPositionTicksOk returns a tuple with the TranscodingStartPositionTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetTranscodingStartPositionTicksOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TranscodingStartPositionTicks.Get(), o.TranscodingStartPositionTicks.IsSet()
}

// HasTranscodingStartPositionTicks returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasTranscodingStartPositionTicks() bool {
	if o != nil && o.TranscodingStartPositionTicks.IsSet() {
		return true
	}

	return false
}

// SetTranscodingStartPositionTicks gets a reference to the given NullableFloat64 and assigns it to the TranscodingStartPositionTicks field.
func (o *ModelTranscodingInfo) SetTranscodingStartPositionTicks(v float64) {
	o.TranscodingStartPositionTicks.Set(&v)
}
// SetTranscodingStartPositionTicksNil sets the value for TranscodingStartPositionTicks to be an explicit nil
func (o *ModelTranscodingInfo) SetTranscodingStartPositionTicksNil() {
	o.TranscodingStartPositionTicks.Set(nil)
}

// UnsetTranscodingStartPositionTicks ensures that no value is present for TranscodingStartPositionTicks, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetTranscodingStartPositionTicks() {
	o.TranscodingStartPositionTicks.Unset()
}

// GetWidth returns the Width field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetWidth() int32 {
	if o == nil || IsNil(o.Width.Get()) {
		var ret int32
		return ret
	}
	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// HasWidth returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasWidth() bool {
	if o != nil && o.Width.IsSet() {
		return true
	}

	return false
}

// SetWidth gets a reference to the given NullableInt32 and assigns it to the Width field.
func (o *ModelTranscodingInfo) SetWidth(v int32) {
	o.Width.Set(&v)
}
// SetWidthNil sets the value for Width to be an explicit nil
func (o *ModelTranscodingInfo) SetWidthNil() {
	o.Width.Set(nil)
}

// UnsetWidth ensures that no value is present for Width, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetWidth() {
	o.Width.Unset()
}

// GetHeight returns the Height field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetHeight() int32 {
	if o == nil || IsNil(o.Height.Get()) {
		var ret int32
		return ret
	}
	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// HasHeight returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasHeight() bool {
	if o != nil && o.Height.IsSet() {
		return true
	}

	return false
}

// SetHeight gets a reference to the given NullableInt32 and assigns it to the Height field.
func (o *ModelTranscodingInfo) SetHeight(v int32) {
	o.Height.Set(&v)
}
// SetHeightNil sets the value for Height to be an explicit nil
func (o *ModelTranscodingInfo) SetHeightNil() {
	o.Height.Set(nil)
}

// UnsetHeight ensures that no value is present for Height, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetHeight() {
	o.Height.Unset()
}

// GetAudioChannels returns the AudioChannels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetAudioChannels() int32 {
	if o == nil || IsNil(o.AudioChannels.Get()) {
		var ret int32
		return ret
	}
	return *o.AudioChannels.Get()
}

// GetAudioChannelsOk returns a tuple with the AudioChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetAudioChannelsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AudioChannels.Get(), o.AudioChannels.IsSet()
}

// HasAudioChannels returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasAudioChannels() bool {
	if o != nil && o.AudioChannels.IsSet() {
		return true
	}

	return false
}

// SetAudioChannels gets a reference to the given NullableInt32 and assigns it to the AudioChannels field.
func (o *ModelTranscodingInfo) SetAudioChannels(v int32) {
	o.AudioChannels.Set(&v)
}
// SetAudioChannelsNil sets the value for AudioChannels to be an explicit nil
func (o *ModelTranscodingInfo) SetAudioChannelsNil() {
	o.AudioChannels.Set(nil)
}

// UnsetAudioChannels ensures that no value is present for AudioChannels, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetAudioChannels() {
	o.AudioChannels.Unset()
}

// GetTranscodeReasons returns the TranscodeReasons field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetTranscodeReasons() []ModelTranscodeReason {
	if o == nil || IsNil(o.TranscodeReasons) {
		var ret []ModelTranscodeReason
		return ret
	}
	return o.TranscodeReasons
}

// GetTranscodeReasonsOk returns a tuple with the TranscodeReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetTranscodeReasonsOk() ([]ModelTranscodeReason, bool) {
	if o == nil || IsNil(o.TranscodeReasons) {
		return nil, false
	}
	return o.TranscodeReasons, true
}

// HasTranscodeReasons returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasTranscodeReasons() bool {
	if o != nil && !IsNil(o.TranscodeReasons) {
		return true
	}

	return false
}

// SetTranscodeReasons gets a reference to the given []ModelTranscodeReason and assigns it to the TranscodeReasons field.
func (o *ModelTranscodingInfo) SetTranscodeReasons(v []ModelTranscodeReason) {
	o.TranscodeReasons = v
}

// GetCurrentCpuUsage returns the CurrentCpuUsage field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ModelTranscodingInfo) GetCurrentCpuUsage() float64 {
	if o == nil || IsNil(o.CurrentCpuUsage.Get()) {
		var ret float64
		return ret
	}
	return *o.CurrentCpuUsage.Get()
}

// GetCurrentCpuUsageOk returns a tuple with the CurrentCpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ModelTranscodingInfo) GetCurrentCpuUsageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentCpuUsage.Get(), o.CurrentCpuUsage.IsSet()
}

// HasCurrentCpuUsage returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasCurrentCpuUsage() bool {
	if o != nil && o.CurrentCpuUsage.IsSet() {
		return true
	}

	return false
}

// SetCurrentCpuUsage gets a reference to the given NullableFloat64 and assigns it to the CurrentCpuUsage field.
// Deprecated
func (o *ModelTranscodingInfo) SetCurrentCpuUsage(v float64) {
	o.CurrentCpuUsage.Set(&v)
}
// SetCurrentCpuUsageNil sets the value for CurrentCpuUsage to be an explicit nil
func (o *ModelTranscodingInfo) SetCurrentCpuUsageNil() {
	o.CurrentCpuUsage.Set(nil)
}

// UnsetCurrentCpuUsage ensures that no value is present for CurrentCpuUsage, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetCurrentCpuUsage() {
	o.CurrentCpuUsage.Unset()
}

// GetAverageCpuUsage returns the AverageCpuUsage field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ModelTranscodingInfo) GetAverageCpuUsage() float64 {
	if o == nil || IsNil(o.AverageCpuUsage.Get()) {
		var ret float64
		return ret
	}
	return *o.AverageCpuUsage.Get()
}

// GetAverageCpuUsageOk returns a tuple with the AverageCpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ModelTranscodingInfo) GetAverageCpuUsageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AverageCpuUsage.Get(), o.AverageCpuUsage.IsSet()
}

// HasAverageCpuUsage returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasAverageCpuUsage() bool {
	if o != nil && o.AverageCpuUsage.IsSet() {
		return true
	}

	return false
}

// SetAverageCpuUsage gets a reference to the given NullableFloat64 and assigns it to the AverageCpuUsage field.
// Deprecated
func (o *ModelTranscodingInfo) SetAverageCpuUsage(v float64) {
	o.AverageCpuUsage.Set(&v)
}
// SetAverageCpuUsageNil sets the value for AverageCpuUsage to be an explicit nil
func (o *ModelTranscodingInfo) SetAverageCpuUsageNil() {
	o.AverageCpuUsage.Set(nil)
}

// UnsetAverageCpuUsage ensures that no value is present for AverageCpuUsage, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetAverageCpuUsage() {
	o.AverageCpuUsage.Unset()
}

// GetCpuHistory returns the CpuHistory field value if set, zero value otherwise.
// Deprecated
func (o *ModelTranscodingInfo) GetCpuHistory() []ModelTupleDoubleDouble {
	if o == nil || IsNil(o.CpuHistory) {
		var ret []ModelTupleDoubleDouble
		return ret
	}
	return o.CpuHistory
}

// GetCpuHistoryOk returns a tuple with the CpuHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ModelTranscodingInfo) GetCpuHistoryOk() ([]ModelTupleDoubleDouble, bool) {
	if o == nil || IsNil(o.CpuHistory) {
		return nil, false
	}
	return o.CpuHistory, true
}

// HasCpuHistory returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasCpuHistory() bool {
	if o != nil && !IsNil(o.CpuHistory) {
		return true
	}

	return false
}

// SetCpuHistory gets a reference to the given []ModelTupleDoubleDouble and assigns it to the CpuHistory field.
// Deprecated
func (o *ModelTranscodingInfo) SetCpuHistory(v []ModelTupleDoubleDouble) {
	o.CpuHistory = v
}

// GetProcessStatistics returns the ProcessStatistics field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetProcessStatistics() ModelProcessRunMetricsProcessStatistics {
	if o == nil || IsNil(o.ProcessStatistics) {
		var ret ModelProcessRunMetricsProcessStatistics
		return ret
	}
	return *o.ProcessStatistics
}

// GetProcessStatisticsOk returns a tuple with the ProcessStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetProcessStatisticsOk() (*ModelProcessRunMetricsProcessStatistics, bool) {
	if o == nil || IsNil(o.ProcessStatistics) {
		return nil, false
	}
	return o.ProcessStatistics, true
}

// HasProcessStatistics returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasProcessStatistics() bool {
	if o != nil && !IsNil(o.ProcessStatistics) {
		return true
	}

	return false
}

// SetProcessStatistics gets a reference to the given ModelProcessRunMetricsProcessStatistics and assigns it to the ProcessStatistics field.
func (o *ModelTranscodingInfo) SetProcessStatistics(v ModelProcessRunMetricsProcessStatistics) {
	o.ProcessStatistics = &v
}

// GetCurrentThrottle returns the CurrentThrottle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelTranscodingInfo) GetCurrentThrottle() int32 {
	if o == nil || IsNil(o.CurrentThrottle.Get()) {
		var ret int32
		return ret
	}
	return *o.CurrentThrottle.Get()
}

// GetCurrentThrottleOk returns a tuple with the CurrentThrottle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelTranscodingInfo) GetCurrentThrottleOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentThrottle.Get(), o.CurrentThrottle.IsSet()
}

// HasCurrentThrottle returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasCurrentThrottle() bool {
	if o != nil && o.CurrentThrottle.IsSet() {
		return true
	}

	return false
}

// SetCurrentThrottle gets a reference to the given NullableInt32 and assigns it to the CurrentThrottle field.
func (o *ModelTranscodingInfo) SetCurrentThrottle(v int32) {
	o.CurrentThrottle.Set(&v)
}
// SetCurrentThrottleNil sets the value for CurrentThrottle to be an explicit nil
func (o *ModelTranscodingInfo) SetCurrentThrottleNil() {
	o.CurrentThrottle.Set(nil)
}

// UnsetCurrentThrottle ensures that no value is present for CurrentThrottle, not even an explicit nil
func (o *ModelTranscodingInfo) UnsetCurrentThrottle() {
	o.CurrentThrottle.Unset()
}

// GetVideoDecoder returns the VideoDecoder field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoDecoder() string {
	if o == nil || IsNil(o.VideoDecoder) {
		var ret string
		return ret
	}
	return *o.VideoDecoder
}

// GetVideoDecoderOk returns a tuple with the VideoDecoder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoDecoderOk() (*string, bool) {
	if o == nil || IsNil(o.VideoDecoder) {
		return nil, false
	}
	return o.VideoDecoder, true
}

// HasVideoDecoder returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoDecoder() bool {
	if o != nil && !IsNil(o.VideoDecoder) {
		return true
	}

	return false
}

// SetVideoDecoder gets a reference to the given string and assigns it to the VideoDecoder field.
func (o *ModelTranscodingInfo) SetVideoDecoder(v string) {
	o.VideoDecoder = &v
}

// GetVideoDecoderIsHardware returns the VideoDecoderIsHardware field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoDecoderIsHardware() bool {
	if o == nil || IsNil(o.VideoDecoderIsHardware) {
		var ret bool
		return ret
	}
	return *o.VideoDecoderIsHardware
}

// GetVideoDecoderIsHardwareOk returns a tuple with the VideoDecoderIsHardware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoDecoderIsHardwareOk() (*bool, bool) {
	if o == nil || IsNil(o.VideoDecoderIsHardware) {
		return nil, false
	}
	return o.VideoDecoderIsHardware, true
}

// HasVideoDecoderIsHardware returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoDecoderIsHardware() bool {
	if o != nil && !IsNil(o.VideoDecoderIsHardware) {
		return true
	}

	return false
}

// SetVideoDecoderIsHardware gets a reference to the given bool and assigns it to the VideoDecoderIsHardware field.
func (o *ModelTranscodingInfo) SetVideoDecoderIsHardware(v bool) {
	o.VideoDecoderIsHardware = &v
}

// GetVideoDecoderMediaType returns the VideoDecoderMediaType field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoDecoderMediaType() string {
	if o == nil || IsNil(o.VideoDecoderMediaType) {
		var ret string
		return ret
	}
	return *o.VideoDecoderMediaType
}

// GetVideoDecoderMediaTypeOk returns a tuple with the VideoDecoderMediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoDecoderMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VideoDecoderMediaType) {
		return nil, false
	}
	return o.VideoDecoderMediaType, true
}

// HasVideoDecoderMediaType returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoDecoderMediaType() bool {
	if o != nil && !IsNil(o.VideoDecoderMediaType) {
		return true
	}

	return false
}

// SetVideoDecoderMediaType gets a reference to the given string and assigns it to the VideoDecoderMediaType field.
func (o *ModelTranscodingInfo) SetVideoDecoderMediaType(v string) {
	o.VideoDecoderMediaType = &v
}

// GetVideoDecoderHwAccel returns the VideoDecoderHwAccel field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoDecoderHwAccel() string {
	if o == nil || IsNil(o.VideoDecoderHwAccel) {
		var ret string
		return ret
	}
	return *o.VideoDecoderHwAccel
}

// GetVideoDecoderHwAccelOk returns a tuple with the VideoDecoderHwAccel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoDecoderHwAccelOk() (*string, bool) {
	if o == nil || IsNil(o.VideoDecoderHwAccel) {
		return nil, false
	}
	return o.VideoDecoderHwAccel, true
}

// HasVideoDecoderHwAccel returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoDecoderHwAccel() bool {
	if o != nil && !IsNil(o.VideoDecoderHwAccel) {
		return true
	}

	return false
}

// SetVideoDecoderHwAccel gets a reference to the given string and assigns it to the VideoDecoderHwAccel field.
func (o *ModelTranscodingInfo) SetVideoDecoderHwAccel(v string) {
	o.VideoDecoderHwAccel = &v
}

// GetVideoEncoder returns the VideoEncoder field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoEncoder() string {
	if o == nil || IsNil(o.VideoEncoder) {
		var ret string
		return ret
	}
	return *o.VideoEncoder
}

// GetVideoEncoderOk returns a tuple with the VideoEncoder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoEncoderOk() (*string, bool) {
	if o == nil || IsNil(o.VideoEncoder) {
		return nil, false
	}
	return o.VideoEncoder, true
}

// HasVideoEncoder returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoEncoder() bool {
	if o != nil && !IsNil(o.VideoEncoder) {
		return true
	}

	return false
}

// SetVideoEncoder gets a reference to the given string and assigns it to the VideoEncoder field.
func (o *ModelTranscodingInfo) SetVideoEncoder(v string) {
	o.VideoEncoder = &v
}

// GetVideoEncoderIsHardware returns the VideoEncoderIsHardware field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoEncoderIsHardware() bool {
	if o == nil || IsNil(o.VideoEncoderIsHardware) {
		var ret bool
		return ret
	}
	return *o.VideoEncoderIsHardware
}

// GetVideoEncoderIsHardwareOk returns a tuple with the VideoEncoderIsHardware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoEncoderIsHardwareOk() (*bool, bool) {
	if o == nil || IsNil(o.VideoEncoderIsHardware) {
		return nil, false
	}
	return o.VideoEncoderIsHardware, true
}

// HasVideoEncoderIsHardware returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoEncoderIsHardware() bool {
	if o != nil && !IsNil(o.VideoEncoderIsHardware) {
		return true
	}

	return false
}

// SetVideoEncoderIsHardware gets a reference to the given bool and assigns it to the VideoEncoderIsHardware field.
func (o *ModelTranscodingInfo) SetVideoEncoderIsHardware(v bool) {
	o.VideoEncoderIsHardware = &v
}

// GetVideoEncoderMediaType returns the VideoEncoderMediaType field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoEncoderMediaType() string {
	if o == nil || IsNil(o.VideoEncoderMediaType) {
		var ret string
		return ret
	}
	return *o.VideoEncoderMediaType
}

// GetVideoEncoderMediaTypeOk returns a tuple with the VideoEncoderMediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoEncoderMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VideoEncoderMediaType) {
		return nil, false
	}
	return o.VideoEncoderMediaType, true
}

// HasVideoEncoderMediaType returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoEncoderMediaType() bool {
	if o != nil && !IsNil(o.VideoEncoderMediaType) {
		return true
	}

	return false
}

// SetVideoEncoderMediaType gets a reference to the given string and assigns it to the VideoEncoderMediaType field.
func (o *ModelTranscodingInfo) SetVideoEncoderMediaType(v string) {
	o.VideoEncoderMediaType = &v
}

// GetVideoEncoderHwAccel returns the VideoEncoderHwAccel field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoEncoderHwAccel() string {
	if o == nil || IsNil(o.VideoEncoderHwAccel) {
		var ret string
		return ret
	}
	return *o.VideoEncoderHwAccel
}

// GetVideoEncoderHwAccelOk returns a tuple with the VideoEncoderHwAccel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoEncoderHwAccelOk() (*string, bool) {
	if o == nil || IsNil(o.VideoEncoderHwAccel) {
		return nil, false
	}
	return o.VideoEncoderHwAccel, true
}

// HasVideoEncoderHwAccel returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoEncoderHwAccel() bool {
	if o != nil && !IsNil(o.VideoEncoderHwAccel) {
		return true
	}

	return false
}

// SetVideoEncoderHwAccel gets a reference to the given string and assigns it to the VideoEncoderHwAccel field.
func (o *ModelTranscodingInfo) SetVideoEncoderHwAccel(v string) {
	o.VideoEncoderHwAccel = &v
}

// GetVideoPipelineInfo returns the VideoPipelineInfo field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetVideoPipelineInfo() []ModelTranscodingVpStepInfo {
	if o == nil || IsNil(o.VideoPipelineInfo) {
		var ret []ModelTranscodingVpStepInfo
		return ret
	}
	return o.VideoPipelineInfo
}

// GetVideoPipelineInfoOk returns a tuple with the VideoPipelineInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetVideoPipelineInfoOk() ([]ModelTranscodingVpStepInfo, bool) {
	if o == nil || IsNil(o.VideoPipelineInfo) {
		return nil, false
	}
	return o.VideoPipelineInfo, true
}

// HasVideoPipelineInfo returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasVideoPipelineInfo() bool {
	if o != nil && !IsNil(o.VideoPipelineInfo) {
		return true
	}

	return false
}

// SetVideoPipelineInfo gets a reference to the given []ModelTranscodingVpStepInfo and assigns it to the VideoPipelineInfo field.
func (o *ModelTranscodingInfo) SetVideoPipelineInfo(v []ModelTranscodingVpStepInfo) {
	o.VideoPipelineInfo = v
}

// GetSubtitlePipelineInfos returns the SubtitlePipelineInfos field value if set, zero value otherwise.
func (o *ModelTranscodingInfo) GetSubtitlePipelineInfos() [][]ModelTranscodingVpStepInfo {
	if o == nil || IsNil(o.SubtitlePipelineInfos) {
		var ret [][]ModelTranscodingVpStepInfo
		return ret
	}
	return o.SubtitlePipelineInfos
}

// GetSubtitlePipelineInfosOk returns a tuple with the SubtitlePipelineInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTranscodingInfo) GetSubtitlePipelineInfosOk() ([][]ModelTranscodingVpStepInfo, bool) {
	if o == nil || IsNil(o.SubtitlePipelineInfos) {
		return nil, false
	}
	return o.SubtitlePipelineInfos, true
}

// HasSubtitlePipelineInfos returns a boolean if a field has been set.
func (o *ModelTranscodingInfo) HasSubtitlePipelineInfos() bool {
	if o != nil && !IsNil(o.SubtitlePipelineInfos) {
		return true
	}

	return false
}

// SetSubtitlePipelineInfos gets a reference to the given [][]ModelTranscodingVpStepInfo and assigns it to the SubtitlePipelineInfos field.
func (o *ModelTranscodingInfo) SetSubtitlePipelineInfos(v [][]ModelTranscodingVpStepInfo) {
	o.SubtitlePipelineInfos = v
}

func (o ModelTranscodingInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelTranscodingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioCodec) {
		toSerialize["AudioCodec"] = o.AudioCodec
	}
	if !IsNil(o.VideoCodec) {
		toSerialize["VideoCodec"] = o.VideoCodec
	}
	if !IsNil(o.SubProtocol) {
		toSerialize["SubProtocol"] = o.SubProtocol
	}
	if !IsNil(o.Container) {
		toSerialize["Container"] = o.Container
	}
	if !IsNil(o.IsVideoDirect) {
		toSerialize["IsVideoDirect"] = o.IsVideoDirect
	}
	if !IsNil(o.IsAudioDirect) {
		toSerialize["IsAudioDirect"] = o.IsAudioDirect
	}
	if o.Bitrate.IsSet() {
		toSerialize["Bitrate"] = o.Bitrate.Get()
	}
	if o.AudioBitrate.IsSet() {
		toSerialize["AudioBitrate"] = o.AudioBitrate.Get()
	}
	if o.VideoBitrate.IsSet() {
		toSerialize["VideoBitrate"] = o.VideoBitrate.Get()
	}
	if o.Framerate.IsSet() {
		toSerialize["Framerate"] = o.Framerate.Get()
	}
	if o.CompletionPercentage.IsSet() {
		toSerialize["CompletionPercentage"] = o.CompletionPercentage.Get()
	}
	if o.TranscodingPositionTicks.IsSet() {
		toSerialize["TranscodingPositionTicks"] = o.TranscodingPositionTicks.Get()
	}
	if o.TranscodingStartPositionTicks.IsSet() {
		toSerialize["TranscodingStartPositionTicks"] = o.TranscodingStartPositionTicks.Get()
	}
	if o.Width.IsSet() {
		toSerialize["Width"] = o.Width.Get()
	}
	if o.Height.IsSet() {
		toSerialize["Height"] = o.Height.Get()
	}
	if o.AudioChannels.IsSet() {
		toSerialize["AudioChannels"] = o.AudioChannels.Get()
	}
	if !IsNil(o.TranscodeReasons) {
		toSerialize["TranscodeReasons"] = o.TranscodeReasons
	}
	if o.CurrentCpuUsage.IsSet() {
		toSerialize["CurrentCpuUsage"] = o.CurrentCpuUsage.Get()
	}
	if o.AverageCpuUsage.IsSet() {
		toSerialize["AverageCpuUsage"] = o.AverageCpuUsage.Get()
	}
	if !IsNil(o.CpuHistory) {
		toSerialize["CpuHistory"] = o.CpuHistory
	}
	if !IsNil(o.ProcessStatistics) {
		toSerialize["ProcessStatistics"] = o.ProcessStatistics
	}
	if o.CurrentThrottle.IsSet() {
		toSerialize["CurrentThrottle"] = o.CurrentThrottle.Get()
	}
	if !IsNil(o.VideoDecoder) {
		toSerialize["VideoDecoder"] = o.VideoDecoder
	}
	if !IsNil(o.VideoDecoderIsHardware) {
		toSerialize["VideoDecoderIsHardware"] = o.VideoDecoderIsHardware
	}
	if !IsNil(o.VideoDecoderMediaType) {
		toSerialize["VideoDecoderMediaType"] = o.VideoDecoderMediaType
	}
	if !IsNil(o.VideoDecoderHwAccel) {
		toSerialize["VideoDecoderHwAccel"] = o.VideoDecoderHwAccel
	}
	if !IsNil(o.VideoEncoder) {
		toSerialize["VideoEncoder"] = o.VideoEncoder
	}
	if !IsNil(o.VideoEncoderIsHardware) {
		toSerialize["VideoEncoderIsHardware"] = o.VideoEncoderIsHardware
	}
	if !IsNil(o.VideoEncoderMediaType) {
		toSerialize["VideoEncoderMediaType"] = o.VideoEncoderMediaType
	}
	if !IsNil(o.VideoEncoderHwAccel) {
		toSerialize["VideoEncoderHwAccel"] = o.VideoEncoderHwAccel
	}
	if !IsNil(o.VideoPipelineInfo) {
		toSerialize["VideoPipelineInfo"] = o.VideoPipelineInfo
	}
	if !IsNil(o.SubtitlePipelineInfos) {
		toSerialize["SubtitlePipelineInfos"] = o.SubtitlePipelineInfos
	}
	return toSerialize, nil
}

type NullableModelTranscodingInfo struct {
	value *ModelTranscodingInfo
	isSet bool
}

func (v NullableModelTranscodingInfo) Get() *ModelTranscodingInfo {
	return v.value
}

func (v *NullableModelTranscodingInfo) Set(val *ModelTranscodingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelTranscodingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelTranscodingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelTranscodingInfo(val *ModelTranscodingInfo) *NullableModelTranscodingInfo {
	return &NullableModelTranscodingInfo{value: val, isSet: true}
}

func (v NullableModelTranscodingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelTranscodingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


