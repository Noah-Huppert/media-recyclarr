/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelMetadataFields the model 'ModelMetadataFields'
type ModelMetadataFields string

// List of MetadataFields
const (
	MODELMETADATAFIELDS_CAST ModelMetadataFields = "Cast"
	MODELMETADATAFIELDS_GENRES ModelMetadataFields = "Genres"
	MODELMETADATAFIELDS_PRODUCTION_LOCATIONS ModelMetadataFields = "ProductionLocations"
	MODELMETADATAFIELDS_STUDIOS ModelMetadataFields = "Studios"
	MODELMETADATAFIELDS_TAGS ModelMetadataFields = "Tags"
	MODELMETADATAFIELDS_NAME ModelMetadataFields = "Name"
	MODELMETADATAFIELDS_OVERVIEW ModelMetadataFields = "Overview"
	MODELMETADATAFIELDS_RUNTIME ModelMetadataFields = "Runtime"
	MODELMETADATAFIELDS_OFFICIAL_RATING ModelMetadataFields = "OfficialRating"
	MODELMETADATAFIELDS_COLLECTIONS ModelMetadataFields = "Collections"
	MODELMETADATAFIELDS_CHANNEL_NUMBER ModelMetadataFields = "ChannelNumber"
	MODELMETADATAFIELDS_SORT_NAME ModelMetadataFields = "SortName"
	MODELMETADATAFIELDS_ORIGINAL_TITLE ModelMetadataFields = "OriginalTitle"
	MODELMETADATAFIELDS_SORT_INDEX_NUMBER ModelMetadataFields = "SortIndexNumber"
	MODELMETADATAFIELDS_SORT_PARENT_INDEX_NUMBER ModelMetadataFields = "SortParentIndexNumber"
	MODELMETADATAFIELDS_COMMUNITY_RATING ModelMetadataFields = "CommunityRating"
	MODELMETADATAFIELDS_CRITIC_RATING ModelMetadataFields = "CriticRating"
	MODELMETADATAFIELDS_TAGLINE ModelMetadataFields = "Tagline"
)

// All allowed values of ModelMetadataFields enum
var AllowedModelMetadataFieldsEnumValues = []ModelMetadataFields{
	"Cast",
	"Genres",
	"ProductionLocations",
	"Studios",
	"Tags",
	"Name",
	"Overview",
	"Runtime",
	"OfficialRating",
	"Collections",
	"ChannelNumber",
	"SortName",
	"OriginalTitle",
	"SortIndexNumber",
	"SortParentIndexNumber",
	"CommunityRating",
	"CriticRating",
	"Tagline",
}

func (v *ModelMetadataFields) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelMetadataFields(value)
	for _, existing := range AllowedModelMetadataFieldsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelMetadataFields", value)
}

// NewModelMetadataFieldsFromValue returns a pointer to a valid ModelMetadataFields
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelMetadataFieldsFromValue(v string) (*ModelMetadataFields, error) {
	ev := ModelMetadataFields(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelMetadataFields: valid values are %v", v, AllowedModelMetadataFieldsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelMetadataFields) IsValid() bool {
	for _, existing := range AllowedModelMetadataFieldsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MetadataFields value
func (v ModelMetadataFields) Ptr() *ModelMetadataFields {
	return &v
}

type NullableModelMetadataFields struct {
	value *ModelMetadataFields
	isSet bool
}

func (v NullableModelMetadataFields) Get() *ModelMetadataFields {
	return v.value
}

func (v *NullableModelMetadataFields) Set(val *ModelMetadataFields) {
	v.value = val
	v.isSet = true
}

func (v NullableModelMetadataFields) IsSet() bool {
	return v.isSet
}

func (v *NullableModelMetadataFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelMetadataFields(val *ModelMetadataFields) *NullableModelMetadataFields {
	return &NullableModelMetadataFields{value: val, isSet: true}
}

func (v NullableModelMetadataFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelMetadataFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

