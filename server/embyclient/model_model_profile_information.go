/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelProfileInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelProfileInformation{}

// ModelProfileInformation struct for ModelProfileInformation
type ModelProfileInformation struct {
	ShortName *string `json:"ShortName,omitempty"`
	Description *string `json:"Description,omitempty"`
	Details *string `json:"Details,omitempty"`
	Id *string `json:"Id,omitempty"`
	BitDepths []int32 `json:"BitDepths,omitempty"`
}

// NewModelProfileInformation instantiates a new ModelProfileInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelProfileInformation() *ModelProfileInformation {
	this := ModelProfileInformation{}
	return &this
}

// NewModelProfileInformationWithDefaults instantiates a new ModelProfileInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelProfileInformationWithDefaults() *ModelProfileInformation {
	this := ModelProfileInformation{}
	return &this
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ModelProfileInformation) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileInformation) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *ModelProfileInformation) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ModelProfileInformation) SetShortName(v string) {
	o.ShortName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelProfileInformation) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileInformation) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelProfileInformation) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelProfileInformation) SetDescription(v string) {
	o.Description = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ModelProfileInformation) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileInformation) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ModelProfileInformation) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *ModelProfileInformation) SetDetails(v string) {
	o.Details = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelProfileInformation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileInformation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelProfileInformation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelProfileInformation) SetId(v string) {
	o.Id = &v
}

// GetBitDepths returns the BitDepths field value if set, zero value otherwise.
func (o *ModelProfileInformation) GetBitDepths() []int32 {
	if o == nil || IsNil(o.BitDepths) {
		var ret []int32
		return ret
	}
	return o.BitDepths
}

// GetBitDepthsOk returns a tuple with the BitDepths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileInformation) GetBitDepthsOk() ([]int32, bool) {
	if o == nil || IsNil(o.BitDepths) {
		return nil, false
	}
	return o.BitDepths, true
}

// HasBitDepths returns a boolean if a field has been set.
func (o *ModelProfileInformation) HasBitDepths() bool {
	if o != nil && !IsNil(o.BitDepths) {
		return true
	}

	return false
}

// SetBitDepths gets a reference to the given []int32 and assigns it to the BitDepths field.
func (o *ModelProfileInformation) SetBitDepths(v []int32) {
	o.BitDepths = v
}

func (o ModelProfileInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelProfileInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShortName) {
		toSerialize["ShortName"] = o.ShortName
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Details) {
		toSerialize["Details"] = o.Details
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.BitDepths) {
		toSerialize["BitDepths"] = o.BitDepths
	}
	return toSerialize, nil
}

type NullableModelProfileInformation struct {
	value *ModelProfileInformation
	isSet bool
}

func (v NullableModelProfileInformation) Get() *ModelProfileInformation {
	return v.value
}

func (v *NullableModelProfileInformation) Set(val *ModelProfileInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableModelProfileInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableModelProfileInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelProfileInformation(val *ModelProfileInformation) *NullableModelProfileInformation {
	return &NullableModelProfileInformation{value: val, isSet: true}
}

func (v NullableModelProfileInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelProfileInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


