/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelLiveTVApiAvailableRecordingOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelLiveTVApiAvailableRecordingOptions{}

// ModelLiveTVApiAvailableRecordingOptions struct for ModelLiveTVApiAvailableRecordingOptions
type ModelLiveTVApiAvailableRecordingOptions struct {
	RecordingFolders []ModelLiveTVApiNameIdDescriptionPair `json:"RecordingFolders,omitempty"`
	MovieRecordingFolders []ModelLiveTVApiNameIdDescriptionPair `json:"MovieRecordingFolders,omitempty"`
	SeriesRecordingFolders []ModelLiveTVApiNameIdDescriptionPair `json:"SeriesRecordingFolders,omitempty"`
}

// NewModelLiveTVApiAvailableRecordingOptions instantiates a new ModelLiveTVApiAvailableRecordingOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelLiveTVApiAvailableRecordingOptions() *ModelLiveTVApiAvailableRecordingOptions {
	this := ModelLiveTVApiAvailableRecordingOptions{}
	return &this
}

// NewModelLiveTVApiAvailableRecordingOptionsWithDefaults instantiates a new ModelLiveTVApiAvailableRecordingOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelLiveTVApiAvailableRecordingOptionsWithDefaults() *ModelLiveTVApiAvailableRecordingOptions {
	this := ModelLiveTVApiAvailableRecordingOptions{}
	return &this
}

// GetRecordingFolders returns the RecordingFolders field value if set, zero value otherwise.
func (o *ModelLiveTVApiAvailableRecordingOptions) GetRecordingFolders() []ModelLiveTVApiNameIdDescriptionPair {
	if o == nil || IsNil(o.RecordingFolders) {
		var ret []ModelLiveTVApiNameIdDescriptionPair
		return ret
	}
	return o.RecordingFolders
}

// GetRecordingFoldersOk returns a tuple with the RecordingFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTVApiAvailableRecordingOptions) GetRecordingFoldersOk() ([]ModelLiveTVApiNameIdDescriptionPair, bool) {
	if o == nil || IsNil(o.RecordingFolders) {
		return nil, false
	}
	return o.RecordingFolders, true
}

// HasRecordingFolders returns a boolean if a field has been set.
func (o *ModelLiveTVApiAvailableRecordingOptions) HasRecordingFolders() bool {
	if o != nil && !IsNil(o.RecordingFolders) {
		return true
	}

	return false
}

// SetRecordingFolders gets a reference to the given []ModelLiveTVApiNameIdDescriptionPair and assigns it to the RecordingFolders field.
func (o *ModelLiveTVApiAvailableRecordingOptions) SetRecordingFolders(v []ModelLiveTVApiNameIdDescriptionPair) {
	o.RecordingFolders = v
}

// GetMovieRecordingFolders returns the MovieRecordingFolders field value if set, zero value otherwise.
func (o *ModelLiveTVApiAvailableRecordingOptions) GetMovieRecordingFolders() []ModelLiveTVApiNameIdDescriptionPair {
	if o == nil || IsNil(o.MovieRecordingFolders) {
		var ret []ModelLiveTVApiNameIdDescriptionPair
		return ret
	}
	return o.MovieRecordingFolders
}

// GetMovieRecordingFoldersOk returns a tuple with the MovieRecordingFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTVApiAvailableRecordingOptions) GetMovieRecordingFoldersOk() ([]ModelLiveTVApiNameIdDescriptionPair, bool) {
	if o == nil || IsNil(o.MovieRecordingFolders) {
		return nil, false
	}
	return o.MovieRecordingFolders, true
}

// HasMovieRecordingFolders returns a boolean if a field has been set.
func (o *ModelLiveTVApiAvailableRecordingOptions) HasMovieRecordingFolders() bool {
	if o != nil && !IsNil(o.MovieRecordingFolders) {
		return true
	}

	return false
}

// SetMovieRecordingFolders gets a reference to the given []ModelLiveTVApiNameIdDescriptionPair and assigns it to the MovieRecordingFolders field.
func (o *ModelLiveTVApiAvailableRecordingOptions) SetMovieRecordingFolders(v []ModelLiveTVApiNameIdDescriptionPair) {
	o.MovieRecordingFolders = v
}

// GetSeriesRecordingFolders returns the SeriesRecordingFolders field value if set, zero value otherwise.
func (o *ModelLiveTVApiAvailableRecordingOptions) GetSeriesRecordingFolders() []ModelLiveTVApiNameIdDescriptionPair {
	if o == nil || IsNil(o.SeriesRecordingFolders) {
		var ret []ModelLiveTVApiNameIdDescriptionPair
		return ret
	}
	return o.SeriesRecordingFolders
}

// GetSeriesRecordingFoldersOk returns a tuple with the SeriesRecordingFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTVApiAvailableRecordingOptions) GetSeriesRecordingFoldersOk() ([]ModelLiveTVApiNameIdDescriptionPair, bool) {
	if o == nil || IsNil(o.SeriesRecordingFolders) {
		return nil, false
	}
	return o.SeriesRecordingFolders, true
}

// HasSeriesRecordingFolders returns a boolean if a field has been set.
func (o *ModelLiveTVApiAvailableRecordingOptions) HasSeriesRecordingFolders() bool {
	if o != nil && !IsNil(o.SeriesRecordingFolders) {
		return true
	}

	return false
}

// SetSeriesRecordingFolders gets a reference to the given []ModelLiveTVApiNameIdDescriptionPair and assigns it to the SeriesRecordingFolders field.
func (o *ModelLiveTVApiAvailableRecordingOptions) SetSeriesRecordingFolders(v []ModelLiveTVApiNameIdDescriptionPair) {
	o.SeriesRecordingFolders = v
}

func (o ModelLiveTVApiAvailableRecordingOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelLiveTVApiAvailableRecordingOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordingFolders) {
		toSerialize["RecordingFolders"] = o.RecordingFolders
	}
	if !IsNil(o.MovieRecordingFolders) {
		toSerialize["MovieRecordingFolders"] = o.MovieRecordingFolders
	}
	if !IsNil(o.SeriesRecordingFolders) {
		toSerialize["SeriesRecordingFolders"] = o.SeriesRecordingFolders
	}
	return toSerialize, nil
}

type NullableModelLiveTVApiAvailableRecordingOptions struct {
	value *ModelLiveTVApiAvailableRecordingOptions
	isSet bool
}

func (v NullableModelLiveTVApiAvailableRecordingOptions) Get() *ModelLiveTVApiAvailableRecordingOptions {
	return v.value
}

func (v *NullableModelLiveTVApiAvailableRecordingOptions) Set(val *ModelLiveTVApiAvailableRecordingOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLiveTVApiAvailableRecordingOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLiveTVApiAvailableRecordingOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLiveTVApiAvailableRecordingOptions(val *ModelLiveTVApiAvailableRecordingOptions) *NullableModelLiveTVApiAvailableRecordingOptions {
	return &NullableModelLiveTVApiAvailableRecordingOptions{value: val, isSet: true}
}

func (v NullableModelLiveTVApiAvailableRecordingOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLiveTVApiAvailableRecordingOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


