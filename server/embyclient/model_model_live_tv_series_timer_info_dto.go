/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelLiveTvSeriesTimerInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelLiveTvSeriesTimerInfoDto{}

// ModelLiveTvSeriesTimerInfoDto struct for ModelLiveTvSeriesTimerInfoDto
type ModelLiveTvSeriesTimerInfoDto struct {
	RecordAnyTime *bool `json:"RecordAnyTime,omitempty"`
	SkipEpisodesInLibrary *bool `json:"SkipEpisodesInLibrary,omitempty"`
	RecordAnyChannel *bool `json:"RecordAnyChannel,omitempty"`
	KeepUpTo *int32 `json:"KeepUpTo,omitempty"`
	MaxRecordingSeconds *int32 `json:"MaxRecordingSeconds,omitempty"`
	RecordNewOnly *bool `json:"RecordNewOnly,omitempty"`
	ChannelIds []string `json:"ChannelIds,omitempty"`
	Days []ModelDayOfWeek `json:"Days,omitempty"`
	ImageTags *map[string]string `json:"ImageTags,omitempty"`
	ParentThumbItemId *string `json:"ParentThumbItemId,omitempty"`
	ParentThumbImageTag *string `json:"ParentThumbImageTag,omitempty"`
	ParentPrimaryImageItemId *string `json:"ParentPrimaryImageItemId,omitempty"`
	ParentPrimaryImageTag *string `json:"ParentPrimaryImageTag,omitempty"`
	SeriesId *string `json:"SeriesId,omitempty"`
	Keywords []ModelLiveTvKeywordInfo `json:"Keywords,omitempty"`
	TimerType *ModelLiveTvTimerType `json:"TimerType,omitempty"`
	Id *string `json:"Id,omitempty"`
	Type *string `json:"Type,omitempty"`
	ServerId *string `json:"ServerId,omitempty"`
	ChannelId *string `json:"ChannelId,omitempty"`
	ChannelName *string `json:"ChannelName,omitempty"`
	ChannelNumber *string `json:"ChannelNumber,omitempty"`
	ChannelPrimaryImageTag *string `json:"ChannelPrimaryImageTag,omitempty"`
	ProgramId *string `json:"ProgramId,omitempty"`
	Name *string `json:"Name,omitempty"`
	Overview *string `json:"Overview,omitempty"`
	ParentFolderId *string `json:"ParentFolderId,omitempty"`
	StartDate *time.Time `json:"StartDate,omitempty"`
	EndDate *time.Time `json:"EndDate,omitempty"`
	Priority *int32 `json:"Priority,omitempty"`
	PrePaddingSeconds *int32 `json:"PrePaddingSeconds,omitempty"`
	PostPaddingSeconds *int32 `json:"PostPaddingSeconds,omitempty"`
	IsPrePaddingRequired *bool `json:"IsPrePaddingRequired,omitempty"`
	ParentBackdropItemId *string `json:"ParentBackdropItemId,omitempty"`
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	IsPostPaddingRequired *bool `json:"IsPostPaddingRequired,omitempty"`
	KeepUntil *ModelLiveTvKeepUntil `json:"KeepUntil,omitempty"`
}

// NewModelLiveTvSeriesTimerInfoDto instantiates a new ModelLiveTvSeriesTimerInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelLiveTvSeriesTimerInfoDto() *ModelLiveTvSeriesTimerInfoDto {
	this := ModelLiveTvSeriesTimerInfoDto{}
	return &this
}

// NewModelLiveTvSeriesTimerInfoDtoWithDefaults instantiates a new ModelLiveTvSeriesTimerInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelLiveTvSeriesTimerInfoDtoWithDefaults() *ModelLiveTvSeriesTimerInfoDto {
	this := ModelLiveTvSeriesTimerInfoDto{}
	return &this
}

// GetRecordAnyTime returns the RecordAnyTime field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetRecordAnyTime() bool {
	if o == nil || IsNil(o.RecordAnyTime) {
		var ret bool
		return ret
	}
	return *o.RecordAnyTime
}

// GetRecordAnyTimeOk returns a tuple with the RecordAnyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetRecordAnyTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordAnyTime) {
		return nil, false
	}
	return o.RecordAnyTime, true
}

// HasRecordAnyTime returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasRecordAnyTime() bool {
	if o != nil && !IsNil(o.RecordAnyTime) {
		return true
	}

	return false
}

// SetRecordAnyTime gets a reference to the given bool and assigns it to the RecordAnyTime field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetRecordAnyTime(v bool) {
	o.RecordAnyTime = &v
}

// GetSkipEpisodesInLibrary returns the SkipEpisodesInLibrary field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetSkipEpisodesInLibrary() bool {
	if o == nil || IsNil(o.SkipEpisodesInLibrary) {
		var ret bool
		return ret
	}
	return *o.SkipEpisodesInLibrary
}

// GetSkipEpisodesInLibraryOk returns a tuple with the SkipEpisodesInLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetSkipEpisodesInLibraryOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipEpisodesInLibrary) {
		return nil, false
	}
	return o.SkipEpisodesInLibrary, true
}

// HasSkipEpisodesInLibrary returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasSkipEpisodesInLibrary() bool {
	if o != nil && !IsNil(o.SkipEpisodesInLibrary) {
		return true
	}

	return false
}

// SetSkipEpisodesInLibrary gets a reference to the given bool and assigns it to the SkipEpisodesInLibrary field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetSkipEpisodesInLibrary(v bool) {
	o.SkipEpisodesInLibrary = &v
}

// GetRecordAnyChannel returns the RecordAnyChannel field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetRecordAnyChannel() bool {
	if o == nil || IsNil(o.RecordAnyChannel) {
		var ret bool
		return ret
	}
	return *o.RecordAnyChannel
}

// GetRecordAnyChannelOk returns a tuple with the RecordAnyChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetRecordAnyChannelOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordAnyChannel) {
		return nil, false
	}
	return o.RecordAnyChannel, true
}

// HasRecordAnyChannel returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasRecordAnyChannel() bool {
	if o != nil && !IsNil(o.RecordAnyChannel) {
		return true
	}

	return false
}

// SetRecordAnyChannel gets a reference to the given bool and assigns it to the RecordAnyChannel field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetRecordAnyChannel(v bool) {
	o.RecordAnyChannel = &v
}

// GetKeepUpTo returns the KeepUpTo field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetKeepUpTo() int32 {
	if o == nil || IsNil(o.KeepUpTo) {
		var ret int32
		return ret
	}
	return *o.KeepUpTo
}

// GetKeepUpToOk returns a tuple with the KeepUpTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetKeepUpToOk() (*int32, bool) {
	if o == nil || IsNil(o.KeepUpTo) {
		return nil, false
	}
	return o.KeepUpTo, true
}

// HasKeepUpTo returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasKeepUpTo() bool {
	if o != nil && !IsNil(o.KeepUpTo) {
		return true
	}

	return false
}

// SetKeepUpTo gets a reference to the given int32 and assigns it to the KeepUpTo field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetKeepUpTo(v int32) {
	o.KeepUpTo = &v
}

// GetMaxRecordingSeconds returns the MaxRecordingSeconds field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetMaxRecordingSeconds() int32 {
	if o == nil || IsNil(o.MaxRecordingSeconds) {
		var ret int32
		return ret
	}
	return *o.MaxRecordingSeconds
}

// GetMaxRecordingSecondsOk returns a tuple with the MaxRecordingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetMaxRecordingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRecordingSeconds) {
		return nil, false
	}
	return o.MaxRecordingSeconds, true
}

// HasMaxRecordingSeconds returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasMaxRecordingSeconds() bool {
	if o != nil && !IsNil(o.MaxRecordingSeconds) {
		return true
	}

	return false
}

// SetMaxRecordingSeconds gets a reference to the given int32 and assigns it to the MaxRecordingSeconds field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetMaxRecordingSeconds(v int32) {
	o.MaxRecordingSeconds = &v
}

// GetRecordNewOnly returns the RecordNewOnly field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetRecordNewOnly() bool {
	if o == nil || IsNil(o.RecordNewOnly) {
		var ret bool
		return ret
	}
	return *o.RecordNewOnly
}

// GetRecordNewOnlyOk returns a tuple with the RecordNewOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetRecordNewOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordNewOnly) {
		return nil, false
	}
	return o.RecordNewOnly, true
}

// HasRecordNewOnly returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasRecordNewOnly() bool {
	if o != nil && !IsNil(o.RecordNewOnly) {
		return true
	}

	return false
}

// SetRecordNewOnly gets a reference to the given bool and assigns it to the RecordNewOnly field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetRecordNewOnly(v bool) {
	o.RecordNewOnly = &v
}

// GetChannelIds returns the ChannelIds field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelIds() []string {
	if o == nil || IsNil(o.ChannelIds) {
		var ret []string
		return ret
	}
	return o.ChannelIds
}

// GetChannelIdsOk returns a tuple with the ChannelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ChannelIds) {
		return nil, false
	}
	return o.ChannelIds, true
}

// HasChannelIds returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasChannelIds() bool {
	if o != nil && !IsNil(o.ChannelIds) {
		return true
	}

	return false
}

// SetChannelIds gets a reference to the given []string and assigns it to the ChannelIds field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetChannelIds(v []string) {
	o.ChannelIds = v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetDays() []ModelDayOfWeek {
	if o == nil || IsNil(o.Days) {
		var ret []ModelDayOfWeek
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetDaysOk() ([]ModelDayOfWeek, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []ModelDayOfWeek and assigns it to the Days field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetDays(v []ModelDayOfWeek) {
	o.Days = v
}

// GetImageTags returns the ImageTags field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetImageTags() map[string]string {
	if o == nil || IsNil(o.ImageTags) {
		var ret map[string]string
		return ret
	}
	return *o.ImageTags
}

// GetImageTagsOk returns a tuple with the ImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetImageTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ImageTags) {
		return nil, false
	}
	return o.ImageTags, true
}

// HasImageTags returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasImageTags() bool {
	if o != nil && !IsNil(o.ImageTags) {
		return true
	}

	return false
}

// SetImageTags gets a reference to the given map[string]string and assigns it to the ImageTags field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetImageTags(v map[string]string) {
	o.ImageTags = &v
}

// GetParentThumbItemId returns the ParentThumbItemId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentThumbItemId() string {
	if o == nil || IsNil(o.ParentThumbItemId) {
		var ret string
		return ret
	}
	return *o.ParentThumbItemId
}

// GetParentThumbItemIdOk returns a tuple with the ParentThumbItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentThumbItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbItemId) {
		return nil, false
	}
	return o.ParentThumbItemId, true
}

// HasParentThumbItemId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasParentThumbItemId() bool {
	if o != nil && !IsNil(o.ParentThumbItemId) {
		return true
	}

	return false
}

// SetParentThumbItemId gets a reference to the given string and assigns it to the ParentThumbItemId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetParentThumbItemId(v string) {
	o.ParentThumbItemId = &v
}

// GetParentThumbImageTag returns the ParentThumbImageTag field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentThumbImageTag() string {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		var ret string
		return ret
	}
	return *o.ParentThumbImageTag
}

// GetParentThumbImageTagOk returns a tuple with the ParentThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentThumbImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		return nil, false
	}
	return o.ParentThumbImageTag, true
}

// HasParentThumbImageTag returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasParentThumbImageTag() bool {
	if o != nil && !IsNil(o.ParentThumbImageTag) {
		return true
	}

	return false
}

// SetParentThumbImageTag gets a reference to the given string and assigns it to the ParentThumbImageTag field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetParentThumbImageTag(v string) {
	o.ParentThumbImageTag = &v
}

// GetParentPrimaryImageItemId returns the ParentPrimaryImageItemId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentPrimaryImageItemId() string {
	if o == nil || IsNil(o.ParentPrimaryImageItemId) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageItemId
}

// GetParentPrimaryImageItemIdOk returns a tuple with the ParentPrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentPrimaryImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentPrimaryImageItemId) {
		return nil, false
	}
	return o.ParentPrimaryImageItemId, true
}

// HasParentPrimaryImageItemId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasParentPrimaryImageItemId() bool {
	if o != nil && !IsNil(o.ParentPrimaryImageItemId) {
		return true
	}

	return false
}

// SetParentPrimaryImageItemId gets a reference to the given string and assigns it to the ParentPrimaryImageItemId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetParentPrimaryImageItemId(v string) {
	o.ParentPrimaryImageItemId = &v
}

// GetParentPrimaryImageTag returns the ParentPrimaryImageTag field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentPrimaryImageTag() string {
	if o == nil || IsNil(o.ParentPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageTag
}

// GetParentPrimaryImageTagOk returns a tuple with the ParentPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentPrimaryImageTag) {
		return nil, false
	}
	return o.ParentPrimaryImageTag, true
}

// HasParentPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasParentPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ParentPrimaryImageTag) {
		return true
	}

	return false
}

// SetParentPrimaryImageTag gets a reference to the given string and assigns it to the ParentPrimaryImageTag field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetParentPrimaryImageTag(v string) {
	o.ParentPrimaryImageTag = &v
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetSeriesId() string {
	if o == nil || IsNil(o.SeriesId) {
		var ret string
		return ret
	}
	return *o.SeriesId
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetSeriesIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesId) {
		return nil, false
	}
	return o.SeriesId, true
}

// HasSeriesId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasSeriesId() bool {
	if o != nil && !IsNil(o.SeriesId) {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given string and assigns it to the SeriesId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetSeriesId(v string) {
	o.SeriesId = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetKeywords() []ModelLiveTvKeywordInfo {
	if o == nil || IsNil(o.Keywords) {
		var ret []ModelLiveTvKeywordInfo
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetKeywordsOk() ([]ModelLiveTvKeywordInfo, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []ModelLiveTvKeywordInfo and assigns it to the Keywords field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetKeywords(v []ModelLiveTvKeywordInfo) {
	o.Keywords = v
}

// GetTimerType returns the TimerType field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetTimerType() ModelLiveTvTimerType {
	if o == nil || IsNil(o.TimerType) {
		var ret ModelLiveTvTimerType
		return ret
	}
	return *o.TimerType
}

// GetTimerTypeOk returns a tuple with the TimerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetTimerTypeOk() (*ModelLiveTvTimerType, bool) {
	if o == nil || IsNil(o.TimerType) {
		return nil, false
	}
	return o.TimerType, true
}

// HasTimerType returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasTimerType() bool {
	if o != nil && !IsNil(o.TimerType) {
		return true
	}

	return false
}

// SetTimerType gets a reference to the given ModelLiveTvTimerType and assigns it to the TimerType field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetTimerType(v ModelLiveTvTimerType) {
	o.TimerType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetType(v string) {
	o.Type = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetServerId(v string) {
	o.ServerId = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetChannelNumber returns the ChannelNumber field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelNumber() string {
	if o == nil || IsNil(o.ChannelNumber) {
		var ret string
		return ret
	}
	return *o.ChannelNumber
}

// GetChannelNumberOk returns a tuple with the ChannelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelNumber) {
		return nil, false
	}
	return o.ChannelNumber, true
}

// HasChannelNumber returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasChannelNumber() bool {
	if o != nil && !IsNil(o.ChannelNumber) {
		return true
	}

	return false
}

// SetChannelNumber gets a reference to the given string and assigns it to the ChannelNumber field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetChannelNumber(v string) {
	o.ChannelNumber = &v
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		return nil, false
	}
	return o.ChannelPrimaryImageTag, true
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasChannelPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ChannelPrimaryImageTag) {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given string and assigns it to the ChannelPrimaryImageTag field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag = &v
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetProgramId() string {
	if o == nil || IsNil(o.ProgramId) {
		var ret string
		return ret
	}
	return *o.ProgramId
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetProgramIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramId) {
		return nil, false
	}
	return o.ProgramId, true
}

// HasProgramId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasProgramId() bool {
	if o != nil && !IsNil(o.ProgramId) {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given string and assigns it to the ProgramId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetProgramId(v string) {
	o.ProgramId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetName(v string) {
	o.Name = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetOverview() string {
	if o == nil || IsNil(o.Overview) {
		var ret string
		return ret
	}
	return *o.Overview
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.Overview) {
		return nil, false
	}
	return o.Overview, true
}

// HasOverview returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasOverview() bool {
	if o != nil && !IsNil(o.Overview) {
		return true
	}

	return false
}

// SetOverview gets a reference to the given string and assigns it to the Overview field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetOverview(v string) {
	o.Overview = &v
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentFolderId() string {
	if o == nil || IsNil(o.ParentFolderId) {
		var ret string
		return ret
	}
	return *o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentFolderId) {
		return nil, false
	}
	return o.ParentFolderId, true
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasParentFolderId() bool {
	if o != nil && !IsNil(o.ParentFolderId) {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given string and assigns it to the ParentFolderId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetParentFolderId(v string) {
	o.ParentFolderId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetPriority(v int32) {
	o.Priority = &v
}

// GetPrePaddingSeconds returns the PrePaddingSeconds field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetPrePaddingSeconds() int32 {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PrePaddingSeconds
}

// GetPrePaddingSecondsOk returns a tuple with the PrePaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetPrePaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		return nil, false
	}
	return o.PrePaddingSeconds, true
}

// HasPrePaddingSeconds returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasPrePaddingSeconds() bool {
	if o != nil && !IsNil(o.PrePaddingSeconds) {
		return true
	}

	return false
}

// SetPrePaddingSeconds gets a reference to the given int32 and assigns it to the PrePaddingSeconds field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetPrePaddingSeconds(v int32) {
	o.PrePaddingSeconds = &v
}

// GetPostPaddingSeconds returns the PostPaddingSeconds field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetPostPaddingSeconds() int32 {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PostPaddingSeconds
}

// GetPostPaddingSecondsOk returns a tuple with the PostPaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetPostPaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		return nil, false
	}
	return o.PostPaddingSeconds, true
}

// HasPostPaddingSeconds returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasPostPaddingSeconds() bool {
	if o != nil && !IsNil(o.PostPaddingSeconds) {
		return true
	}

	return false
}

// SetPostPaddingSeconds gets a reference to the given int32 and assigns it to the PostPaddingSeconds field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetPostPaddingSeconds(v int32) {
	o.PostPaddingSeconds = &v
}

// GetIsPrePaddingRequired returns the IsPrePaddingRequired field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetIsPrePaddingRequired() bool {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPrePaddingRequired
}

// GetIsPrePaddingRequiredOk returns a tuple with the IsPrePaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetIsPrePaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		return nil, false
	}
	return o.IsPrePaddingRequired, true
}

// HasIsPrePaddingRequired returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasIsPrePaddingRequired() bool {
	if o != nil && !IsNil(o.IsPrePaddingRequired) {
		return true
	}

	return false
}

// SetIsPrePaddingRequired gets a reference to the given bool and assigns it to the IsPrePaddingRequired field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetIsPrePaddingRequired(v bool) {
	o.IsPrePaddingRequired = &v
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		return nil, false
	}
	return o.ParentBackdropItemId, true
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasParentBackdropItemId() bool {
	if o != nil && !IsNil(o.ParentBackdropItemId) {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given string and assigns it to the ParentBackdropItemId field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId = &v
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentBackdropImageTags() []string {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetIsPostPaddingRequired returns the IsPostPaddingRequired field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetIsPostPaddingRequired() bool {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPostPaddingRequired
}

// GetIsPostPaddingRequiredOk returns a tuple with the IsPostPaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetIsPostPaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		return nil, false
	}
	return o.IsPostPaddingRequired, true
}

// HasIsPostPaddingRequired returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasIsPostPaddingRequired() bool {
	if o != nil && !IsNil(o.IsPostPaddingRequired) {
		return true
	}

	return false
}

// SetIsPostPaddingRequired gets a reference to the given bool and assigns it to the IsPostPaddingRequired field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetIsPostPaddingRequired(v bool) {
	o.IsPostPaddingRequired = &v
}

// GetKeepUntil returns the KeepUntil field value if set, zero value otherwise.
func (o *ModelLiveTvSeriesTimerInfoDto) GetKeepUntil() ModelLiveTvKeepUntil {
	if o == nil || IsNil(o.KeepUntil) {
		var ret ModelLiveTvKeepUntil
		return ret
	}
	return *o.KeepUntil
}

// GetKeepUntilOk returns a tuple with the KeepUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) GetKeepUntilOk() (*ModelLiveTvKeepUntil, bool) {
	if o == nil || IsNil(o.KeepUntil) {
		return nil, false
	}
	return o.KeepUntil, true
}

// HasKeepUntil returns a boolean if a field has been set.
func (o *ModelLiveTvSeriesTimerInfoDto) HasKeepUntil() bool {
	if o != nil && !IsNil(o.KeepUntil) {
		return true
	}

	return false
}

// SetKeepUntil gets a reference to the given ModelLiveTvKeepUntil and assigns it to the KeepUntil field.
func (o *ModelLiveTvSeriesTimerInfoDto) SetKeepUntil(v ModelLiveTvKeepUntil) {
	o.KeepUntil = &v
}

func (o ModelLiveTvSeriesTimerInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelLiveTvSeriesTimerInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordAnyTime) {
		toSerialize["RecordAnyTime"] = o.RecordAnyTime
	}
	if !IsNil(o.SkipEpisodesInLibrary) {
		toSerialize["SkipEpisodesInLibrary"] = o.SkipEpisodesInLibrary
	}
	if !IsNil(o.RecordAnyChannel) {
		toSerialize["RecordAnyChannel"] = o.RecordAnyChannel
	}
	if !IsNil(o.KeepUpTo) {
		toSerialize["KeepUpTo"] = o.KeepUpTo
	}
	if !IsNil(o.MaxRecordingSeconds) {
		toSerialize["MaxRecordingSeconds"] = o.MaxRecordingSeconds
	}
	if !IsNil(o.RecordNewOnly) {
		toSerialize["RecordNewOnly"] = o.RecordNewOnly
	}
	if !IsNil(o.ChannelIds) {
		toSerialize["ChannelIds"] = o.ChannelIds
	}
	if !IsNil(o.Days) {
		toSerialize["Days"] = o.Days
	}
	if !IsNil(o.ImageTags) {
		toSerialize["ImageTags"] = o.ImageTags
	}
	if !IsNil(o.ParentThumbItemId) {
		toSerialize["ParentThumbItemId"] = o.ParentThumbItemId
	}
	if !IsNil(o.ParentThumbImageTag) {
		toSerialize["ParentThumbImageTag"] = o.ParentThumbImageTag
	}
	if !IsNil(o.ParentPrimaryImageItemId) {
		toSerialize["ParentPrimaryImageItemId"] = o.ParentPrimaryImageItemId
	}
	if !IsNil(o.ParentPrimaryImageTag) {
		toSerialize["ParentPrimaryImageTag"] = o.ParentPrimaryImageTag
	}
	if !IsNil(o.SeriesId) {
		toSerialize["SeriesId"] = o.SeriesId
	}
	if !IsNil(o.Keywords) {
		toSerialize["Keywords"] = o.Keywords
	}
	if !IsNil(o.TimerType) {
		toSerialize["TimerType"] = o.TimerType
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if !IsNil(o.ChannelName) {
		toSerialize["ChannelName"] = o.ChannelName
	}
	if !IsNil(o.ChannelNumber) {
		toSerialize["ChannelNumber"] = o.ChannelNumber
	}
	if !IsNil(o.ChannelPrimaryImageTag) {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag
	}
	if !IsNil(o.ProgramId) {
		toSerialize["ProgramId"] = o.ProgramId
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Overview) {
		toSerialize["Overview"] = o.Overview
	}
	if !IsNil(o.ParentFolderId) {
		toSerialize["ParentFolderId"] = o.ParentFolderId
	}
	if !IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if !IsNil(o.Priority) {
		toSerialize["Priority"] = o.Priority
	}
	if !IsNil(o.PrePaddingSeconds) {
		toSerialize["PrePaddingSeconds"] = o.PrePaddingSeconds
	}
	if !IsNil(o.PostPaddingSeconds) {
		toSerialize["PostPaddingSeconds"] = o.PostPaddingSeconds
	}
	if !IsNil(o.IsPrePaddingRequired) {
		toSerialize["IsPrePaddingRequired"] = o.IsPrePaddingRequired
	}
	if !IsNil(o.ParentBackdropItemId) {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId
	}
	if !IsNil(o.ParentBackdropImageTags) {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if !IsNil(o.IsPostPaddingRequired) {
		toSerialize["IsPostPaddingRequired"] = o.IsPostPaddingRequired
	}
	if !IsNil(o.KeepUntil) {
		toSerialize["KeepUntil"] = o.KeepUntil
	}
	return toSerialize, nil
}

type NullableModelLiveTvSeriesTimerInfoDto struct {
	value *ModelLiveTvSeriesTimerInfoDto
	isSet bool
}

func (v NullableModelLiveTvSeriesTimerInfoDto) Get() *ModelLiveTvSeriesTimerInfoDto {
	return v.value
}

func (v *NullableModelLiveTvSeriesTimerInfoDto) Set(val *ModelLiveTvSeriesTimerInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLiveTvSeriesTimerInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLiveTvSeriesTimerInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLiveTvSeriesTimerInfoDto(val *ModelLiveTvSeriesTimerInfoDto) *NullableModelLiveTvSeriesTimerInfoDto {
	return &NullableModelLiveTvSeriesTimerInfoDto{value: val, isSet: true}
}

func (v NullableModelLiveTvSeriesTimerInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLiveTvSeriesTimerInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


