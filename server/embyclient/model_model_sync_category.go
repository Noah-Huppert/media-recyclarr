/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelSyncCategory the model 'ModelSyncCategory'
type ModelSyncCategory string

// List of SyncCategory
const (
	MODELSYNCCATEGORY_LATEST ModelSyncCategory = "Latest"
	MODELSYNCCATEGORY_NEXT_UP ModelSyncCategory = "NextUp"
	MODELSYNCCATEGORY_RESUME ModelSyncCategory = "Resume"
)

// All allowed values of ModelSyncCategory enum
var AllowedModelSyncCategoryEnumValues = []ModelSyncCategory{
	"Latest",
	"NextUp",
	"Resume",
}

func (v *ModelSyncCategory) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelSyncCategory(value)
	for _, existing := range AllowedModelSyncCategoryEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelSyncCategory", value)
}

// NewModelSyncCategoryFromValue returns a pointer to a valid ModelSyncCategory
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelSyncCategoryFromValue(v string) (*ModelSyncCategory, error) {
	ev := ModelSyncCategory(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelSyncCategory: valid values are %v", v, AllowedModelSyncCategoryEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelSyncCategory) IsValid() bool {
	for _, existing := range AllowedModelSyncCategoryEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SyncCategory value
func (v ModelSyncCategory) Ptr() *ModelSyncCategory {
	return &v
}

type NullableModelSyncCategory struct {
	value *ModelSyncCategory
	isSet bool
}

func (v NullableModelSyncCategory) Get() *ModelSyncCategory {
	return v.value
}

func (v *NullableModelSyncCategory) Set(val *ModelSyncCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSyncCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSyncCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSyncCategory(val *ModelSyncCategory) *NullableModelSyncCategory {
	return &NullableModelSyncCategory{value: val, isSet: true}
}

func (v NullableModelSyncCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSyncCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

