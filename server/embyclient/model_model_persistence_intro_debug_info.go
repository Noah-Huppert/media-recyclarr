/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelPersistenceIntroDebugInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelPersistenceIntroDebugInfo{}

// ModelPersistenceIntroDebugInfo struct for ModelPersistenceIntroDebugInfo
type ModelPersistenceIntroDebugInfo struct {
	Id *int64 `json:"Id,omitempty"`
	Path *string `json:"Path,omitempty"`
	Start *int64 `json:"Start,omitempty"`
	End *int64 `json:"End,omitempty"`
}

// NewModelPersistenceIntroDebugInfo instantiates a new ModelPersistenceIntroDebugInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelPersistenceIntroDebugInfo() *ModelPersistenceIntroDebugInfo {
	this := ModelPersistenceIntroDebugInfo{}
	return &this
}

// NewModelPersistenceIntroDebugInfoWithDefaults instantiates a new ModelPersistenceIntroDebugInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelPersistenceIntroDebugInfoWithDefaults() *ModelPersistenceIntroDebugInfo {
	this := ModelPersistenceIntroDebugInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelPersistenceIntroDebugInfo) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPersistenceIntroDebugInfo) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelPersistenceIntroDebugInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ModelPersistenceIntroDebugInfo) SetId(v int64) {
	o.Id = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ModelPersistenceIntroDebugInfo) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPersistenceIntroDebugInfo) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ModelPersistenceIntroDebugInfo) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ModelPersistenceIntroDebugInfo) SetPath(v string) {
	o.Path = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ModelPersistenceIntroDebugInfo) GetStart() int64 {
	if o == nil || IsNil(o.Start) {
		var ret int64
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPersistenceIntroDebugInfo) GetStartOk() (*int64, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ModelPersistenceIntroDebugInfo) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int64 and assigns it to the Start field.
func (o *ModelPersistenceIntroDebugInfo) SetStart(v int64) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *ModelPersistenceIntroDebugInfo) GetEnd() int64 {
	if o == nil || IsNil(o.End) {
		var ret int64
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPersistenceIntroDebugInfo) GetEndOk() (*int64, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *ModelPersistenceIntroDebugInfo) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int64 and assigns it to the End field.
func (o *ModelPersistenceIntroDebugInfo) SetEnd(v int64) {
	o.End = &v
}

func (o ModelPersistenceIntroDebugInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelPersistenceIntroDebugInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.Start) {
		toSerialize["Start"] = o.Start
	}
	if !IsNil(o.End) {
		toSerialize["End"] = o.End
	}
	return toSerialize, nil
}

type NullableModelPersistenceIntroDebugInfo struct {
	value *ModelPersistenceIntroDebugInfo
	isSet bool
}

func (v NullableModelPersistenceIntroDebugInfo) Get() *ModelPersistenceIntroDebugInfo {
	return v.value
}

func (v *NullableModelPersistenceIntroDebugInfo) Set(val *ModelPersistenceIntroDebugInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelPersistenceIntroDebugInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelPersistenceIntroDebugInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelPersistenceIntroDebugInfo(val *ModelPersistenceIntroDebugInfo) *NullableModelPersistenceIntroDebugInfo {
	return &NullableModelPersistenceIntroDebugInfo{value: val, isSet: true}
}

func (v NullableModelPersistenceIntroDebugInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelPersistenceIntroDebugInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


