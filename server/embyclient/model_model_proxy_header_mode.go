/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelProxyHeaderMode the model 'ModelProxyHeaderMode'
type ModelProxyHeaderMode string

// List of ProxyHeaderMode
const (
	MODELPROXYHEADERMODE_NONE ModelProxyHeaderMode = "None"
	MODELPROXYHEADERMODE_LAN_ADDRESSES_ONLY ModelProxyHeaderMode = "LanAddressesOnly"
	MODELPROXYHEADERMODE_REMOTE_ADDRESSES_ONLY ModelProxyHeaderMode = "RemoteAddressesOnly"
	MODELPROXYHEADERMODE_ALL_ADDRESSES ModelProxyHeaderMode = "AllAddresses"
)

// All allowed values of ModelProxyHeaderMode enum
var AllowedModelProxyHeaderModeEnumValues = []ModelProxyHeaderMode{
	"None",
	"LanAddressesOnly",
	"RemoteAddressesOnly",
	"AllAddresses",
}

func (v *ModelProxyHeaderMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelProxyHeaderMode(value)
	for _, existing := range AllowedModelProxyHeaderModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelProxyHeaderMode", value)
}

// NewModelProxyHeaderModeFromValue returns a pointer to a valid ModelProxyHeaderMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelProxyHeaderModeFromValue(v string) (*ModelProxyHeaderMode, error) {
	ev := ModelProxyHeaderMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelProxyHeaderMode: valid values are %v", v, AllowedModelProxyHeaderModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelProxyHeaderMode) IsValid() bool {
	for _, existing := range AllowedModelProxyHeaderModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProxyHeaderMode value
func (v ModelProxyHeaderMode) Ptr() *ModelProxyHeaderMode {
	return &v
}

type NullableModelProxyHeaderMode struct {
	value *ModelProxyHeaderMode
	isSet bool
}

func (v NullableModelProxyHeaderMode) Get() *ModelProxyHeaderMode {
	return v.value
}

func (v *NullableModelProxyHeaderMode) Set(val *ModelProxyHeaderMode) {
	v.value = val
	v.isSet = true
}

func (v NullableModelProxyHeaderMode) IsSet() bool {
	return v.isSet
}

func (v *NullableModelProxyHeaderMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelProxyHeaderMode(val *ModelProxyHeaderMode) *NullableModelProxyHeaderMode {
	return &NullableModelProxyHeaderMode{value: val, isSet: true}
}

func (v NullableModelProxyHeaderMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelProxyHeaderMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

