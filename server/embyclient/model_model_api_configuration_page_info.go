/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelApiConfigurationPageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelApiConfigurationPageInfo{}

// ModelApiConfigurationPageInfo struct for ModelApiConfigurationPageInfo
type ModelApiConfigurationPageInfo struct {
	Name *string `json:"Name,omitempty"`
	EnableInMainMenu *bool `json:"EnableInMainMenu,omitempty"`
	EnableInUserMenu *bool `json:"EnableInUserMenu,omitempty"`
	FeatureId *string `json:"FeatureId,omitempty"`
	MenuSection *string `json:"MenuSection,omitempty"`
	MenuIcon *string `json:"MenuIcon,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	ConfigurationPageType *ModelPluginsConfigurationPageType `json:"ConfigurationPageType,omitempty"`
	PluginId *string `json:"PluginId,omitempty"`
	Href *string `json:"Href,omitempty"`
	NavMenuId *string `json:"NavMenuId,omitempty"`
	Plugin *ModelCommonPluginsIPlugin `json:"Plugin,omitempty"`
	Translations []string `json:"Translations,omitempty"`
}

// NewModelApiConfigurationPageInfo instantiates a new ModelApiConfigurationPageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelApiConfigurationPageInfo() *ModelApiConfigurationPageInfo {
	this := ModelApiConfigurationPageInfo{}
	return &this
}

// NewModelApiConfigurationPageInfoWithDefaults instantiates a new ModelApiConfigurationPageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelApiConfigurationPageInfoWithDefaults() *ModelApiConfigurationPageInfo {
	this := ModelApiConfigurationPageInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelApiConfigurationPageInfo) SetName(v string) {
	o.Name = &v
}

// GetEnableInMainMenu returns the EnableInMainMenu field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetEnableInMainMenu() bool {
	if o == nil || IsNil(o.EnableInMainMenu) {
		var ret bool
		return ret
	}
	return *o.EnableInMainMenu
}

// GetEnableInMainMenuOk returns a tuple with the EnableInMainMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetEnableInMainMenuOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableInMainMenu) {
		return nil, false
	}
	return o.EnableInMainMenu, true
}

// HasEnableInMainMenu returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasEnableInMainMenu() bool {
	if o != nil && !IsNil(o.EnableInMainMenu) {
		return true
	}

	return false
}

// SetEnableInMainMenu gets a reference to the given bool and assigns it to the EnableInMainMenu field.
func (o *ModelApiConfigurationPageInfo) SetEnableInMainMenu(v bool) {
	o.EnableInMainMenu = &v
}

// GetEnableInUserMenu returns the EnableInUserMenu field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetEnableInUserMenu() bool {
	if o == nil || IsNil(o.EnableInUserMenu) {
		var ret bool
		return ret
	}
	return *o.EnableInUserMenu
}

// GetEnableInUserMenuOk returns a tuple with the EnableInUserMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetEnableInUserMenuOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableInUserMenu) {
		return nil, false
	}
	return o.EnableInUserMenu, true
}

// HasEnableInUserMenu returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasEnableInUserMenu() bool {
	if o != nil && !IsNil(o.EnableInUserMenu) {
		return true
	}

	return false
}

// SetEnableInUserMenu gets a reference to the given bool and assigns it to the EnableInUserMenu field.
func (o *ModelApiConfigurationPageInfo) SetEnableInUserMenu(v bool) {
	o.EnableInUserMenu = &v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetFeatureId() string {
	if o == nil || IsNil(o.FeatureId) {
		var ret string
		return ret
	}
	return *o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetFeatureIdOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureId) {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasFeatureId() bool {
	if o != nil && !IsNil(o.FeatureId) {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *ModelApiConfigurationPageInfo) SetFeatureId(v string) {
	o.FeatureId = &v
}

// GetMenuSection returns the MenuSection field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetMenuSection() string {
	if o == nil || IsNil(o.MenuSection) {
		var ret string
		return ret
	}
	return *o.MenuSection
}

// GetMenuSectionOk returns a tuple with the MenuSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetMenuSectionOk() (*string, bool) {
	if o == nil || IsNil(o.MenuSection) {
		return nil, false
	}
	return o.MenuSection, true
}

// HasMenuSection returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasMenuSection() bool {
	if o != nil && !IsNil(o.MenuSection) {
		return true
	}

	return false
}

// SetMenuSection gets a reference to the given string and assigns it to the MenuSection field.
func (o *ModelApiConfigurationPageInfo) SetMenuSection(v string) {
	o.MenuSection = &v
}

// GetMenuIcon returns the MenuIcon field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetMenuIcon() string {
	if o == nil || IsNil(o.MenuIcon) {
		var ret string
		return ret
	}
	return *o.MenuIcon
}

// GetMenuIconOk returns a tuple with the MenuIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetMenuIconOk() (*string, bool) {
	if o == nil || IsNil(o.MenuIcon) {
		return nil, false
	}
	return o.MenuIcon, true
}

// HasMenuIcon returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasMenuIcon() bool {
	if o != nil && !IsNil(o.MenuIcon) {
		return true
	}

	return false
}

// SetMenuIcon gets a reference to the given string and assigns it to the MenuIcon field.
func (o *ModelApiConfigurationPageInfo) SetMenuIcon(v string) {
	o.MenuIcon = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelApiConfigurationPageInfo) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetConfigurationPageType returns the ConfigurationPageType field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetConfigurationPageType() ModelPluginsConfigurationPageType {
	if o == nil || IsNil(o.ConfigurationPageType) {
		var ret ModelPluginsConfigurationPageType
		return ret
	}
	return *o.ConfigurationPageType
}

// GetConfigurationPageTypeOk returns a tuple with the ConfigurationPageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetConfigurationPageTypeOk() (*ModelPluginsConfigurationPageType, bool) {
	if o == nil || IsNil(o.ConfigurationPageType) {
		return nil, false
	}
	return o.ConfigurationPageType, true
}

// HasConfigurationPageType returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasConfigurationPageType() bool {
	if o != nil && !IsNil(o.ConfigurationPageType) {
		return true
	}

	return false
}

// SetConfigurationPageType gets a reference to the given ModelPluginsConfigurationPageType and assigns it to the ConfigurationPageType field.
func (o *ModelApiConfigurationPageInfo) SetConfigurationPageType(v ModelPluginsConfigurationPageType) {
	o.ConfigurationPageType = &v
}

// GetPluginId returns the PluginId field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetPluginId() string {
	if o == nil || IsNil(o.PluginId) {
		var ret string
		return ret
	}
	return *o.PluginId
}

// GetPluginIdOk returns a tuple with the PluginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetPluginIdOk() (*string, bool) {
	if o == nil || IsNil(o.PluginId) {
		return nil, false
	}
	return o.PluginId, true
}

// HasPluginId returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasPluginId() bool {
	if o != nil && !IsNil(o.PluginId) {
		return true
	}

	return false
}

// SetPluginId gets a reference to the given string and assigns it to the PluginId field.
func (o *ModelApiConfigurationPageInfo) SetPluginId(v string) {
	o.PluginId = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ModelApiConfigurationPageInfo) SetHref(v string) {
	o.Href = &v
}

// GetNavMenuId returns the NavMenuId field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetNavMenuId() string {
	if o == nil || IsNil(o.NavMenuId) {
		var ret string
		return ret
	}
	return *o.NavMenuId
}

// GetNavMenuIdOk returns a tuple with the NavMenuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetNavMenuIdOk() (*string, bool) {
	if o == nil || IsNil(o.NavMenuId) {
		return nil, false
	}
	return o.NavMenuId, true
}

// HasNavMenuId returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasNavMenuId() bool {
	if o != nil && !IsNil(o.NavMenuId) {
		return true
	}

	return false
}

// SetNavMenuId gets a reference to the given string and assigns it to the NavMenuId field.
func (o *ModelApiConfigurationPageInfo) SetNavMenuId(v string) {
	o.NavMenuId = &v
}

// GetPlugin returns the Plugin field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetPlugin() ModelCommonPluginsIPlugin {
	if o == nil || IsNil(o.Plugin) {
		var ret ModelCommonPluginsIPlugin
		return ret
	}
	return *o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetPluginOk() (*ModelCommonPluginsIPlugin, bool) {
	if o == nil || IsNil(o.Plugin) {
		return nil, false
	}
	return o.Plugin, true
}

// HasPlugin returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasPlugin() bool {
	if o != nil && !IsNil(o.Plugin) {
		return true
	}

	return false
}

// SetPlugin gets a reference to the given ModelCommonPluginsIPlugin and assigns it to the Plugin field.
func (o *ModelApiConfigurationPageInfo) SetPlugin(v ModelCommonPluginsIPlugin) {
	o.Plugin = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ModelApiConfigurationPageInfo) GetTranslations() []string {
	if o == nil || IsNil(o.Translations) {
		var ret []string
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelApiConfigurationPageInfo) GetTranslationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ModelApiConfigurationPageInfo) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []string and assigns it to the Translations field.
func (o *ModelApiConfigurationPageInfo) SetTranslations(v []string) {
	o.Translations = v
}

func (o ModelApiConfigurationPageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelApiConfigurationPageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.EnableInMainMenu) {
		toSerialize["EnableInMainMenu"] = o.EnableInMainMenu
	}
	if !IsNil(o.EnableInUserMenu) {
		toSerialize["EnableInUserMenu"] = o.EnableInUserMenu
	}
	if !IsNil(o.FeatureId) {
		toSerialize["FeatureId"] = o.FeatureId
	}
	if !IsNil(o.MenuSection) {
		toSerialize["MenuSection"] = o.MenuSection
	}
	if !IsNil(o.MenuIcon) {
		toSerialize["MenuIcon"] = o.MenuIcon
	}
	if !IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !IsNil(o.ConfigurationPageType) {
		toSerialize["ConfigurationPageType"] = o.ConfigurationPageType
	}
	if !IsNil(o.PluginId) {
		toSerialize["PluginId"] = o.PluginId
	}
	if !IsNil(o.Href) {
		toSerialize["Href"] = o.Href
	}
	if !IsNil(o.NavMenuId) {
		toSerialize["NavMenuId"] = o.NavMenuId
	}
	if !IsNil(o.Plugin) {
		toSerialize["Plugin"] = o.Plugin
	}
	if !IsNil(o.Translations) {
		toSerialize["Translations"] = o.Translations
	}
	return toSerialize, nil
}

type NullableModelApiConfigurationPageInfo struct {
	value *ModelApiConfigurationPageInfo
	isSet bool
}

func (v NullableModelApiConfigurationPageInfo) Get() *ModelApiConfigurationPageInfo {
	return v.value
}

func (v *NullableModelApiConfigurationPageInfo) Set(val *ModelApiConfigurationPageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelApiConfigurationPageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelApiConfigurationPageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelApiConfigurationPageInfo(val *ModelApiConfigurationPageInfo) *NullableModelApiConfigurationPageInfo {
	return &NullableModelApiConfigurationPageInfo{value: val, isSet: true}
}

func (v NullableModelApiConfigurationPageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelApiConfigurationPageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


