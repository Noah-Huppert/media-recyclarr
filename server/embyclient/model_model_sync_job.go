/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelSyncJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSyncJob{}

// ModelSyncJob struct for ModelSyncJob
type ModelSyncJob struct {
	Id *int64 `json:"Id,omitempty"`
	TargetId *string `json:"TargetId,omitempty"`
	InternalTargetId *int64 `json:"InternalTargetId,omitempty"`
	TargetName *string `json:"TargetName,omitempty"`
	Quality *string `json:"Quality,omitempty"`
	Bitrate NullableInt32 `json:"Bitrate,omitempty"`
	Container *string `json:"Container,omitempty"`
	VideoCodec *string `json:"VideoCodec,omitempty"`
	AudioCodec *string `json:"AudioCodec,omitempty"`
	Profile *string `json:"Profile,omitempty"`
	Category *ModelSyncCategory `json:"Category,omitempty"`
	ParentId *int64 `json:"ParentId,omitempty"`
	Progress *float64 `json:"Progress,omitempty"`
	Name *string `json:"Name,omitempty"`
	Status *ModelSyncJobStatus `json:"Status,omitempty"`
	UserId *int64 `json:"UserId,omitempty"`
	UnwatchedOnly *bool `json:"UnwatchedOnly,omitempty"`
	SyncNewContent *bool `json:"SyncNewContent,omitempty"`
	ItemLimit NullableInt32 `json:"ItemLimit,omitempty"`
	RequestedItemIds []int64 `json:"RequestedItemIds,omitempty"`
	ItemId *int64 `json:"ItemId,omitempty"`
	DateCreated *time.Time `json:"DateCreated,omitempty"`
	DateLastModified *time.Time `json:"DateLastModified,omitempty"`
	ItemCount *int32 `json:"ItemCount,omitempty"`
	ParentName *string `json:"ParentName,omitempty"`
	PrimaryImageItemId *string `json:"PrimaryImageItemId,omitempty"`
	PrimaryImageTag *string `json:"PrimaryImageTag,omitempty"`
}

// NewModelSyncJob instantiates a new ModelSyncJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSyncJob() *ModelSyncJob {
	this := ModelSyncJob{}
	return &this
}

// NewModelSyncJobWithDefaults instantiates a new ModelSyncJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSyncJobWithDefaults() *ModelSyncJob {
	this := ModelSyncJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelSyncJob) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelSyncJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ModelSyncJob) SetId(v int64) {
	o.Id = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *ModelSyncJob) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *ModelSyncJob) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *ModelSyncJob) SetTargetId(v string) {
	o.TargetId = &v
}

// GetInternalTargetId returns the InternalTargetId field value if set, zero value otherwise.
func (o *ModelSyncJob) GetInternalTargetId() int64 {
	if o == nil || IsNil(o.InternalTargetId) {
		var ret int64
		return ret
	}
	return *o.InternalTargetId
}

// GetInternalTargetIdOk returns a tuple with the InternalTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetInternalTargetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InternalTargetId) {
		return nil, false
	}
	return o.InternalTargetId, true
}

// HasInternalTargetId returns a boolean if a field has been set.
func (o *ModelSyncJob) HasInternalTargetId() bool {
	if o != nil && !IsNil(o.InternalTargetId) {
		return true
	}

	return false
}

// SetInternalTargetId gets a reference to the given int64 and assigns it to the InternalTargetId field.
func (o *ModelSyncJob) SetInternalTargetId(v int64) {
	o.InternalTargetId = &v
}

// GetTargetName returns the TargetName field value if set, zero value otherwise.
func (o *ModelSyncJob) GetTargetName() string {
	if o == nil || IsNil(o.TargetName) {
		var ret string
		return ret
	}
	return *o.TargetName
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetTargetNameOk() (*string, bool) {
	if o == nil || IsNil(o.TargetName) {
		return nil, false
	}
	return o.TargetName, true
}

// HasTargetName returns a boolean if a field has been set.
func (o *ModelSyncJob) HasTargetName() bool {
	if o != nil && !IsNil(o.TargetName) {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given string and assigns it to the TargetName field.
func (o *ModelSyncJob) SetTargetName(v string) {
	o.TargetName = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *ModelSyncJob) GetQuality() string {
	if o == nil || IsNil(o.Quality) {
		var ret string
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetQualityOk() (*string, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *ModelSyncJob) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given string and assigns it to the Quality field.
func (o *ModelSyncJob) SetQuality(v string) {
	o.Quality = &v
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelSyncJob) GetBitrate() int32 {
	if o == nil || IsNil(o.Bitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.Bitrate.Get()
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelSyncJob) GetBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bitrate.Get(), o.Bitrate.IsSet()
}

// HasBitrate returns a boolean if a field has been set.
func (o *ModelSyncJob) HasBitrate() bool {
	if o != nil && o.Bitrate.IsSet() {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given NullableInt32 and assigns it to the Bitrate field.
func (o *ModelSyncJob) SetBitrate(v int32) {
	o.Bitrate.Set(&v)
}
// SetBitrateNil sets the value for Bitrate to be an explicit nil
func (o *ModelSyncJob) SetBitrateNil() {
	o.Bitrate.Set(nil)
}

// UnsetBitrate ensures that no value is present for Bitrate, not even an explicit nil
func (o *ModelSyncJob) UnsetBitrate() {
	o.Bitrate.Unset()
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ModelSyncJob) GetContainer() string {
	if o == nil || IsNil(o.Container) {
		var ret string
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetContainerOk() (*string, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ModelSyncJob) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given string and assigns it to the Container field.
func (o *ModelSyncJob) SetContainer(v string) {
	o.Container = &v
}

// GetVideoCodec returns the VideoCodec field value if set, zero value otherwise.
func (o *ModelSyncJob) GetVideoCodec() string {
	if o == nil || IsNil(o.VideoCodec) {
		var ret string
		return ret
	}
	return *o.VideoCodec
}

// GetVideoCodecOk returns a tuple with the VideoCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetVideoCodecOk() (*string, bool) {
	if o == nil || IsNil(o.VideoCodec) {
		return nil, false
	}
	return o.VideoCodec, true
}

// HasVideoCodec returns a boolean if a field has been set.
func (o *ModelSyncJob) HasVideoCodec() bool {
	if o != nil && !IsNil(o.VideoCodec) {
		return true
	}

	return false
}

// SetVideoCodec gets a reference to the given string and assigns it to the VideoCodec field.
func (o *ModelSyncJob) SetVideoCodec(v string) {
	o.VideoCodec = &v
}

// GetAudioCodec returns the AudioCodec field value if set, zero value otherwise.
func (o *ModelSyncJob) GetAudioCodec() string {
	if o == nil || IsNil(o.AudioCodec) {
		var ret string
		return ret
	}
	return *o.AudioCodec
}

// GetAudioCodecOk returns a tuple with the AudioCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetAudioCodecOk() (*string, bool) {
	if o == nil || IsNil(o.AudioCodec) {
		return nil, false
	}
	return o.AudioCodec, true
}

// HasAudioCodec returns a boolean if a field has been set.
func (o *ModelSyncJob) HasAudioCodec() bool {
	if o != nil && !IsNil(o.AudioCodec) {
		return true
	}

	return false
}

// SetAudioCodec gets a reference to the given string and assigns it to the AudioCodec field.
func (o *ModelSyncJob) SetAudioCodec(v string) {
	o.AudioCodec = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ModelSyncJob) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ModelSyncJob) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ModelSyncJob) SetProfile(v string) {
	o.Profile = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ModelSyncJob) GetCategory() ModelSyncCategory {
	if o == nil || IsNil(o.Category) {
		var ret ModelSyncCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetCategoryOk() (*ModelSyncCategory, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ModelSyncJob) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given ModelSyncCategory and assigns it to the Category field.
func (o *ModelSyncJob) SetCategory(v ModelSyncCategory) {
	o.Category = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *ModelSyncJob) GetParentId() int64 {
	if o == nil || IsNil(o.ParentId) {
		var ret int64
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetParentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *ModelSyncJob) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int64 and assigns it to the ParentId field.
func (o *ModelSyncJob) SetParentId(v int64) {
	o.ParentId = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *ModelSyncJob) GetProgress() float64 {
	if o == nil || IsNil(o.Progress) {
		var ret float64
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetProgressOk() (*float64, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *ModelSyncJob) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float64 and assigns it to the Progress field.
func (o *ModelSyncJob) SetProgress(v float64) {
	o.Progress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelSyncJob) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelSyncJob) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelSyncJob) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelSyncJob) GetStatus() ModelSyncJobStatus {
	if o == nil || IsNil(o.Status) {
		var ret ModelSyncJobStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetStatusOk() (*ModelSyncJobStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelSyncJob) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ModelSyncJobStatus and assigns it to the Status field.
func (o *ModelSyncJob) SetStatus(v ModelSyncJobStatus) {
	o.Status = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelSyncJob) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelSyncJob) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *ModelSyncJob) SetUserId(v int64) {
	o.UserId = &v
}

// GetUnwatchedOnly returns the UnwatchedOnly field value if set, zero value otherwise.
func (o *ModelSyncJob) GetUnwatchedOnly() bool {
	if o == nil || IsNil(o.UnwatchedOnly) {
		var ret bool
		return ret
	}
	return *o.UnwatchedOnly
}

// GetUnwatchedOnlyOk returns a tuple with the UnwatchedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetUnwatchedOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.UnwatchedOnly) {
		return nil, false
	}
	return o.UnwatchedOnly, true
}

// HasUnwatchedOnly returns a boolean if a field has been set.
func (o *ModelSyncJob) HasUnwatchedOnly() bool {
	if o != nil && !IsNil(o.UnwatchedOnly) {
		return true
	}

	return false
}

// SetUnwatchedOnly gets a reference to the given bool and assigns it to the UnwatchedOnly field.
func (o *ModelSyncJob) SetUnwatchedOnly(v bool) {
	o.UnwatchedOnly = &v
}

// GetSyncNewContent returns the SyncNewContent field value if set, zero value otherwise.
func (o *ModelSyncJob) GetSyncNewContent() bool {
	if o == nil || IsNil(o.SyncNewContent) {
		var ret bool
		return ret
	}
	return *o.SyncNewContent
}

// GetSyncNewContentOk returns a tuple with the SyncNewContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetSyncNewContentOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncNewContent) {
		return nil, false
	}
	return o.SyncNewContent, true
}

// HasSyncNewContent returns a boolean if a field has been set.
func (o *ModelSyncJob) HasSyncNewContent() bool {
	if o != nil && !IsNil(o.SyncNewContent) {
		return true
	}

	return false
}

// SetSyncNewContent gets a reference to the given bool and assigns it to the SyncNewContent field.
func (o *ModelSyncJob) SetSyncNewContent(v bool) {
	o.SyncNewContent = &v
}

// GetItemLimit returns the ItemLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelSyncJob) GetItemLimit() int32 {
	if o == nil || IsNil(o.ItemLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.ItemLimit.Get()
}

// GetItemLimitOk returns a tuple with the ItemLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelSyncJob) GetItemLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemLimit.Get(), o.ItemLimit.IsSet()
}

// HasItemLimit returns a boolean if a field has been set.
func (o *ModelSyncJob) HasItemLimit() bool {
	if o != nil && o.ItemLimit.IsSet() {
		return true
	}

	return false
}

// SetItemLimit gets a reference to the given NullableInt32 and assigns it to the ItemLimit field.
func (o *ModelSyncJob) SetItemLimit(v int32) {
	o.ItemLimit.Set(&v)
}
// SetItemLimitNil sets the value for ItemLimit to be an explicit nil
func (o *ModelSyncJob) SetItemLimitNil() {
	o.ItemLimit.Set(nil)
}

// UnsetItemLimit ensures that no value is present for ItemLimit, not even an explicit nil
func (o *ModelSyncJob) UnsetItemLimit() {
	o.ItemLimit.Unset()
}

// GetRequestedItemIds returns the RequestedItemIds field value if set, zero value otherwise.
func (o *ModelSyncJob) GetRequestedItemIds() []int64 {
	if o == nil || IsNil(o.RequestedItemIds) {
		var ret []int64
		return ret
	}
	return o.RequestedItemIds
}

// GetRequestedItemIdsOk returns a tuple with the RequestedItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetRequestedItemIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.RequestedItemIds) {
		return nil, false
	}
	return o.RequestedItemIds, true
}

// HasRequestedItemIds returns a boolean if a field has been set.
func (o *ModelSyncJob) HasRequestedItemIds() bool {
	if o != nil && !IsNil(o.RequestedItemIds) {
		return true
	}

	return false
}

// SetRequestedItemIds gets a reference to the given []int64 and assigns it to the RequestedItemIds field.
func (o *ModelSyncJob) SetRequestedItemIds(v []int64) {
	o.RequestedItemIds = v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ModelSyncJob) GetItemId() int64 {
	if o == nil || IsNil(o.ItemId) {
		var ret int64
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetItemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ModelSyncJob) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int64 and assigns it to the ItemId field.
func (o *ModelSyncJob) SetItemId(v int64) {
	o.ItemId = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ModelSyncJob) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ModelSyncJob) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ModelSyncJob) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetDateLastModified returns the DateLastModified field value if set, zero value otherwise.
func (o *ModelSyncJob) GetDateLastModified() time.Time {
	if o == nil || IsNil(o.DateLastModified) {
		var ret time.Time
		return ret
	}
	return *o.DateLastModified
}

// GetDateLastModifiedOk returns a tuple with the DateLastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetDateLastModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateLastModified) {
		return nil, false
	}
	return o.DateLastModified, true
}

// HasDateLastModified returns a boolean if a field has been set.
func (o *ModelSyncJob) HasDateLastModified() bool {
	if o != nil && !IsNil(o.DateLastModified) {
		return true
	}

	return false
}

// SetDateLastModified gets a reference to the given time.Time and assigns it to the DateLastModified field.
func (o *ModelSyncJob) SetDateLastModified(v time.Time) {
	o.DateLastModified = &v
}

// GetItemCount returns the ItemCount field value if set, zero value otherwise.
func (o *ModelSyncJob) GetItemCount() int32 {
	if o == nil || IsNil(o.ItemCount) {
		var ret int32
		return ret
	}
	return *o.ItemCount
}

// GetItemCountOk returns a tuple with the ItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetItemCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemCount) {
		return nil, false
	}
	return o.ItemCount, true
}

// HasItemCount returns a boolean if a field has been set.
func (o *ModelSyncJob) HasItemCount() bool {
	if o != nil && !IsNil(o.ItemCount) {
		return true
	}

	return false
}

// SetItemCount gets a reference to the given int32 and assigns it to the ItemCount field.
func (o *ModelSyncJob) SetItemCount(v int32) {
	o.ItemCount = &v
}

// GetParentName returns the ParentName field value if set, zero value otherwise.
func (o *ModelSyncJob) GetParentName() string {
	if o == nil || IsNil(o.ParentName) {
		var ret string
		return ret
	}
	return *o.ParentName
}

// GetParentNameOk returns a tuple with the ParentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetParentNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentName) {
		return nil, false
	}
	return o.ParentName, true
}

// HasParentName returns a boolean if a field has been set.
func (o *ModelSyncJob) HasParentName() bool {
	if o != nil && !IsNil(o.ParentName) {
		return true
	}

	return false
}

// SetParentName gets a reference to the given string and assigns it to the ParentName field.
func (o *ModelSyncJob) SetParentName(v string) {
	o.ParentName = &v
}

// GetPrimaryImageItemId returns the PrimaryImageItemId field value if set, zero value otherwise.
func (o *ModelSyncJob) GetPrimaryImageItemId() string {
	if o == nil || IsNil(o.PrimaryImageItemId) {
		var ret string
		return ret
	}
	return *o.PrimaryImageItemId
}

// GetPrimaryImageItemIdOk returns a tuple with the PrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetPrimaryImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryImageItemId) {
		return nil, false
	}
	return o.PrimaryImageItemId, true
}

// HasPrimaryImageItemId returns a boolean if a field has been set.
func (o *ModelSyncJob) HasPrimaryImageItemId() bool {
	if o != nil && !IsNil(o.PrimaryImageItemId) {
		return true
	}

	return false
}

// SetPrimaryImageItemId gets a reference to the given string and assigns it to the PrimaryImageItemId field.
func (o *ModelSyncJob) SetPrimaryImageItemId(v string) {
	o.PrimaryImageItemId = &v
}

// GetPrimaryImageTag returns the PrimaryImageTag field value if set, zero value otherwise.
func (o *ModelSyncJob) GetPrimaryImageTag() string {
	if o == nil || IsNil(o.PrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.PrimaryImageTag
}

// GetPrimaryImageTagOk returns a tuple with the PrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJob) GetPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryImageTag) {
		return nil, false
	}
	return o.PrimaryImageTag, true
}

// HasPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelSyncJob) HasPrimaryImageTag() bool {
	if o != nil && !IsNil(o.PrimaryImageTag) {
		return true
	}

	return false
}

// SetPrimaryImageTag gets a reference to the given string and assigns it to the PrimaryImageTag field.
func (o *ModelSyncJob) SetPrimaryImageTag(v string) {
	o.PrimaryImageTag = &v
}

func (o ModelSyncJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSyncJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.TargetId) {
		toSerialize["TargetId"] = o.TargetId
	}
	if !IsNil(o.InternalTargetId) {
		toSerialize["InternalTargetId"] = o.InternalTargetId
	}
	if !IsNil(o.TargetName) {
		toSerialize["TargetName"] = o.TargetName
	}
	if !IsNil(o.Quality) {
		toSerialize["Quality"] = o.Quality
	}
	if o.Bitrate.IsSet() {
		toSerialize["Bitrate"] = o.Bitrate.Get()
	}
	if !IsNil(o.Container) {
		toSerialize["Container"] = o.Container
	}
	if !IsNil(o.VideoCodec) {
		toSerialize["VideoCodec"] = o.VideoCodec
	}
	if !IsNil(o.AudioCodec) {
		toSerialize["AudioCodec"] = o.AudioCodec
	}
	if !IsNil(o.Profile) {
		toSerialize["Profile"] = o.Profile
	}
	if !IsNil(o.Category) {
		toSerialize["Category"] = o.Category
	}
	if !IsNil(o.ParentId) {
		toSerialize["ParentId"] = o.ParentId
	}
	if !IsNil(o.Progress) {
		toSerialize["Progress"] = o.Progress
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.UserId) {
		toSerialize["UserId"] = o.UserId
	}
	if !IsNil(o.UnwatchedOnly) {
		toSerialize["UnwatchedOnly"] = o.UnwatchedOnly
	}
	if !IsNil(o.SyncNewContent) {
		toSerialize["SyncNewContent"] = o.SyncNewContent
	}
	if o.ItemLimit.IsSet() {
		toSerialize["ItemLimit"] = o.ItemLimit.Get()
	}
	if !IsNil(o.RequestedItemIds) {
		toSerialize["RequestedItemIds"] = o.RequestedItemIds
	}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.DateCreated) {
		toSerialize["DateCreated"] = o.DateCreated
	}
	if !IsNil(o.DateLastModified) {
		toSerialize["DateLastModified"] = o.DateLastModified
	}
	if !IsNil(o.ItemCount) {
		toSerialize["ItemCount"] = o.ItemCount
	}
	if !IsNil(o.ParentName) {
		toSerialize["ParentName"] = o.ParentName
	}
	if !IsNil(o.PrimaryImageItemId) {
		toSerialize["PrimaryImageItemId"] = o.PrimaryImageItemId
	}
	if !IsNil(o.PrimaryImageTag) {
		toSerialize["PrimaryImageTag"] = o.PrimaryImageTag
	}
	return toSerialize, nil
}

type NullableModelSyncJob struct {
	value *ModelSyncJob
	isSet bool
}

func (v NullableModelSyncJob) Get() *ModelSyncJob {
	return v.value
}

func (v *NullableModelSyncJob) Set(val *ModelSyncJob) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSyncJob) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSyncJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSyncJob(val *ModelSyncJob) *NullableModelSyncJob {
	return &NullableModelSyncJob{value: val, isSet: true}
}

func (v NullableModelSyncJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSyncJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


