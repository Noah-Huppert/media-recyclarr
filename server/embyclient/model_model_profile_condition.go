/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelProfileCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelProfileCondition{}

// ModelProfileCondition struct for ModelProfileCondition
type ModelProfileCondition struct {
	Condition *ModelProfileConditionType `json:"Condition,omitempty"`
	Property *ModelProfileConditionValue `json:"Property,omitempty"`
	Value *string `json:"Value,omitempty"`
	IsRequired *bool `json:"IsRequired,omitempty"`
}

// NewModelProfileCondition instantiates a new ModelProfileCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelProfileCondition() *ModelProfileCondition {
	this := ModelProfileCondition{}
	return &this
}

// NewModelProfileConditionWithDefaults instantiates a new ModelProfileCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelProfileConditionWithDefaults() *ModelProfileCondition {
	this := ModelProfileCondition{}
	return &this
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *ModelProfileCondition) GetCondition() ModelProfileConditionType {
	if o == nil || IsNil(o.Condition) {
		var ret ModelProfileConditionType
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileCondition) GetConditionOk() (*ModelProfileConditionType, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *ModelProfileCondition) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given ModelProfileConditionType and assigns it to the Condition field.
func (o *ModelProfileCondition) SetCondition(v ModelProfileConditionType) {
	o.Condition = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *ModelProfileCondition) GetProperty() ModelProfileConditionValue {
	if o == nil || IsNil(o.Property) {
		var ret ModelProfileConditionValue
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileCondition) GetPropertyOk() (*ModelProfileConditionValue, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *ModelProfileCondition) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given ModelProfileConditionValue and assigns it to the Property field.
func (o *ModelProfileCondition) SetProperty(v ModelProfileConditionValue) {
	o.Property = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModelProfileCondition) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileCondition) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModelProfileCondition) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ModelProfileCondition) SetValue(v string) {
	o.Value = &v
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *ModelProfileCondition) GetIsRequired() bool {
	if o == nil || IsNil(o.IsRequired) {
		var ret bool
		return ret
	}
	return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileCondition) GetIsRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRequired) {
		return nil, false
	}
	return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *ModelProfileCondition) HasIsRequired() bool {
	if o != nil && !IsNil(o.IsRequired) {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *ModelProfileCondition) SetIsRequired(v bool) {
	o.IsRequired = &v
}

func (o ModelProfileCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelProfileCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Condition) {
		toSerialize["Condition"] = o.Condition
	}
	if !IsNil(o.Property) {
		toSerialize["Property"] = o.Property
	}
	if !IsNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	if !IsNil(o.IsRequired) {
		toSerialize["IsRequired"] = o.IsRequired
	}
	return toSerialize, nil
}

type NullableModelProfileCondition struct {
	value *ModelProfileCondition
	isSet bool
}

func (v NullableModelProfileCondition) Get() *ModelProfileCondition {
	return v.value
}

func (v *NullableModelProfileCondition) Set(val *ModelProfileCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableModelProfileCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableModelProfileCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelProfileCondition(val *ModelProfileCondition) *NullableModelProfileCondition {
	return &NullableModelProfileCondition{value: val, isSet: true}
}

func (v NullableModelProfileCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelProfileCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


