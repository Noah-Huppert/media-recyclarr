/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelCreateUserByName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelCreateUserByName{}

// ModelCreateUserByName struct for ModelCreateUserByName
type ModelCreateUserByName struct {
	Name *string `json:"Name,omitempty"`
	CopyFromUserId *string `json:"CopyFromUserId,omitempty"`
	UserCopyOptions []ModelLibraryUserCopyOptions `json:"UserCopyOptions,omitempty"`
}

// NewModelCreateUserByName instantiates a new ModelCreateUserByName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelCreateUserByName() *ModelCreateUserByName {
	this := ModelCreateUserByName{}
	return &this
}

// NewModelCreateUserByNameWithDefaults instantiates a new ModelCreateUserByName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelCreateUserByNameWithDefaults() *ModelCreateUserByName {
	this := ModelCreateUserByName{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelCreateUserByName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelCreateUserByName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelCreateUserByName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelCreateUserByName) SetName(v string) {
	o.Name = &v
}

// GetCopyFromUserId returns the CopyFromUserId field value if set, zero value otherwise.
func (o *ModelCreateUserByName) GetCopyFromUserId() string {
	if o == nil || IsNil(o.CopyFromUserId) {
		var ret string
		return ret
	}
	return *o.CopyFromUserId
}

// GetCopyFromUserIdOk returns a tuple with the CopyFromUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelCreateUserByName) GetCopyFromUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.CopyFromUserId) {
		return nil, false
	}
	return o.CopyFromUserId, true
}

// HasCopyFromUserId returns a boolean if a field has been set.
func (o *ModelCreateUserByName) HasCopyFromUserId() bool {
	if o != nil && !IsNil(o.CopyFromUserId) {
		return true
	}

	return false
}

// SetCopyFromUserId gets a reference to the given string and assigns it to the CopyFromUserId field.
func (o *ModelCreateUserByName) SetCopyFromUserId(v string) {
	o.CopyFromUserId = &v
}

// GetUserCopyOptions returns the UserCopyOptions field value if set, zero value otherwise.
func (o *ModelCreateUserByName) GetUserCopyOptions() []ModelLibraryUserCopyOptions {
	if o == nil || IsNil(o.UserCopyOptions) {
		var ret []ModelLibraryUserCopyOptions
		return ret
	}
	return o.UserCopyOptions
}

// GetUserCopyOptionsOk returns a tuple with the UserCopyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelCreateUserByName) GetUserCopyOptionsOk() ([]ModelLibraryUserCopyOptions, bool) {
	if o == nil || IsNil(o.UserCopyOptions) {
		return nil, false
	}
	return o.UserCopyOptions, true
}

// HasUserCopyOptions returns a boolean if a field has been set.
func (o *ModelCreateUserByName) HasUserCopyOptions() bool {
	if o != nil && !IsNil(o.UserCopyOptions) {
		return true
	}

	return false
}

// SetUserCopyOptions gets a reference to the given []ModelLibraryUserCopyOptions and assigns it to the UserCopyOptions field.
func (o *ModelCreateUserByName) SetUserCopyOptions(v []ModelLibraryUserCopyOptions) {
	o.UserCopyOptions = v
}

func (o ModelCreateUserByName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelCreateUserByName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.CopyFromUserId) {
		toSerialize["CopyFromUserId"] = o.CopyFromUserId
	}
	if !IsNil(o.UserCopyOptions) {
		toSerialize["UserCopyOptions"] = o.UserCopyOptions
	}
	return toSerialize, nil
}

type NullableModelCreateUserByName struct {
	value *ModelCreateUserByName
	isSet bool
}

func (v NullableModelCreateUserByName) Get() *ModelCreateUserByName {
	return v.value
}

func (v *NullableModelCreateUserByName) Set(val *ModelCreateUserByName) {
	v.value = val
	v.isSet = true
}

func (v NullableModelCreateUserByName) IsSet() bool {
	return v.isSet
}

func (v *NullableModelCreateUserByName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelCreateUserByName(val *ModelCreateUserByName) *NullableModelCreateUserByName {
	return &NullableModelCreateUserByName{value: val, isSet: true}
}

func (v NullableModelCreateUserByName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelCreateUserByName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


