/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelConfigurationToneMappingToneMapOptionsVisibility type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelConfigurationToneMappingToneMapOptionsVisibility{}

// ModelConfigurationToneMappingToneMapOptionsVisibility struct for ModelConfigurationToneMappingToneMapOptionsVisibility
type ModelConfigurationToneMappingToneMapOptionsVisibility struct {
	ShowAdvanced *bool `json:"ShowAdvanced,omitempty"`
	IsSoftwareToneMappingAvailable *bool `json:"IsSoftwareToneMappingAvailable,omitempty"`
	IsAnyHardwareToneMappingAvailable *bool `json:"IsAnyHardwareToneMappingAvailable,omitempty"`
	ShowNvidiaOptions *bool `json:"ShowNvidiaOptions,omitempty"`
	ShowQuickSyncOptions *bool `json:"ShowQuickSyncOptions,omitempty"`
	ShowVaapiOptions *bool `json:"ShowVaapiOptions,omitempty"`
	IsOpenClAvailable *bool `json:"IsOpenClAvailable,omitempty"`
	IsOpenClSuperTAvailable *bool `json:"IsOpenClSuperTAvailable,omitempty"`
	IsVaapiNativeAvailable *bool `json:"IsVaapiNativeAvailable,omitempty"`
	IsQuickSyncNativeAvailable *bool `json:"IsQuickSyncNativeAvailable,omitempty"`
	OperatingSystem *ModelOperatingSystem `json:"OperatingSystem,omitempty"`
}

// NewModelConfigurationToneMappingToneMapOptionsVisibility instantiates a new ModelConfigurationToneMappingToneMapOptionsVisibility object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelConfigurationToneMappingToneMapOptionsVisibility() *ModelConfigurationToneMappingToneMapOptionsVisibility {
	this := ModelConfigurationToneMappingToneMapOptionsVisibility{}
	return &this
}

// NewModelConfigurationToneMappingToneMapOptionsVisibilityWithDefaults instantiates a new ModelConfigurationToneMappingToneMapOptionsVisibility object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelConfigurationToneMappingToneMapOptionsVisibilityWithDefaults() *ModelConfigurationToneMappingToneMapOptionsVisibility {
	this := ModelConfigurationToneMappingToneMapOptionsVisibility{}
	return &this
}

// GetShowAdvanced returns the ShowAdvanced field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowAdvanced() bool {
	if o == nil || IsNil(o.ShowAdvanced) {
		var ret bool
		return ret
	}
	return *o.ShowAdvanced
}

// GetShowAdvancedOk returns a tuple with the ShowAdvanced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowAdvancedOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAdvanced) {
		return nil, false
	}
	return o.ShowAdvanced, true
}

// HasShowAdvanced returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasShowAdvanced() bool {
	if o != nil && !IsNil(o.ShowAdvanced) {
		return true
	}

	return false
}

// SetShowAdvanced gets a reference to the given bool and assigns it to the ShowAdvanced field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetShowAdvanced(v bool) {
	o.ShowAdvanced = &v
}

// GetIsSoftwareToneMappingAvailable returns the IsSoftwareToneMappingAvailable field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsSoftwareToneMappingAvailable() bool {
	if o == nil || IsNil(o.IsSoftwareToneMappingAvailable) {
		var ret bool
		return ret
	}
	return *o.IsSoftwareToneMappingAvailable
}

// GetIsSoftwareToneMappingAvailableOk returns a tuple with the IsSoftwareToneMappingAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsSoftwareToneMappingAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSoftwareToneMappingAvailable) {
		return nil, false
	}
	return o.IsSoftwareToneMappingAvailable, true
}

// HasIsSoftwareToneMappingAvailable returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasIsSoftwareToneMappingAvailable() bool {
	if o != nil && !IsNil(o.IsSoftwareToneMappingAvailable) {
		return true
	}

	return false
}

// SetIsSoftwareToneMappingAvailable gets a reference to the given bool and assigns it to the IsSoftwareToneMappingAvailable field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetIsSoftwareToneMappingAvailable(v bool) {
	o.IsSoftwareToneMappingAvailable = &v
}

// GetIsAnyHardwareToneMappingAvailable returns the IsAnyHardwareToneMappingAvailable field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsAnyHardwareToneMappingAvailable() bool {
	if o == nil || IsNil(o.IsAnyHardwareToneMappingAvailable) {
		var ret bool
		return ret
	}
	return *o.IsAnyHardwareToneMappingAvailable
}

// GetIsAnyHardwareToneMappingAvailableOk returns a tuple with the IsAnyHardwareToneMappingAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsAnyHardwareToneMappingAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAnyHardwareToneMappingAvailable) {
		return nil, false
	}
	return o.IsAnyHardwareToneMappingAvailable, true
}

// HasIsAnyHardwareToneMappingAvailable returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasIsAnyHardwareToneMappingAvailable() bool {
	if o != nil && !IsNil(o.IsAnyHardwareToneMappingAvailable) {
		return true
	}

	return false
}

// SetIsAnyHardwareToneMappingAvailable gets a reference to the given bool and assigns it to the IsAnyHardwareToneMappingAvailable field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetIsAnyHardwareToneMappingAvailable(v bool) {
	o.IsAnyHardwareToneMappingAvailable = &v
}

// GetShowNvidiaOptions returns the ShowNvidiaOptions field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowNvidiaOptions() bool {
	if o == nil || IsNil(o.ShowNvidiaOptions) {
		var ret bool
		return ret
	}
	return *o.ShowNvidiaOptions
}

// GetShowNvidiaOptionsOk returns a tuple with the ShowNvidiaOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowNvidiaOptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowNvidiaOptions) {
		return nil, false
	}
	return o.ShowNvidiaOptions, true
}

// HasShowNvidiaOptions returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasShowNvidiaOptions() bool {
	if o != nil && !IsNil(o.ShowNvidiaOptions) {
		return true
	}

	return false
}

// SetShowNvidiaOptions gets a reference to the given bool and assigns it to the ShowNvidiaOptions field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetShowNvidiaOptions(v bool) {
	o.ShowNvidiaOptions = &v
}

// GetShowQuickSyncOptions returns the ShowQuickSyncOptions field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowQuickSyncOptions() bool {
	if o == nil || IsNil(o.ShowQuickSyncOptions) {
		var ret bool
		return ret
	}
	return *o.ShowQuickSyncOptions
}

// GetShowQuickSyncOptionsOk returns a tuple with the ShowQuickSyncOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowQuickSyncOptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowQuickSyncOptions) {
		return nil, false
	}
	return o.ShowQuickSyncOptions, true
}

// HasShowQuickSyncOptions returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasShowQuickSyncOptions() bool {
	if o != nil && !IsNil(o.ShowQuickSyncOptions) {
		return true
	}

	return false
}

// SetShowQuickSyncOptions gets a reference to the given bool and assigns it to the ShowQuickSyncOptions field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetShowQuickSyncOptions(v bool) {
	o.ShowQuickSyncOptions = &v
}

// GetShowVaapiOptions returns the ShowVaapiOptions field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowVaapiOptions() bool {
	if o == nil || IsNil(o.ShowVaapiOptions) {
		var ret bool
		return ret
	}
	return *o.ShowVaapiOptions
}

// GetShowVaapiOptionsOk returns a tuple with the ShowVaapiOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetShowVaapiOptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowVaapiOptions) {
		return nil, false
	}
	return o.ShowVaapiOptions, true
}

// HasShowVaapiOptions returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasShowVaapiOptions() bool {
	if o != nil && !IsNil(o.ShowVaapiOptions) {
		return true
	}

	return false
}

// SetShowVaapiOptions gets a reference to the given bool and assigns it to the ShowVaapiOptions field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetShowVaapiOptions(v bool) {
	o.ShowVaapiOptions = &v
}

// GetIsOpenClAvailable returns the IsOpenClAvailable field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsOpenClAvailable() bool {
	if o == nil || IsNil(o.IsOpenClAvailable) {
		var ret bool
		return ret
	}
	return *o.IsOpenClAvailable
}

// GetIsOpenClAvailableOk returns a tuple with the IsOpenClAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsOpenClAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOpenClAvailable) {
		return nil, false
	}
	return o.IsOpenClAvailable, true
}

// HasIsOpenClAvailable returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasIsOpenClAvailable() bool {
	if o != nil && !IsNil(o.IsOpenClAvailable) {
		return true
	}

	return false
}

// SetIsOpenClAvailable gets a reference to the given bool and assigns it to the IsOpenClAvailable field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetIsOpenClAvailable(v bool) {
	o.IsOpenClAvailable = &v
}

// GetIsOpenClSuperTAvailable returns the IsOpenClSuperTAvailable field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsOpenClSuperTAvailable() bool {
	if o == nil || IsNil(o.IsOpenClSuperTAvailable) {
		var ret bool
		return ret
	}
	return *o.IsOpenClSuperTAvailable
}

// GetIsOpenClSuperTAvailableOk returns a tuple with the IsOpenClSuperTAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsOpenClSuperTAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOpenClSuperTAvailable) {
		return nil, false
	}
	return o.IsOpenClSuperTAvailable, true
}

// HasIsOpenClSuperTAvailable returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasIsOpenClSuperTAvailable() bool {
	if o != nil && !IsNil(o.IsOpenClSuperTAvailable) {
		return true
	}

	return false
}

// SetIsOpenClSuperTAvailable gets a reference to the given bool and assigns it to the IsOpenClSuperTAvailable field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetIsOpenClSuperTAvailable(v bool) {
	o.IsOpenClSuperTAvailable = &v
}

// GetIsVaapiNativeAvailable returns the IsVaapiNativeAvailable field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsVaapiNativeAvailable() bool {
	if o == nil || IsNil(o.IsVaapiNativeAvailable) {
		var ret bool
		return ret
	}
	return *o.IsVaapiNativeAvailable
}

// GetIsVaapiNativeAvailableOk returns a tuple with the IsVaapiNativeAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsVaapiNativeAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVaapiNativeAvailable) {
		return nil, false
	}
	return o.IsVaapiNativeAvailable, true
}

// HasIsVaapiNativeAvailable returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasIsVaapiNativeAvailable() bool {
	if o != nil && !IsNil(o.IsVaapiNativeAvailable) {
		return true
	}

	return false
}

// SetIsVaapiNativeAvailable gets a reference to the given bool and assigns it to the IsVaapiNativeAvailable field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetIsVaapiNativeAvailable(v bool) {
	o.IsVaapiNativeAvailable = &v
}

// GetIsQuickSyncNativeAvailable returns the IsQuickSyncNativeAvailable field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsQuickSyncNativeAvailable() bool {
	if o == nil || IsNil(o.IsQuickSyncNativeAvailable) {
		var ret bool
		return ret
	}
	return *o.IsQuickSyncNativeAvailable
}

// GetIsQuickSyncNativeAvailableOk returns a tuple with the IsQuickSyncNativeAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetIsQuickSyncNativeAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsQuickSyncNativeAvailable) {
		return nil, false
	}
	return o.IsQuickSyncNativeAvailable, true
}

// HasIsQuickSyncNativeAvailable returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasIsQuickSyncNativeAvailable() bool {
	if o != nil && !IsNil(o.IsQuickSyncNativeAvailable) {
		return true
	}

	return false
}

// SetIsQuickSyncNativeAvailable gets a reference to the given bool and assigns it to the IsQuickSyncNativeAvailable field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetIsQuickSyncNativeAvailable(v bool) {
	o.IsQuickSyncNativeAvailable = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetOperatingSystem() ModelOperatingSystem {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret ModelOperatingSystem
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) GetOperatingSystemOk() (*ModelOperatingSystem, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given ModelOperatingSystem and assigns it to the OperatingSystem field.
func (o *ModelConfigurationToneMappingToneMapOptionsVisibility) SetOperatingSystem(v ModelOperatingSystem) {
	o.OperatingSystem = &v
}

func (o ModelConfigurationToneMappingToneMapOptionsVisibility) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelConfigurationToneMappingToneMapOptionsVisibility) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShowAdvanced) {
		toSerialize["ShowAdvanced"] = o.ShowAdvanced
	}
	if !IsNil(o.IsSoftwareToneMappingAvailable) {
		toSerialize["IsSoftwareToneMappingAvailable"] = o.IsSoftwareToneMappingAvailable
	}
	if !IsNil(o.IsAnyHardwareToneMappingAvailable) {
		toSerialize["IsAnyHardwareToneMappingAvailable"] = o.IsAnyHardwareToneMappingAvailable
	}
	if !IsNil(o.ShowNvidiaOptions) {
		toSerialize["ShowNvidiaOptions"] = o.ShowNvidiaOptions
	}
	if !IsNil(o.ShowQuickSyncOptions) {
		toSerialize["ShowQuickSyncOptions"] = o.ShowQuickSyncOptions
	}
	if !IsNil(o.ShowVaapiOptions) {
		toSerialize["ShowVaapiOptions"] = o.ShowVaapiOptions
	}
	if !IsNil(o.IsOpenClAvailable) {
		toSerialize["IsOpenClAvailable"] = o.IsOpenClAvailable
	}
	if !IsNil(o.IsOpenClSuperTAvailable) {
		toSerialize["IsOpenClSuperTAvailable"] = o.IsOpenClSuperTAvailable
	}
	if !IsNil(o.IsVaapiNativeAvailable) {
		toSerialize["IsVaapiNativeAvailable"] = o.IsVaapiNativeAvailable
	}
	if !IsNil(o.IsQuickSyncNativeAvailable) {
		toSerialize["IsQuickSyncNativeAvailable"] = o.IsQuickSyncNativeAvailable
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["OperatingSystem"] = o.OperatingSystem
	}
	return toSerialize, nil
}

type NullableModelConfigurationToneMappingToneMapOptionsVisibility struct {
	value *ModelConfigurationToneMappingToneMapOptionsVisibility
	isSet bool
}

func (v NullableModelConfigurationToneMappingToneMapOptionsVisibility) Get() *ModelConfigurationToneMappingToneMapOptionsVisibility {
	return v.value
}

func (v *NullableModelConfigurationToneMappingToneMapOptionsVisibility) Set(val *ModelConfigurationToneMappingToneMapOptionsVisibility) {
	v.value = val
	v.isSet = true
}

func (v NullableModelConfigurationToneMappingToneMapOptionsVisibility) IsSet() bool {
	return v.isSet
}

func (v *NullableModelConfigurationToneMappingToneMapOptionsVisibility) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelConfigurationToneMappingToneMapOptionsVisibility(val *ModelConfigurationToneMappingToneMapOptionsVisibility) *NullableModelConfigurationToneMappingToneMapOptionsVisibility {
	return &NullableModelConfigurationToneMappingToneMapOptionsVisibility{value: val, isSet: true}
}

func (v NullableModelConfigurationToneMappingToneMapOptionsVisibility) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelConfigurationToneMappingToneMapOptionsVisibility) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


