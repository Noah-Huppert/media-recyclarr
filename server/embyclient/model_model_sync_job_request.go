/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelSyncJobRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSyncJobRequest{}

// ModelSyncJobRequest struct for ModelSyncJobRequest
type ModelSyncJobRequest struct {
	TargetId *string `json:"TargetId,omitempty"`
	ItemIds []string `json:"ItemIds,omitempty"`
	Category *ModelSyncCategory `json:"Category,omitempty"`
	ParentId *string `json:"ParentId,omitempty"`
	Quality *string `json:"Quality,omitempty"`
	Profile *string `json:"Profile,omitempty"`
	Container *string `json:"Container,omitempty"`
	VideoCodec *string `json:"VideoCodec,omitempty"`
	AudioCodec *string `json:"AudioCodec,omitempty"`
	Name *string `json:"Name,omitempty"`
	UserId *string `json:"UserId,omitempty"`
	UnwatchedOnly *bool `json:"UnwatchedOnly,omitempty"`
	SyncNewContent *bool `json:"SyncNewContent,omitempty"`
	ItemLimit NullableInt32 `json:"ItemLimit,omitempty"`
	Bitrate NullableInt32 `json:"Bitrate,omitempty"`
	Downloaded *bool `json:"Downloaded,omitempty"`
}

// NewModelSyncJobRequest instantiates a new ModelSyncJobRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSyncJobRequest() *ModelSyncJobRequest {
	this := ModelSyncJobRequest{}
	return &this
}

// NewModelSyncJobRequestWithDefaults instantiates a new ModelSyncJobRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSyncJobRequestWithDefaults() *ModelSyncJobRequest {
	this := ModelSyncJobRequest{}
	return &this
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *ModelSyncJobRequest) SetTargetId(v string) {
	o.TargetId = &v
}

// GetItemIds returns the ItemIds field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetItemIds() []string {
	if o == nil || IsNil(o.ItemIds) {
		var ret []string
		return ret
	}
	return o.ItemIds
}

// GetItemIdsOk returns a tuple with the ItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetItemIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ItemIds) {
		return nil, false
	}
	return o.ItemIds, true
}

// HasItemIds returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasItemIds() bool {
	if o != nil && !IsNil(o.ItemIds) {
		return true
	}

	return false
}

// SetItemIds gets a reference to the given []string and assigns it to the ItemIds field.
func (o *ModelSyncJobRequest) SetItemIds(v []string) {
	o.ItemIds = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetCategory() ModelSyncCategory {
	if o == nil || IsNil(o.Category) {
		var ret ModelSyncCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetCategoryOk() (*ModelSyncCategory, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given ModelSyncCategory and assigns it to the Category field.
func (o *ModelSyncJobRequest) SetCategory(v ModelSyncCategory) {
	o.Category = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *ModelSyncJobRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetQuality() string {
	if o == nil || IsNil(o.Quality) {
		var ret string
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetQualityOk() (*string, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given string and assigns it to the Quality field.
func (o *ModelSyncJobRequest) SetQuality(v string) {
	o.Quality = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ModelSyncJobRequest) SetProfile(v string) {
	o.Profile = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetContainer() string {
	if o == nil || IsNil(o.Container) {
		var ret string
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetContainerOk() (*string, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given string and assigns it to the Container field.
func (o *ModelSyncJobRequest) SetContainer(v string) {
	o.Container = &v
}

// GetVideoCodec returns the VideoCodec field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetVideoCodec() string {
	if o == nil || IsNil(o.VideoCodec) {
		var ret string
		return ret
	}
	return *o.VideoCodec
}

// GetVideoCodecOk returns a tuple with the VideoCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetVideoCodecOk() (*string, bool) {
	if o == nil || IsNil(o.VideoCodec) {
		return nil, false
	}
	return o.VideoCodec, true
}

// HasVideoCodec returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasVideoCodec() bool {
	if o != nil && !IsNil(o.VideoCodec) {
		return true
	}

	return false
}

// SetVideoCodec gets a reference to the given string and assigns it to the VideoCodec field.
func (o *ModelSyncJobRequest) SetVideoCodec(v string) {
	o.VideoCodec = &v
}

// GetAudioCodec returns the AudioCodec field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetAudioCodec() string {
	if o == nil || IsNil(o.AudioCodec) {
		var ret string
		return ret
	}
	return *o.AudioCodec
}

// GetAudioCodecOk returns a tuple with the AudioCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetAudioCodecOk() (*string, bool) {
	if o == nil || IsNil(o.AudioCodec) {
		return nil, false
	}
	return o.AudioCodec, true
}

// HasAudioCodec returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasAudioCodec() bool {
	if o != nil && !IsNil(o.AudioCodec) {
		return true
	}

	return false
}

// SetAudioCodec gets a reference to the given string and assigns it to the AudioCodec field.
func (o *ModelSyncJobRequest) SetAudioCodec(v string) {
	o.AudioCodec = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelSyncJobRequest) SetName(v string) {
	o.Name = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelSyncJobRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetUnwatchedOnly returns the UnwatchedOnly field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetUnwatchedOnly() bool {
	if o == nil || IsNil(o.UnwatchedOnly) {
		var ret bool
		return ret
	}
	return *o.UnwatchedOnly
}

// GetUnwatchedOnlyOk returns a tuple with the UnwatchedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetUnwatchedOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.UnwatchedOnly) {
		return nil, false
	}
	return o.UnwatchedOnly, true
}

// HasUnwatchedOnly returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasUnwatchedOnly() bool {
	if o != nil && !IsNil(o.UnwatchedOnly) {
		return true
	}

	return false
}

// SetUnwatchedOnly gets a reference to the given bool and assigns it to the UnwatchedOnly field.
func (o *ModelSyncJobRequest) SetUnwatchedOnly(v bool) {
	o.UnwatchedOnly = &v
}

// GetSyncNewContent returns the SyncNewContent field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetSyncNewContent() bool {
	if o == nil || IsNil(o.SyncNewContent) {
		var ret bool
		return ret
	}
	return *o.SyncNewContent
}

// GetSyncNewContentOk returns a tuple with the SyncNewContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetSyncNewContentOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncNewContent) {
		return nil, false
	}
	return o.SyncNewContent, true
}

// HasSyncNewContent returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasSyncNewContent() bool {
	if o != nil && !IsNil(o.SyncNewContent) {
		return true
	}

	return false
}

// SetSyncNewContent gets a reference to the given bool and assigns it to the SyncNewContent field.
func (o *ModelSyncJobRequest) SetSyncNewContent(v bool) {
	o.SyncNewContent = &v
}

// GetItemLimit returns the ItemLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelSyncJobRequest) GetItemLimit() int32 {
	if o == nil || IsNil(o.ItemLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.ItemLimit.Get()
}

// GetItemLimitOk returns a tuple with the ItemLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelSyncJobRequest) GetItemLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemLimit.Get(), o.ItemLimit.IsSet()
}

// HasItemLimit returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasItemLimit() bool {
	if o != nil && o.ItemLimit.IsSet() {
		return true
	}

	return false
}

// SetItemLimit gets a reference to the given NullableInt32 and assigns it to the ItemLimit field.
func (o *ModelSyncJobRequest) SetItemLimit(v int32) {
	o.ItemLimit.Set(&v)
}
// SetItemLimitNil sets the value for ItemLimit to be an explicit nil
func (o *ModelSyncJobRequest) SetItemLimitNil() {
	o.ItemLimit.Set(nil)
}

// UnsetItemLimit ensures that no value is present for ItemLimit, not even an explicit nil
func (o *ModelSyncJobRequest) UnsetItemLimit() {
	o.ItemLimit.Unset()
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelSyncJobRequest) GetBitrate() int32 {
	if o == nil || IsNil(o.Bitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.Bitrate.Get()
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelSyncJobRequest) GetBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bitrate.Get(), o.Bitrate.IsSet()
}

// HasBitrate returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasBitrate() bool {
	if o != nil && o.Bitrate.IsSet() {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given NullableInt32 and assigns it to the Bitrate field.
func (o *ModelSyncJobRequest) SetBitrate(v int32) {
	o.Bitrate.Set(&v)
}
// SetBitrateNil sets the value for Bitrate to be an explicit nil
func (o *ModelSyncJobRequest) SetBitrateNil() {
	o.Bitrate.Set(nil)
}

// UnsetBitrate ensures that no value is present for Bitrate, not even an explicit nil
func (o *ModelSyncJobRequest) UnsetBitrate() {
	o.Bitrate.Unset()
}

// GetDownloaded returns the Downloaded field value if set, zero value otherwise.
func (o *ModelSyncJobRequest) GetDownloaded() bool {
	if o == nil || IsNil(o.Downloaded) {
		var ret bool
		return ret
	}
	return *o.Downloaded
}

// GetDownloadedOk returns a tuple with the Downloaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncJobRequest) GetDownloadedOk() (*bool, bool) {
	if o == nil || IsNil(o.Downloaded) {
		return nil, false
	}
	return o.Downloaded, true
}

// HasDownloaded returns a boolean if a field has been set.
func (o *ModelSyncJobRequest) HasDownloaded() bool {
	if o != nil && !IsNil(o.Downloaded) {
		return true
	}

	return false
}

// SetDownloaded gets a reference to the given bool and assigns it to the Downloaded field.
func (o *ModelSyncJobRequest) SetDownloaded(v bool) {
	o.Downloaded = &v
}

func (o ModelSyncJobRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSyncJobRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetId) {
		toSerialize["TargetId"] = o.TargetId
	}
	if !IsNil(o.ItemIds) {
		toSerialize["ItemIds"] = o.ItemIds
	}
	if !IsNil(o.Category) {
		toSerialize["Category"] = o.Category
	}
	if !IsNil(o.ParentId) {
		toSerialize["ParentId"] = o.ParentId
	}
	if !IsNil(o.Quality) {
		toSerialize["Quality"] = o.Quality
	}
	if !IsNil(o.Profile) {
		toSerialize["Profile"] = o.Profile
	}
	if !IsNil(o.Container) {
		toSerialize["Container"] = o.Container
	}
	if !IsNil(o.VideoCodec) {
		toSerialize["VideoCodec"] = o.VideoCodec
	}
	if !IsNil(o.AudioCodec) {
		toSerialize["AudioCodec"] = o.AudioCodec
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.UserId) {
		toSerialize["UserId"] = o.UserId
	}
	if !IsNil(o.UnwatchedOnly) {
		toSerialize["UnwatchedOnly"] = o.UnwatchedOnly
	}
	if !IsNil(o.SyncNewContent) {
		toSerialize["SyncNewContent"] = o.SyncNewContent
	}
	if o.ItemLimit.IsSet() {
		toSerialize["ItemLimit"] = o.ItemLimit.Get()
	}
	if o.Bitrate.IsSet() {
		toSerialize["Bitrate"] = o.Bitrate.Get()
	}
	if !IsNil(o.Downloaded) {
		toSerialize["Downloaded"] = o.Downloaded
	}
	return toSerialize, nil
}

type NullableModelSyncJobRequest struct {
	value *ModelSyncJobRequest
	isSet bool
}

func (v NullableModelSyncJobRequest) Get() *ModelSyncJobRequest {
	return v.value
}

func (v *NullableModelSyncJobRequest) Set(val *ModelSyncJobRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSyncJobRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSyncJobRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSyncJobRequest(val *ModelSyncJobRequest) *NullableModelSyncJobRequest {
	return &NullableModelSyncJobRequest{value: val, isSet: true}
}

func (v NullableModelSyncJobRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSyncJobRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


