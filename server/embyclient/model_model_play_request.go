/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelPlayRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelPlayRequest{}

// ModelPlayRequest struct for ModelPlayRequest
type ModelPlayRequest struct {
	ControllingUserId *string `json:"ControllingUserId,omitempty"`
	SubtitleStreamIndex NullableInt32 `json:"SubtitleStreamIndex,omitempty"`
	AudioStreamIndex NullableInt32 `json:"AudioStreamIndex,omitempty"`
	MediaSourceId *string `json:"MediaSourceId,omitempty"`
	StartIndex NullableInt32 `json:"StartIndex,omitempty"`
}

// NewModelPlayRequest instantiates a new ModelPlayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelPlayRequest() *ModelPlayRequest {
	this := ModelPlayRequest{}
	return &this
}

// NewModelPlayRequestWithDefaults instantiates a new ModelPlayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelPlayRequestWithDefaults() *ModelPlayRequest {
	this := ModelPlayRequest{}
	return &this
}

// GetControllingUserId returns the ControllingUserId field value if set, zero value otherwise.
func (o *ModelPlayRequest) GetControllingUserId() string {
	if o == nil || IsNil(o.ControllingUserId) {
		var ret string
		return ret
	}
	return *o.ControllingUserId
}

// GetControllingUserIdOk returns a tuple with the ControllingUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlayRequest) GetControllingUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ControllingUserId) {
		return nil, false
	}
	return o.ControllingUserId, true
}

// HasControllingUserId returns a boolean if a field has been set.
func (o *ModelPlayRequest) HasControllingUserId() bool {
	if o != nil && !IsNil(o.ControllingUserId) {
		return true
	}

	return false
}

// SetControllingUserId gets a reference to the given string and assigns it to the ControllingUserId field.
func (o *ModelPlayRequest) SetControllingUserId(v string) {
	o.ControllingUserId = &v
}

// GetSubtitleStreamIndex returns the SubtitleStreamIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelPlayRequest) GetSubtitleStreamIndex() int32 {
	if o == nil || IsNil(o.SubtitleStreamIndex.Get()) {
		var ret int32
		return ret
	}
	return *o.SubtitleStreamIndex.Get()
}

// GetSubtitleStreamIndexOk returns a tuple with the SubtitleStreamIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelPlayRequest) GetSubtitleStreamIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubtitleStreamIndex.Get(), o.SubtitleStreamIndex.IsSet()
}

// HasSubtitleStreamIndex returns a boolean if a field has been set.
func (o *ModelPlayRequest) HasSubtitleStreamIndex() bool {
	if o != nil && o.SubtitleStreamIndex.IsSet() {
		return true
	}

	return false
}

// SetSubtitleStreamIndex gets a reference to the given NullableInt32 and assigns it to the SubtitleStreamIndex field.
func (o *ModelPlayRequest) SetSubtitleStreamIndex(v int32) {
	o.SubtitleStreamIndex.Set(&v)
}
// SetSubtitleStreamIndexNil sets the value for SubtitleStreamIndex to be an explicit nil
func (o *ModelPlayRequest) SetSubtitleStreamIndexNil() {
	o.SubtitleStreamIndex.Set(nil)
}

// UnsetSubtitleStreamIndex ensures that no value is present for SubtitleStreamIndex, not even an explicit nil
func (o *ModelPlayRequest) UnsetSubtitleStreamIndex() {
	o.SubtitleStreamIndex.Unset()
}

// GetAudioStreamIndex returns the AudioStreamIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelPlayRequest) GetAudioStreamIndex() int32 {
	if o == nil || IsNil(o.AudioStreamIndex.Get()) {
		var ret int32
		return ret
	}
	return *o.AudioStreamIndex.Get()
}

// GetAudioStreamIndexOk returns a tuple with the AudioStreamIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelPlayRequest) GetAudioStreamIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AudioStreamIndex.Get(), o.AudioStreamIndex.IsSet()
}

// HasAudioStreamIndex returns a boolean if a field has been set.
func (o *ModelPlayRequest) HasAudioStreamIndex() bool {
	if o != nil && o.AudioStreamIndex.IsSet() {
		return true
	}

	return false
}

// SetAudioStreamIndex gets a reference to the given NullableInt32 and assigns it to the AudioStreamIndex field.
func (o *ModelPlayRequest) SetAudioStreamIndex(v int32) {
	o.AudioStreamIndex.Set(&v)
}
// SetAudioStreamIndexNil sets the value for AudioStreamIndex to be an explicit nil
func (o *ModelPlayRequest) SetAudioStreamIndexNil() {
	o.AudioStreamIndex.Set(nil)
}

// UnsetAudioStreamIndex ensures that no value is present for AudioStreamIndex, not even an explicit nil
func (o *ModelPlayRequest) UnsetAudioStreamIndex() {
	o.AudioStreamIndex.Unset()
}

// GetMediaSourceId returns the MediaSourceId field value if set, zero value otherwise.
func (o *ModelPlayRequest) GetMediaSourceId() string {
	if o == nil || IsNil(o.MediaSourceId) {
		var ret string
		return ret
	}
	return *o.MediaSourceId
}

// GetMediaSourceIdOk returns a tuple with the MediaSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlayRequest) GetMediaSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.MediaSourceId) {
		return nil, false
	}
	return o.MediaSourceId, true
}

// HasMediaSourceId returns a boolean if a field has been set.
func (o *ModelPlayRequest) HasMediaSourceId() bool {
	if o != nil && !IsNil(o.MediaSourceId) {
		return true
	}

	return false
}

// SetMediaSourceId gets a reference to the given string and assigns it to the MediaSourceId field.
func (o *ModelPlayRequest) SetMediaSourceId(v string) {
	o.MediaSourceId = &v
}

// GetStartIndex returns the StartIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelPlayRequest) GetStartIndex() int32 {
	if o == nil || IsNil(o.StartIndex.Get()) {
		var ret int32
		return ret
	}
	return *o.StartIndex.Get()
}

// GetStartIndexOk returns a tuple with the StartIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelPlayRequest) GetStartIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartIndex.Get(), o.StartIndex.IsSet()
}

// HasStartIndex returns a boolean if a field has been set.
func (o *ModelPlayRequest) HasStartIndex() bool {
	if o != nil && o.StartIndex.IsSet() {
		return true
	}

	return false
}

// SetStartIndex gets a reference to the given NullableInt32 and assigns it to the StartIndex field.
func (o *ModelPlayRequest) SetStartIndex(v int32) {
	o.StartIndex.Set(&v)
}
// SetStartIndexNil sets the value for StartIndex to be an explicit nil
func (o *ModelPlayRequest) SetStartIndexNil() {
	o.StartIndex.Set(nil)
}

// UnsetStartIndex ensures that no value is present for StartIndex, not even an explicit nil
func (o *ModelPlayRequest) UnsetStartIndex() {
	o.StartIndex.Unset()
}

func (o ModelPlayRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelPlayRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControllingUserId) {
		toSerialize["ControllingUserId"] = o.ControllingUserId
	}
	if o.SubtitleStreamIndex.IsSet() {
		toSerialize["SubtitleStreamIndex"] = o.SubtitleStreamIndex.Get()
	}
	if o.AudioStreamIndex.IsSet() {
		toSerialize["AudioStreamIndex"] = o.AudioStreamIndex.Get()
	}
	if !IsNil(o.MediaSourceId) {
		toSerialize["MediaSourceId"] = o.MediaSourceId
	}
	if o.StartIndex.IsSet() {
		toSerialize["StartIndex"] = o.StartIndex.Get()
	}
	return toSerialize, nil
}

type NullableModelPlayRequest struct {
	value *ModelPlayRequest
	isSet bool
}

func (v NullableModelPlayRequest) Get() *ModelPlayRequest {
	return v.value
}

func (v *NullableModelPlayRequest) Set(val *ModelPlayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelPlayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelPlayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelPlayRequest(val *ModelPlayRequest) *NullableModelPlayRequest {
	return &NullableModelPlayRequest{value: val, isSet: true}
}

func (v NullableModelPlayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelPlayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


