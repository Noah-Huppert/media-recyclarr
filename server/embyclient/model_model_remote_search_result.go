/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelRemoteSearchResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelRemoteSearchResult{}

// ModelRemoteSearchResult struct for ModelRemoteSearchResult
type ModelRemoteSearchResult struct {
	Name *string `json:"Name,omitempty"`
	ProviderIds *map[string]string `json:"ProviderIds,omitempty"`
	ProductionYear NullableInt32 `json:"ProductionYear,omitempty"`
	IndexNumber NullableInt32 `json:"IndexNumber,omitempty"`
	IndexNumberEnd NullableInt32 `json:"IndexNumberEnd,omitempty"`
	ParentIndexNumber NullableInt32 `json:"ParentIndexNumber,omitempty"`
	SortIndexNumber NullableInt32 `json:"SortIndexNumber,omitempty"`
	SortParentIndexNumber NullableInt32 `json:"SortParentIndexNumber,omitempty"`
	PremiereDate NullableTime `json:"PremiereDate,omitempty"`
	ImageUrl *string `json:"ImageUrl,omitempty"`
	SearchProviderName *string `json:"SearchProviderName,omitempty"`
	GameSystem *string `json:"GameSystem,omitempty"`
	Overview *string `json:"Overview,omitempty"`
	DisambiguationComment *string `json:"DisambiguationComment,omitempty"`
	AlbumArtist *ModelRemoteSearchResult `json:"AlbumArtist,omitempty"`
	Artists []ModelRemoteSearchResult `json:"Artists,omitempty"`
}

// NewModelRemoteSearchResult instantiates a new ModelRemoteSearchResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelRemoteSearchResult() *ModelRemoteSearchResult {
	this := ModelRemoteSearchResult{}
	return &this
}

// NewModelRemoteSearchResultWithDefaults instantiates a new ModelRemoteSearchResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelRemoteSearchResultWithDefaults() *ModelRemoteSearchResult {
	this := ModelRemoteSearchResult{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelRemoteSearchResult) SetName(v string) {
	o.Name = &v
}

// GetProviderIds returns the ProviderIds field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetProviderIds() map[string]string {
	if o == nil || IsNil(o.ProviderIds) {
		var ret map[string]string
		return ret
	}
	return *o.ProviderIds
}

// GetProviderIdsOk returns a tuple with the ProviderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetProviderIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProviderIds) {
		return nil, false
	}
	return o.ProviderIds, true
}

// HasProviderIds returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasProviderIds() bool {
	if o != nil && !IsNil(o.ProviderIds) {
		return true
	}

	return false
}

// SetProviderIds gets a reference to the given map[string]string and assigns it to the ProviderIds field.
func (o *ModelRemoteSearchResult) SetProviderIds(v map[string]string) {
	o.ProviderIds = &v
}

// GetProductionYear returns the ProductionYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteSearchResult) GetProductionYear() int32 {
	if o == nil || IsNil(o.ProductionYear.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductionYear.Get()
}

// GetProductionYearOk returns a tuple with the ProductionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteSearchResult) GetProductionYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductionYear.Get(), o.ProductionYear.IsSet()
}

// HasProductionYear returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasProductionYear() bool {
	if o != nil && o.ProductionYear.IsSet() {
		return true
	}

	return false
}

// SetProductionYear gets a reference to the given NullableInt32 and assigns it to the ProductionYear field.
func (o *ModelRemoteSearchResult) SetProductionYear(v int32) {
	o.ProductionYear.Set(&v)
}
// SetProductionYearNil sets the value for ProductionYear to be an explicit nil
func (o *ModelRemoteSearchResult) SetProductionYearNil() {
	o.ProductionYear.Set(nil)
}

// UnsetProductionYear ensures that no value is present for ProductionYear, not even an explicit nil
func (o *ModelRemoteSearchResult) UnsetProductionYear() {
	o.ProductionYear.Unset()
}

// GetIndexNumber returns the IndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteSearchResult) GetIndexNumber() int32 {
	if o == nil || IsNil(o.IndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumber.Get()
}

// GetIndexNumberOk returns a tuple with the IndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteSearchResult) GetIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumber.Get(), o.IndexNumber.IsSet()
}

// HasIndexNumber returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasIndexNumber() bool {
	if o != nil && o.IndexNumber.IsSet() {
		return true
	}

	return false
}

// SetIndexNumber gets a reference to the given NullableInt32 and assigns it to the IndexNumber field.
func (o *ModelRemoteSearchResult) SetIndexNumber(v int32) {
	o.IndexNumber.Set(&v)
}
// SetIndexNumberNil sets the value for IndexNumber to be an explicit nil
func (o *ModelRemoteSearchResult) SetIndexNumberNil() {
	o.IndexNumber.Set(nil)
}

// UnsetIndexNumber ensures that no value is present for IndexNumber, not even an explicit nil
func (o *ModelRemoteSearchResult) UnsetIndexNumber() {
	o.IndexNumber.Unset()
}

// GetIndexNumberEnd returns the IndexNumberEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteSearchResult) GetIndexNumberEnd() int32 {
	if o == nil || IsNil(o.IndexNumberEnd.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumberEnd.Get()
}

// GetIndexNumberEndOk returns a tuple with the IndexNumberEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteSearchResult) GetIndexNumberEndOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumberEnd.Get(), o.IndexNumberEnd.IsSet()
}

// HasIndexNumberEnd returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasIndexNumberEnd() bool {
	if o != nil && o.IndexNumberEnd.IsSet() {
		return true
	}

	return false
}

// SetIndexNumberEnd gets a reference to the given NullableInt32 and assigns it to the IndexNumberEnd field.
func (o *ModelRemoteSearchResult) SetIndexNumberEnd(v int32) {
	o.IndexNumberEnd.Set(&v)
}
// SetIndexNumberEndNil sets the value for IndexNumberEnd to be an explicit nil
func (o *ModelRemoteSearchResult) SetIndexNumberEndNil() {
	o.IndexNumberEnd.Set(nil)
}

// UnsetIndexNumberEnd ensures that no value is present for IndexNumberEnd, not even an explicit nil
func (o *ModelRemoteSearchResult) UnsetIndexNumberEnd() {
	o.IndexNumberEnd.Unset()
}

// GetParentIndexNumber returns the ParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteSearchResult) GetParentIndexNumber() int32 {
	if o == nil || IsNil(o.ParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentIndexNumber.Get()
}

// GetParentIndexNumberOk returns a tuple with the ParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteSearchResult) GetParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentIndexNumber.Get(), o.ParentIndexNumber.IsSet()
}

// HasParentIndexNumber returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasParentIndexNumber() bool {
	if o != nil && o.ParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the ParentIndexNumber field.
func (o *ModelRemoteSearchResult) SetParentIndexNumber(v int32) {
	o.ParentIndexNumber.Set(&v)
}
// SetParentIndexNumberNil sets the value for ParentIndexNumber to be an explicit nil
func (o *ModelRemoteSearchResult) SetParentIndexNumberNil() {
	o.ParentIndexNumber.Set(nil)
}

// UnsetParentIndexNumber ensures that no value is present for ParentIndexNumber, not even an explicit nil
func (o *ModelRemoteSearchResult) UnsetParentIndexNumber() {
	o.ParentIndexNumber.Unset()
}

// GetSortIndexNumber returns the SortIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteSearchResult) GetSortIndexNumber() int32 {
	if o == nil || IsNil(o.SortIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SortIndexNumber.Get()
}

// GetSortIndexNumberOk returns a tuple with the SortIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteSearchResult) GetSortIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortIndexNumber.Get(), o.SortIndexNumber.IsSet()
}

// HasSortIndexNumber returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasSortIndexNumber() bool {
	if o != nil && o.SortIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetSortIndexNumber gets a reference to the given NullableInt32 and assigns it to the SortIndexNumber field.
func (o *ModelRemoteSearchResult) SetSortIndexNumber(v int32) {
	o.SortIndexNumber.Set(&v)
}
// SetSortIndexNumberNil sets the value for SortIndexNumber to be an explicit nil
func (o *ModelRemoteSearchResult) SetSortIndexNumberNil() {
	o.SortIndexNumber.Set(nil)
}

// UnsetSortIndexNumber ensures that no value is present for SortIndexNumber, not even an explicit nil
func (o *ModelRemoteSearchResult) UnsetSortIndexNumber() {
	o.SortIndexNumber.Unset()
}

// GetSortParentIndexNumber returns the SortParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteSearchResult) GetSortParentIndexNumber() int32 {
	if o == nil || IsNil(o.SortParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SortParentIndexNumber.Get()
}

// GetSortParentIndexNumberOk returns a tuple with the SortParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteSearchResult) GetSortParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortParentIndexNumber.Get(), o.SortParentIndexNumber.IsSet()
}

// HasSortParentIndexNumber returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasSortParentIndexNumber() bool {
	if o != nil && o.SortParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetSortParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the SortParentIndexNumber field.
func (o *ModelRemoteSearchResult) SetSortParentIndexNumber(v int32) {
	o.SortParentIndexNumber.Set(&v)
}
// SetSortParentIndexNumberNil sets the value for SortParentIndexNumber to be an explicit nil
func (o *ModelRemoteSearchResult) SetSortParentIndexNumberNil() {
	o.SortParentIndexNumber.Set(nil)
}

// UnsetSortParentIndexNumber ensures that no value is present for SortParentIndexNumber, not even an explicit nil
func (o *ModelRemoteSearchResult) UnsetSortParentIndexNumber() {
	o.SortParentIndexNumber.Unset()
}

// GetPremiereDate returns the PremiereDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelRemoteSearchResult) GetPremiereDate() time.Time {
	if o == nil || IsNil(o.PremiereDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PremiereDate.Get()
}

// GetPremiereDateOk returns a tuple with the PremiereDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelRemoteSearchResult) GetPremiereDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PremiereDate.Get(), o.PremiereDate.IsSet()
}

// HasPremiereDate returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasPremiereDate() bool {
	if o != nil && o.PremiereDate.IsSet() {
		return true
	}

	return false
}

// SetPremiereDate gets a reference to the given NullableTime and assigns it to the PremiereDate field.
func (o *ModelRemoteSearchResult) SetPremiereDate(v time.Time) {
	o.PremiereDate.Set(&v)
}
// SetPremiereDateNil sets the value for PremiereDate to be an explicit nil
func (o *ModelRemoteSearchResult) SetPremiereDateNil() {
	o.PremiereDate.Set(nil)
}

// UnsetPremiereDate ensures that no value is present for PremiereDate, not even an explicit nil
func (o *ModelRemoteSearchResult) UnsetPremiereDate() {
	o.PremiereDate.Unset()
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *ModelRemoteSearchResult) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetSearchProviderName returns the SearchProviderName field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetSearchProviderName() string {
	if o == nil || IsNil(o.SearchProviderName) {
		var ret string
		return ret
	}
	return *o.SearchProviderName
}

// GetSearchProviderNameOk returns a tuple with the SearchProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetSearchProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.SearchProviderName) {
		return nil, false
	}
	return o.SearchProviderName, true
}

// HasSearchProviderName returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasSearchProviderName() bool {
	if o != nil && !IsNil(o.SearchProviderName) {
		return true
	}

	return false
}

// SetSearchProviderName gets a reference to the given string and assigns it to the SearchProviderName field.
func (o *ModelRemoteSearchResult) SetSearchProviderName(v string) {
	o.SearchProviderName = &v
}

// GetGameSystem returns the GameSystem field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetGameSystem() string {
	if o == nil || IsNil(o.GameSystem) {
		var ret string
		return ret
	}
	return *o.GameSystem
}

// GetGameSystemOk returns a tuple with the GameSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetGameSystemOk() (*string, bool) {
	if o == nil || IsNil(o.GameSystem) {
		return nil, false
	}
	return o.GameSystem, true
}

// HasGameSystem returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasGameSystem() bool {
	if o != nil && !IsNil(o.GameSystem) {
		return true
	}

	return false
}

// SetGameSystem gets a reference to the given string and assigns it to the GameSystem field.
func (o *ModelRemoteSearchResult) SetGameSystem(v string) {
	o.GameSystem = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetOverview() string {
	if o == nil || IsNil(o.Overview) {
		var ret string
		return ret
	}
	return *o.Overview
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.Overview) {
		return nil, false
	}
	return o.Overview, true
}

// HasOverview returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasOverview() bool {
	if o != nil && !IsNil(o.Overview) {
		return true
	}

	return false
}

// SetOverview gets a reference to the given string and assigns it to the Overview field.
func (o *ModelRemoteSearchResult) SetOverview(v string) {
	o.Overview = &v
}

// GetDisambiguationComment returns the DisambiguationComment field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetDisambiguationComment() string {
	if o == nil || IsNil(o.DisambiguationComment) {
		var ret string
		return ret
	}
	return *o.DisambiguationComment
}

// GetDisambiguationCommentOk returns a tuple with the DisambiguationComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetDisambiguationCommentOk() (*string, bool) {
	if o == nil || IsNil(o.DisambiguationComment) {
		return nil, false
	}
	return o.DisambiguationComment, true
}

// HasDisambiguationComment returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasDisambiguationComment() bool {
	if o != nil && !IsNil(o.DisambiguationComment) {
		return true
	}

	return false
}

// SetDisambiguationComment gets a reference to the given string and assigns it to the DisambiguationComment field.
func (o *ModelRemoteSearchResult) SetDisambiguationComment(v string) {
	o.DisambiguationComment = &v
}

// GetAlbumArtist returns the AlbumArtist field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetAlbumArtist() ModelRemoteSearchResult {
	if o == nil || IsNil(o.AlbumArtist) {
		var ret ModelRemoteSearchResult
		return ret
	}
	return *o.AlbumArtist
}

// GetAlbumArtistOk returns a tuple with the AlbumArtist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetAlbumArtistOk() (*ModelRemoteSearchResult, bool) {
	if o == nil || IsNil(o.AlbumArtist) {
		return nil, false
	}
	return o.AlbumArtist, true
}

// HasAlbumArtist returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasAlbumArtist() bool {
	if o != nil && !IsNil(o.AlbumArtist) {
		return true
	}

	return false
}

// SetAlbumArtist gets a reference to the given ModelRemoteSearchResult and assigns it to the AlbumArtist field.
func (o *ModelRemoteSearchResult) SetAlbumArtist(v ModelRemoteSearchResult) {
	o.AlbumArtist = &v
}

// GetArtists returns the Artists field value if set, zero value otherwise.
func (o *ModelRemoteSearchResult) GetArtists() []ModelRemoteSearchResult {
	if o == nil || IsNil(o.Artists) {
		var ret []ModelRemoteSearchResult
		return ret
	}
	return o.Artists
}

// GetArtistsOk returns a tuple with the Artists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelRemoteSearchResult) GetArtistsOk() ([]ModelRemoteSearchResult, bool) {
	if o == nil || IsNil(o.Artists) {
		return nil, false
	}
	return o.Artists, true
}

// HasArtists returns a boolean if a field has been set.
func (o *ModelRemoteSearchResult) HasArtists() bool {
	if o != nil && !IsNil(o.Artists) {
		return true
	}

	return false
}

// SetArtists gets a reference to the given []ModelRemoteSearchResult and assigns it to the Artists field.
func (o *ModelRemoteSearchResult) SetArtists(v []ModelRemoteSearchResult) {
	o.Artists = v
}

func (o ModelRemoteSearchResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelRemoteSearchResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.ProviderIds) {
		toSerialize["ProviderIds"] = o.ProviderIds
	}
	if o.ProductionYear.IsSet() {
		toSerialize["ProductionYear"] = o.ProductionYear.Get()
	}
	if o.IndexNumber.IsSet() {
		toSerialize["IndexNumber"] = o.IndexNumber.Get()
	}
	if o.IndexNumberEnd.IsSet() {
		toSerialize["IndexNumberEnd"] = o.IndexNumberEnd.Get()
	}
	if o.ParentIndexNumber.IsSet() {
		toSerialize["ParentIndexNumber"] = o.ParentIndexNumber.Get()
	}
	if o.SortIndexNumber.IsSet() {
		toSerialize["SortIndexNumber"] = o.SortIndexNumber.Get()
	}
	if o.SortParentIndexNumber.IsSet() {
		toSerialize["SortParentIndexNumber"] = o.SortParentIndexNumber.Get()
	}
	if o.PremiereDate.IsSet() {
		toSerialize["PremiereDate"] = o.PremiereDate.Get()
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["ImageUrl"] = o.ImageUrl
	}
	if !IsNil(o.SearchProviderName) {
		toSerialize["SearchProviderName"] = o.SearchProviderName
	}
	if !IsNil(o.GameSystem) {
		toSerialize["GameSystem"] = o.GameSystem
	}
	if !IsNil(o.Overview) {
		toSerialize["Overview"] = o.Overview
	}
	if !IsNil(o.DisambiguationComment) {
		toSerialize["DisambiguationComment"] = o.DisambiguationComment
	}
	if !IsNil(o.AlbumArtist) {
		toSerialize["AlbumArtist"] = o.AlbumArtist
	}
	if !IsNil(o.Artists) {
		toSerialize["Artists"] = o.Artists
	}
	return toSerialize, nil
}

type NullableModelRemoteSearchResult struct {
	value *ModelRemoteSearchResult
	isSet bool
}

func (v NullableModelRemoteSearchResult) Get() *ModelRemoteSearchResult {
	return v.value
}

func (v *NullableModelRemoteSearchResult) Set(val *ModelRemoteSearchResult) {
	v.value = val
	v.isSet = true
}

func (v NullableModelRemoteSearchResult) IsSet() bool {
	return v.isSet
}

func (v *NullableModelRemoteSearchResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelRemoteSearchResult(val *ModelRemoteSearchResult) *NullableModelRemoteSearchResult {
	return &NullableModelRemoteSearchResult{value: val, isSet: true}
}

func (v NullableModelRemoteSearchResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelRemoteSearchResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


