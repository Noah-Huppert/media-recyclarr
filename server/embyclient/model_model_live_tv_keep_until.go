/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"fmt"
)

// ModelLiveTvKeepUntil the model 'ModelLiveTvKeepUntil'
type ModelLiveTvKeepUntil string

// List of LiveTv.KeepUntil
const (
	MODELLIVETVKEEPUNTIL_UNTIL_DELETED ModelLiveTvKeepUntil = "UntilDeleted"
	MODELLIVETVKEEPUNTIL_UNTIL_SPACE_NEEDED ModelLiveTvKeepUntil = "UntilSpaceNeeded"
	MODELLIVETVKEEPUNTIL_UNTIL_WATCHED ModelLiveTvKeepUntil = "UntilWatched"
	MODELLIVETVKEEPUNTIL_UNTIL_DATE ModelLiveTvKeepUntil = "UntilDate"
)

// All allowed values of ModelLiveTvKeepUntil enum
var AllowedModelLiveTvKeepUntilEnumValues = []ModelLiveTvKeepUntil{
	"UntilDeleted",
	"UntilSpaceNeeded",
	"UntilWatched",
	"UntilDate",
}

func (v *ModelLiveTvKeepUntil) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelLiveTvKeepUntil(value)
	for _, existing := range AllowedModelLiveTvKeepUntilEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelLiveTvKeepUntil", value)
}

// NewModelLiveTvKeepUntilFromValue returns a pointer to a valid ModelLiveTvKeepUntil
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelLiveTvKeepUntilFromValue(v string) (*ModelLiveTvKeepUntil, error) {
	ev := ModelLiveTvKeepUntil(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelLiveTvKeepUntil: valid values are %v", v, AllowedModelLiveTvKeepUntilEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelLiveTvKeepUntil) IsValid() bool {
	for _, existing := range AllowedModelLiveTvKeepUntilEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LiveTv.KeepUntil value
func (v ModelLiveTvKeepUntil) Ptr() *ModelLiveTvKeepUntil {
	return &v
}

type NullableModelLiveTvKeepUntil struct {
	value *ModelLiveTvKeepUntil
	isSet bool
}

func (v NullableModelLiveTvKeepUntil) Get() *ModelLiveTvKeepUntil {
	return v.value
}

func (v *NullableModelLiveTvKeepUntil) Set(val *ModelLiveTvKeepUntil) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLiveTvKeepUntil) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLiveTvKeepUntil) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLiveTvKeepUntil(val *ModelLiveTvKeepUntil) *NullableModelLiveTvKeepUntil {
	return &NullableModelLiveTvKeepUntil{value: val, isSet: true}
}

func (v NullableModelLiveTvKeepUntil) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLiveTvKeepUntil) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

