/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelServerConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelServerConfiguration{}

// ModelServerConfiguration struct for ModelServerConfiguration
type ModelServerConfiguration struct {
	EnableUPnP *bool `json:"EnableUPnP,omitempty"`
	PublicPort *int32 `json:"PublicPort,omitempty"`
	PublicHttpsPort *int32 `json:"PublicHttpsPort,omitempty"`
	HttpServerPortNumber *int32 `json:"HttpServerPortNumber,omitempty"`
	HttpsPortNumber *int32 `json:"HttpsPortNumber,omitempty"`
	EnableHttps *bool `json:"EnableHttps,omitempty"`
	CertificatePath *string `json:"CertificatePath,omitempty"`
	CertificatePassword *string `json:"CertificatePassword,omitempty"`
	IsPortAuthorized *bool `json:"IsPortAuthorized,omitempty"`
	AutoRunWebApp *bool `json:"AutoRunWebApp,omitempty"`
	EnableRemoteAccess *bool `json:"EnableRemoteAccess,omitempty"`
	LogAllQueryTimes *bool `json:"LogAllQueryTimes,omitempty"`
	EnableCaseSensitiveItemIds *bool `json:"EnableCaseSensitiveItemIds,omitempty"`
	MetadataPath *string `json:"MetadataPath,omitempty"`
	MetadataNetworkPath *string `json:"MetadataNetworkPath,omitempty"`
	PreferredMetadataLanguage *string `json:"PreferredMetadataLanguage,omitempty"`
	MetadataCountryCode *string `json:"MetadataCountryCode,omitempty"`
	SortRemoveWords []string `json:"SortRemoveWords,omitempty"`
	LibraryMonitorDelay *int32 `json:"LibraryMonitorDelay,omitempty"`
	EnableDashboardResponseCaching *bool `json:"EnableDashboardResponseCaching,omitempty"`
	DashboardSourcePath *string `json:"DashboardSourcePath,omitempty"`
	ImageSavingConvention *ModelImageSavingConvention `json:"ImageSavingConvention,omitempty"`
	EnableAutomaticRestart *bool `json:"EnableAutomaticRestart,omitempty"`
	ServerName *string `json:"ServerName,omitempty"`
	PreferredDetectedRemoteAddressFamily *ModelNetSocketsAddressFamily `json:"PreferredDetectedRemoteAddressFamily,omitempty"`
	WanDdns *string `json:"WanDdns,omitempty"`
	UICulture *string `json:"UICulture,omitempty"`
	RemoteClientBitrateLimit *int32 `json:"RemoteClientBitrateLimit,omitempty"`
	LocalNetworkSubnets []string `json:"LocalNetworkSubnets,omitempty"`
	LocalNetworkAddresses []string `json:"LocalNetworkAddresses,omitempty"`
	EnableExternalContentInSuggestions *bool `json:"EnableExternalContentInSuggestions,omitempty"`
	RequireHttps *bool `json:"RequireHttps,omitempty"`
	IsBehindProxy *bool `json:"IsBehindProxy,omitempty"`
	RemoteIPFilter []string `json:"RemoteIPFilter,omitempty"`
	IsRemoteIPFilterBlacklist *bool `json:"IsRemoteIPFilterBlacklist,omitempty"`
	ImageExtractionTimeoutMs *int32 `json:"ImageExtractionTimeoutMs,omitempty"`
	PathSubstitutions []ModelPathSubstitution `json:"PathSubstitutions,omitempty"`
	UninstalledPlugins []string `json:"UninstalledPlugins,omitempty"`
	CollapseVideoFolders *bool `json:"CollapseVideoFolders,omitempty"`
	EnableOriginalTrackTitles *bool `json:"EnableOriginalTrackTitles,omitempty"`
	VacuumDatabaseOnStartup *bool `json:"VacuumDatabaseOnStartup,omitempty"`
	SimultaneousStreamLimit *int32 `json:"SimultaneousStreamLimit,omitempty"`
	DatabaseCacheSizeMB *int32 `json:"DatabaseCacheSizeMB,omitempty"`
	EnableSqLiteMmio *bool `json:"EnableSqLiteMmio,omitempty"`
	PlaylistsUpgradedToM3U *bool `json:"PlaylistsUpgradedToM3U,omitempty"`
	ImageExtractorUpgraded *bool `json:"ImageExtractorUpgraded,omitempty"`
	EnablePeopleLetterSubFolders *bool `json:"EnablePeopleLetterSubFolders,omitempty"`
	OptimizeDatabaseOnShutdown *bool `json:"OptimizeDatabaseOnShutdown,omitempty"`
	DatabaseAnalysisLimit *int32 `json:"DatabaseAnalysisLimit,omitempty"`
	DisableAsyncIO *bool `json:"DisableAsyncIO,omitempty"`
	MigratedToUserItemShares *bool `json:"MigratedToUserItemShares,omitempty"`
	MigratedLibraryOptionsToDb *bool `json:"MigratedLibraryOptionsToDb,omitempty"`
	AllowLegacyLocalNetworkPassword *bool `json:"AllowLegacyLocalNetworkPassword,omitempty"`
	EnableSavedMetadataForPeople *bool `json:"EnableSavedMetadataForPeople,omitempty"`
	ProxyHeaderMode *ModelProxyHeaderMode `json:"ProxyHeaderMode,omitempty"`
	EnableDebugLevelLogging *bool `json:"EnableDebugLevelLogging,omitempty"`
	RevertDebugLogging *string `json:"RevertDebugLogging,omitempty"`
	EnableAutoUpdate *bool `json:"EnableAutoUpdate,omitempty"`
	LogFileRetentionDays *int32 `json:"LogFileRetentionDays,omitempty"`
	RunAtStartup *bool `json:"RunAtStartup,omitempty"`
	IsStartupWizardCompleted *bool `json:"IsStartupWizardCompleted,omitempty"`
	CachePath *string `json:"CachePath,omitempty"`
}

// NewModelServerConfiguration instantiates a new ModelServerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelServerConfiguration() *ModelServerConfiguration {
	this := ModelServerConfiguration{}
	return &this
}

// NewModelServerConfigurationWithDefaults instantiates a new ModelServerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelServerConfigurationWithDefaults() *ModelServerConfiguration {
	this := ModelServerConfiguration{}
	return &this
}

// GetEnableUPnP returns the EnableUPnP field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableUPnP() bool {
	if o == nil || IsNil(o.EnableUPnP) {
		var ret bool
		return ret
	}
	return *o.EnableUPnP
}

// GetEnableUPnPOk returns a tuple with the EnableUPnP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableUPnPOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableUPnP) {
		return nil, false
	}
	return o.EnableUPnP, true
}

// HasEnableUPnP returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableUPnP() bool {
	if o != nil && !IsNil(o.EnableUPnP) {
		return true
	}

	return false
}

// SetEnableUPnP gets a reference to the given bool and assigns it to the EnableUPnP field.
func (o *ModelServerConfiguration) SetEnableUPnP(v bool) {
	o.EnableUPnP = &v
}

// GetPublicPort returns the PublicPort field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetPublicPort() int32 {
	if o == nil || IsNil(o.PublicPort) {
		var ret int32
		return ret
	}
	return *o.PublicPort
}

// GetPublicPortOk returns a tuple with the PublicPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetPublicPortOk() (*int32, bool) {
	if o == nil || IsNil(o.PublicPort) {
		return nil, false
	}
	return o.PublicPort, true
}

// HasPublicPort returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasPublicPort() bool {
	if o != nil && !IsNil(o.PublicPort) {
		return true
	}

	return false
}

// SetPublicPort gets a reference to the given int32 and assigns it to the PublicPort field.
func (o *ModelServerConfiguration) SetPublicPort(v int32) {
	o.PublicPort = &v
}

// GetPublicHttpsPort returns the PublicHttpsPort field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetPublicHttpsPort() int32 {
	if o == nil || IsNil(o.PublicHttpsPort) {
		var ret int32
		return ret
	}
	return *o.PublicHttpsPort
}

// GetPublicHttpsPortOk returns a tuple with the PublicHttpsPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetPublicHttpsPortOk() (*int32, bool) {
	if o == nil || IsNil(o.PublicHttpsPort) {
		return nil, false
	}
	return o.PublicHttpsPort, true
}

// HasPublicHttpsPort returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasPublicHttpsPort() bool {
	if o != nil && !IsNil(o.PublicHttpsPort) {
		return true
	}

	return false
}

// SetPublicHttpsPort gets a reference to the given int32 and assigns it to the PublicHttpsPort field.
func (o *ModelServerConfiguration) SetPublicHttpsPort(v int32) {
	o.PublicHttpsPort = &v
}

// GetHttpServerPortNumber returns the HttpServerPortNumber field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetHttpServerPortNumber() int32 {
	if o == nil || IsNil(o.HttpServerPortNumber) {
		var ret int32
		return ret
	}
	return *o.HttpServerPortNumber
}

// GetHttpServerPortNumberOk returns a tuple with the HttpServerPortNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetHttpServerPortNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.HttpServerPortNumber) {
		return nil, false
	}
	return o.HttpServerPortNumber, true
}

// HasHttpServerPortNumber returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasHttpServerPortNumber() bool {
	if o != nil && !IsNil(o.HttpServerPortNumber) {
		return true
	}

	return false
}

// SetHttpServerPortNumber gets a reference to the given int32 and assigns it to the HttpServerPortNumber field.
func (o *ModelServerConfiguration) SetHttpServerPortNumber(v int32) {
	o.HttpServerPortNumber = &v
}

// GetHttpsPortNumber returns the HttpsPortNumber field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetHttpsPortNumber() int32 {
	if o == nil || IsNil(o.HttpsPortNumber) {
		var ret int32
		return ret
	}
	return *o.HttpsPortNumber
}

// GetHttpsPortNumberOk returns a tuple with the HttpsPortNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetHttpsPortNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.HttpsPortNumber) {
		return nil, false
	}
	return o.HttpsPortNumber, true
}

// HasHttpsPortNumber returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasHttpsPortNumber() bool {
	if o != nil && !IsNil(o.HttpsPortNumber) {
		return true
	}

	return false
}

// SetHttpsPortNumber gets a reference to the given int32 and assigns it to the HttpsPortNumber field.
func (o *ModelServerConfiguration) SetHttpsPortNumber(v int32) {
	o.HttpsPortNumber = &v
}

// GetEnableHttps returns the EnableHttps field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableHttps() bool {
	if o == nil || IsNil(o.EnableHttps) {
		var ret bool
		return ret
	}
	return *o.EnableHttps
}

// GetEnableHttpsOk returns a tuple with the EnableHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableHttpsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableHttps) {
		return nil, false
	}
	return o.EnableHttps, true
}

// HasEnableHttps returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableHttps() bool {
	if o != nil && !IsNil(o.EnableHttps) {
		return true
	}

	return false
}

// SetEnableHttps gets a reference to the given bool and assigns it to the EnableHttps field.
func (o *ModelServerConfiguration) SetEnableHttps(v bool) {
	o.EnableHttps = &v
}

// GetCertificatePath returns the CertificatePath field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetCertificatePath() string {
	if o == nil || IsNil(o.CertificatePath) {
		var ret string
		return ret
	}
	return *o.CertificatePath
}

// GetCertificatePathOk returns a tuple with the CertificatePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetCertificatePathOk() (*string, bool) {
	if o == nil || IsNil(o.CertificatePath) {
		return nil, false
	}
	return o.CertificatePath, true
}

// HasCertificatePath returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasCertificatePath() bool {
	if o != nil && !IsNil(o.CertificatePath) {
		return true
	}

	return false
}

// SetCertificatePath gets a reference to the given string and assigns it to the CertificatePath field.
func (o *ModelServerConfiguration) SetCertificatePath(v string) {
	o.CertificatePath = &v
}

// GetCertificatePassword returns the CertificatePassword field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetCertificatePassword() string {
	if o == nil || IsNil(o.CertificatePassword) {
		var ret string
		return ret
	}
	return *o.CertificatePassword
}

// GetCertificatePasswordOk returns a tuple with the CertificatePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetCertificatePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.CertificatePassword) {
		return nil, false
	}
	return o.CertificatePassword, true
}

// HasCertificatePassword returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasCertificatePassword() bool {
	if o != nil && !IsNil(o.CertificatePassword) {
		return true
	}

	return false
}

// SetCertificatePassword gets a reference to the given string and assigns it to the CertificatePassword field.
func (o *ModelServerConfiguration) SetCertificatePassword(v string) {
	o.CertificatePassword = &v
}

// GetIsPortAuthorized returns the IsPortAuthorized field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetIsPortAuthorized() bool {
	if o == nil || IsNil(o.IsPortAuthorized) {
		var ret bool
		return ret
	}
	return *o.IsPortAuthorized
}

// GetIsPortAuthorizedOk returns a tuple with the IsPortAuthorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetIsPortAuthorizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPortAuthorized) {
		return nil, false
	}
	return o.IsPortAuthorized, true
}

// HasIsPortAuthorized returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasIsPortAuthorized() bool {
	if o != nil && !IsNil(o.IsPortAuthorized) {
		return true
	}

	return false
}

// SetIsPortAuthorized gets a reference to the given bool and assigns it to the IsPortAuthorized field.
func (o *ModelServerConfiguration) SetIsPortAuthorized(v bool) {
	o.IsPortAuthorized = &v
}

// GetAutoRunWebApp returns the AutoRunWebApp field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetAutoRunWebApp() bool {
	if o == nil || IsNil(o.AutoRunWebApp) {
		var ret bool
		return ret
	}
	return *o.AutoRunWebApp
}

// GetAutoRunWebAppOk returns a tuple with the AutoRunWebApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetAutoRunWebAppOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoRunWebApp) {
		return nil, false
	}
	return o.AutoRunWebApp, true
}

// HasAutoRunWebApp returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasAutoRunWebApp() bool {
	if o != nil && !IsNil(o.AutoRunWebApp) {
		return true
	}

	return false
}

// SetAutoRunWebApp gets a reference to the given bool and assigns it to the AutoRunWebApp field.
func (o *ModelServerConfiguration) SetAutoRunWebApp(v bool) {
	o.AutoRunWebApp = &v
}

// GetEnableRemoteAccess returns the EnableRemoteAccess field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableRemoteAccess() bool {
	if o == nil || IsNil(o.EnableRemoteAccess) {
		var ret bool
		return ret
	}
	return *o.EnableRemoteAccess
}

// GetEnableRemoteAccessOk returns a tuple with the EnableRemoteAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableRemoteAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableRemoteAccess) {
		return nil, false
	}
	return o.EnableRemoteAccess, true
}

// HasEnableRemoteAccess returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableRemoteAccess() bool {
	if o != nil && !IsNil(o.EnableRemoteAccess) {
		return true
	}

	return false
}

// SetEnableRemoteAccess gets a reference to the given bool and assigns it to the EnableRemoteAccess field.
func (o *ModelServerConfiguration) SetEnableRemoteAccess(v bool) {
	o.EnableRemoteAccess = &v
}

// GetLogAllQueryTimes returns the LogAllQueryTimes field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetLogAllQueryTimes() bool {
	if o == nil || IsNil(o.LogAllQueryTimes) {
		var ret bool
		return ret
	}
	return *o.LogAllQueryTimes
}

// GetLogAllQueryTimesOk returns a tuple with the LogAllQueryTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetLogAllQueryTimesOk() (*bool, bool) {
	if o == nil || IsNil(o.LogAllQueryTimes) {
		return nil, false
	}
	return o.LogAllQueryTimes, true
}

// HasLogAllQueryTimes returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasLogAllQueryTimes() bool {
	if o != nil && !IsNil(o.LogAllQueryTimes) {
		return true
	}

	return false
}

// SetLogAllQueryTimes gets a reference to the given bool and assigns it to the LogAllQueryTimes field.
func (o *ModelServerConfiguration) SetLogAllQueryTimes(v bool) {
	o.LogAllQueryTimes = &v
}

// GetEnableCaseSensitiveItemIds returns the EnableCaseSensitiveItemIds field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableCaseSensitiveItemIds() bool {
	if o == nil || IsNil(o.EnableCaseSensitiveItemIds) {
		var ret bool
		return ret
	}
	return *o.EnableCaseSensitiveItemIds
}

// GetEnableCaseSensitiveItemIdsOk returns a tuple with the EnableCaseSensitiveItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableCaseSensitiveItemIdsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableCaseSensitiveItemIds) {
		return nil, false
	}
	return o.EnableCaseSensitiveItemIds, true
}

// HasEnableCaseSensitiveItemIds returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableCaseSensitiveItemIds() bool {
	if o != nil && !IsNil(o.EnableCaseSensitiveItemIds) {
		return true
	}

	return false
}

// SetEnableCaseSensitiveItemIds gets a reference to the given bool and assigns it to the EnableCaseSensitiveItemIds field.
func (o *ModelServerConfiguration) SetEnableCaseSensitiveItemIds(v bool) {
	o.EnableCaseSensitiveItemIds = &v
}

// GetMetadataPath returns the MetadataPath field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetMetadataPath() string {
	if o == nil || IsNil(o.MetadataPath) {
		var ret string
		return ret
	}
	return *o.MetadataPath
}

// GetMetadataPathOk returns a tuple with the MetadataPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetMetadataPathOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataPath) {
		return nil, false
	}
	return o.MetadataPath, true
}

// HasMetadataPath returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasMetadataPath() bool {
	if o != nil && !IsNil(o.MetadataPath) {
		return true
	}

	return false
}

// SetMetadataPath gets a reference to the given string and assigns it to the MetadataPath field.
func (o *ModelServerConfiguration) SetMetadataPath(v string) {
	o.MetadataPath = &v
}

// GetMetadataNetworkPath returns the MetadataNetworkPath field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetMetadataNetworkPath() string {
	if o == nil || IsNil(o.MetadataNetworkPath) {
		var ret string
		return ret
	}
	return *o.MetadataNetworkPath
}

// GetMetadataNetworkPathOk returns a tuple with the MetadataNetworkPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetMetadataNetworkPathOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataNetworkPath) {
		return nil, false
	}
	return o.MetadataNetworkPath, true
}

// HasMetadataNetworkPath returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasMetadataNetworkPath() bool {
	if o != nil && !IsNil(o.MetadataNetworkPath) {
		return true
	}

	return false
}

// SetMetadataNetworkPath gets a reference to the given string and assigns it to the MetadataNetworkPath field.
func (o *ModelServerConfiguration) SetMetadataNetworkPath(v string) {
	o.MetadataNetworkPath = &v
}

// GetPreferredMetadataLanguage returns the PreferredMetadataLanguage field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetPreferredMetadataLanguage() string {
	if o == nil || IsNil(o.PreferredMetadataLanguage) {
		var ret string
		return ret
	}
	return *o.PreferredMetadataLanguage
}

// GetPreferredMetadataLanguageOk returns a tuple with the PreferredMetadataLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetPreferredMetadataLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredMetadataLanguage) {
		return nil, false
	}
	return o.PreferredMetadataLanguage, true
}

// HasPreferredMetadataLanguage returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasPreferredMetadataLanguage() bool {
	if o != nil && !IsNil(o.PreferredMetadataLanguage) {
		return true
	}

	return false
}

// SetPreferredMetadataLanguage gets a reference to the given string and assigns it to the PreferredMetadataLanguage field.
func (o *ModelServerConfiguration) SetPreferredMetadataLanguage(v string) {
	o.PreferredMetadataLanguage = &v
}

// GetMetadataCountryCode returns the MetadataCountryCode field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetMetadataCountryCode() string {
	if o == nil || IsNil(o.MetadataCountryCode) {
		var ret string
		return ret
	}
	return *o.MetadataCountryCode
}

// GetMetadataCountryCodeOk returns a tuple with the MetadataCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetMetadataCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataCountryCode) {
		return nil, false
	}
	return o.MetadataCountryCode, true
}

// HasMetadataCountryCode returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasMetadataCountryCode() bool {
	if o != nil && !IsNil(o.MetadataCountryCode) {
		return true
	}

	return false
}

// SetMetadataCountryCode gets a reference to the given string and assigns it to the MetadataCountryCode field.
func (o *ModelServerConfiguration) SetMetadataCountryCode(v string) {
	o.MetadataCountryCode = &v
}

// GetSortRemoveWords returns the SortRemoveWords field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetSortRemoveWords() []string {
	if o == nil || IsNil(o.SortRemoveWords) {
		var ret []string
		return ret
	}
	return o.SortRemoveWords
}

// GetSortRemoveWordsOk returns a tuple with the SortRemoveWords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetSortRemoveWordsOk() ([]string, bool) {
	if o == nil || IsNil(o.SortRemoveWords) {
		return nil, false
	}
	return o.SortRemoveWords, true
}

// HasSortRemoveWords returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasSortRemoveWords() bool {
	if o != nil && !IsNil(o.SortRemoveWords) {
		return true
	}

	return false
}

// SetSortRemoveWords gets a reference to the given []string and assigns it to the SortRemoveWords field.
func (o *ModelServerConfiguration) SetSortRemoveWords(v []string) {
	o.SortRemoveWords = v
}

// GetLibraryMonitorDelay returns the LibraryMonitorDelay field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetLibraryMonitorDelay() int32 {
	if o == nil || IsNil(o.LibraryMonitorDelay) {
		var ret int32
		return ret
	}
	return *o.LibraryMonitorDelay
}

// GetLibraryMonitorDelayOk returns a tuple with the LibraryMonitorDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetLibraryMonitorDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.LibraryMonitorDelay) {
		return nil, false
	}
	return o.LibraryMonitorDelay, true
}

// HasLibraryMonitorDelay returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasLibraryMonitorDelay() bool {
	if o != nil && !IsNil(o.LibraryMonitorDelay) {
		return true
	}

	return false
}

// SetLibraryMonitorDelay gets a reference to the given int32 and assigns it to the LibraryMonitorDelay field.
func (o *ModelServerConfiguration) SetLibraryMonitorDelay(v int32) {
	o.LibraryMonitorDelay = &v
}

// GetEnableDashboardResponseCaching returns the EnableDashboardResponseCaching field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableDashboardResponseCaching() bool {
	if o == nil || IsNil(o.EnableDashboardResponseCaching) {
		var ret bool
		return ret
	}
	return *o.EnableDashboardResponseCaching
}

// GetEnableDashboardResponseCachingOk returns a tuple with the EnableDashboardResponseCaching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableDashboardResponseCachingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDashboardResponseCaching) {
		return nil, false
	}
	return o.EnableDashboardResponseCaching, true
}

// HasEnableDashboardResponseCaching returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableDashboardResponseCaching() bool {
	if o != nil && !IsNil(o.EnableDashboardResponseCaching) {
		return true
	}

	return false
}

// SetEnableDashboardResponseCaching gets a reference to the given bool and assigns it to the EnableDashboardResponseCaching field.
func (o *ModelServerConfiguration) SetEnableDashboardResponseCaching(v bool) {
	o.EnableDashboardResponseCaching = &v
}

// GetDashboardSourcePath returns the DashboardSourcePath field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetDashboardSourcePath() string {
	if o == nil || IsNil(o.DashboardSourcePath) {
		var ret string
		return ret
	}
	return *o.DashboardSourcePath
}

// GetDashboardSourcePathOk returns a tuple with the DashboardSourcePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetDashboardSourcePathOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardSourcePath) {
		return nil, false
	}
	return o.DashboardSourcePath, true
}

// HasDashboardSourcePath returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasDashboardSourcePath() bool {
	if o != nil && !IsNil(o.DashboardSourcePath) {
		return true
	}

	return false
}

// SetDashboardSourcePath gets a reference to the given string and assigns it to the DashboardSourcePath field.
func (o *ModelServerConfiguration) SetDashboardSourcePath(v string) {
	o.DashboardSourcePath = &v
}

// GetImageSavingConvention returns the ImageSavingConvention field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetImageSavingConvention() ModelImageSavingConvention {
	if o == nil || IsNil(o.ImageSavingConvention) {
		var ret ModelImageSavingConvention
		return ret
	}
	return *o.ImageSavingConvention
}

// GetImageSavingConventionOk returns a tuple with the ImageSavingConvention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetImageSavingConventionOk() (*ModelImageSavingConvention, bool) {
	if o == nil || IsNil(o.ImageSavingConvention) {
		return nil, false
	}
	return o.ImageSavingConvention, true
}

// HasImageSavingConvention returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasImageSavingConvention() bool {
	if o != nil && !IsNil(o.ImageSavingConvention) {
		return true
	}

	return false
}

// SetImageSavingConvention gets a reference to the given ModelImageSavingConvention and assigns it to the ImageSavingConvention field.
func (o *ModelServerConfiguration) SetImageSavingConvention(v ModelImageSavingConvention) {
	o.ImageSavingConvention = &v
}

// GetEnableAutomaticRestart returns the EnableAutomaticRestart field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableAutomaticRestart() bool {
	if o == nil || IsNil(o.EnableAutomaticRestart) {
		var ret bool
		return ret
	}
	return *o.EnableAutomaticRestart
}

// GetEnableAutomaticRestartOk returns a tuple with the EnableAutomaticRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableAutomaticRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutomaticRestart) {
		return nil, false
	}
	return o.EnableAutomaticRestart, true
}

// HasEnableAutomaticRestart returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableAutomaticRestart() bool {
	if o != nil && !IsNil(o.EnableAutomaticRestart) {
		return true
	}

	return false
}

// SetEnableAutomaticRestart gets a reference to the given bool and assigns it to the EnableAutomaticRestart field.
func (o *ModelServerConfiguration) SetEnableAutomaticRestart(v bool) {
	o.EnableAutomaticRestart = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *ModelServerConfiguration) SetServerName(v string) {
	o.ServerName = &v
}

// GetPreferredDetectedRemoteAddressFamily returns the PreferredDetectedRemoteAddressFamily field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetPreferredDetectedRemoteAddressFamily() ModelNetSocketsAddressFamily {
	if o == nil || IsNil(o.PreferredDetectedRemoteAddressFamily) {
		var ret ModelNetSocketsAddressFamily
		return ret
	}
	return *o.PreferredDetectedRemoteAddressFamily
}

// GetPreferredDetectedRemoteAddressFamilyOk returns a tuple with the PreferredDetectedRemoteAddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetPreferredDetectedRemoteAddressFamilyOk() (*ModelNetSocketsAddressFamily, bool) {
	if o == nil || IsNil(o.PreferredDetectedRemoteAddressFamily) {
		return nil, false
	}
	return o.PreferredDetectedRemoteAddressFamily, true
}

// HasPreferredDetectedRemoteAddressFamily returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasPreferredDetectedRemoteAddressFamily() bool {
	if o != nil && !IsNil(o.PreferredDetectedRemoteAddressFamily) {
		return true
	}

	return false
}

// SetPreferredDetectedRemoteAddressFamily gets a reference to the given ModelNetSocketsAddressFamily and assigns it to the PreferredDetectedRemoteAddressFamily field.
func (o *ModelServerConfiguration) SetPreferredDetectedRemoteAddressFamily(v ModelNetSocketsAddressFamily) {
	o.PreferredDetectedRemoteAddressFamily = &v
}

// GetWanDdns returns the WanDdns field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetWanDdns() string {
	if o == nil || IsNil(o.WanDdns) {
		var ret string
		return ret
	}
	return *o.WanDdns
}

// GetWanDdnsOk returns a tuple with the WanDdns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetWanDdnsOk() (*string, bool) {
	if o == nil || IsNil(o.WanDdns) {
		return nil, false
	}
	return o.WanDdns, true
}

// HasWanDdns returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasWanDdns() bool {
	if o != nil && !IsNil(o.WanDdns) {
		return true
	}

	return false
}

// SetWanDdns gets a reference to the given string and assigns it to the WanDdns field.
func (o *ModelServerConfiguration) SetWanDdns(v string) {
	o.WanDdns = &v
}

// GetUICulture returns the UICulture field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetUICulture() string {
	if o == nil || IsNil(o.UICulture) {
		var ret string
		return ret
	}
	return *o.UICulture
}

// GetUICultureOk returns a tuple with the UICulture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetUICultureOk() (*string, bool) {
	if o == nil || IsNil(o.UICulture) {
		return nil, false
	}
	return o.UICulture, true
}

// HasUICulture returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasUICulture() bool {
	if o != nil && !IsNil(o.UICulture) {
		return true
	}

	return false
}

// SetUICulture gets a reference to the given string and assigns it to the UICulture field.
func (o *ModelServerConfiguration) SetUICulture(v string) {
	o.UICulture = &v
}

// GetRemoteClientBitrateLimit returns the RemoteClientBitrateLimit field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetRemoteClientBitrateLimit() int32 {
	if o == nil || IsNil(o.RemoteClientBitrateLimit) {
		var ret int32
		return ret
	}
	return *o.RemoteClientBitrateLimit
}

// GetRemoteClientBitrateLimitOk returns a tuple with the RemoteClientBitrateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetRemoteClientBitrateLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.RemoteClientBitrateLimit) {
		return nil, false
	}
	return o.RemoteClientBitrateLimit, true
}

// HasRemoteClientBitrateLimit returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasRemoteClientBitrateLimit() bool {
	if o != nil && !IsNil(o.RemoteClientBitrateLimit) {
		return true
	}

	return false
}

// SetRemoteClientBitrateLimit gets a reference to the given int32 and assigns it to the RemoteClientBitrateLimit field.
func (o *ModelServerConfiguration) SetRemoteClientBitrateLimit(v int32) {
	o.RemoteClientBitrateLimit = &v
}

// GetLocalNetworkSubnets returns the LocalNetworkSubnets field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetLocalNetworkSubnets() []string {
	if o == nil || IsNil(o.LocalNetworkSubnets) {
		var ret []string
		return ret
	}
	return o.LocalNetworkSubnets
}

// GetLocalNetworkSubnetsOk returns a tuple with the LocalNetworkSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetLocalNetworkSubnetsOk() ([]string, bool) {
	if o == nil || IsNil(o.LocalNetworkSubnets) {
		return nil, false
	}
	return o.LocalNetworkSubnets, true
}

// HasLocalNetworkSubnets returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasLocalNetworkSubnets() bool {
	if o != nil && !IsNil(o.LocalNetworkSubnets) {
		return true
	}

	return false
}

// SetLocalNetworkSubnets gets a reference to the given []string and assigns it to the LocalNetworkSubnets field.
func (o *ModelServerConfiguration) SetLocalNetworkSubnets(v []string) {
	o.LocalNetworkSubnets = v
}

// GetLocalNetworkAddresses returns the LocalNetworkAddresses field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetLocalNetworkAddresses() []string {
	if o == nil || IsNil(o.LocalNetworkAddresses) {
		var ret []string
		return ret
	}
	return o.LocalNetworkAddresses
}

// GetLocalNetworkAddressesOk returns a tuple with the LocalNetworkAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetLocalNetworkAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.LocalNetworkAddresses) {
		return nil, false
	}
	return o.LocalNetworkAddresses, true
}

// HasLocalNetworkAddresses returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasLocalNetworkAddresses() bool {
	if o != nil && !IsNil(o.LocalNetworkAddresses) {
		return true
	}

	return false
}

// SetLocalNetworkAddresses gets a reference to the given []string and assigns it to the LocalNetworkAddresses field.
func (o *ModelServerConfiguration) SetLocalNetworkAddresses(v []string) {
	o.LocalNetworkAddresses = v
}

// GetEnableExternalContentInSuggestions returns the EnableExternalContentInSuggestions field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableExternalContentInSuggestions() bool {
	if o == nil || IsNil(o.EnableExternalContentInSuggestions) {
		var ret bool
		return ret
	}
	return *o.EnableExternalContentInSuggestions
}

// GetEnableExternalContentInSuggestionsOk returns a tuple with the EnableExternalContentInSuggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableExternalContentInSuggestionsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableExternalContentInSuggestions) {
		return nil, false
	}
	return o.EnableExternalContentInSuggestions, true
}

// HasEnableExternalContentInSuggestions returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableExternalContentInSuggestions() bool {
	if o != nil && !IsNil(o.EnableExternalContentInSuggestions) {
		return true
	}

	return false
}

// SetEnableExternalContentInSuggestions gets a reference to the given bool and assigns it to the EnableExternalContentInSuggestions field.
func (o *ModelServerConfiguration) SetEnableExternalContentInSuggestions(v bool) {
	o.EnableExternalContentInSuggestions = &v
}

// GetRequireHttps returns the RequireHttps field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetRequireHttps() bool {
	if o == nil || IsNil(o.RequireHttps) {
		var ret bool
		return ret
	}
	return *o.RequireHttps
}

// GetRequireHttpsOk returns a tuple with the RequireHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetRequireHttpsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireHttps) {
		return nil, false
	}
	return o.RequireHttps, true
}

// HasRequireHttps returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasRequireHttps() bool {
	if o != nil && !IsNil(o.RequireHttps) {
		return true
	}

	return false
}

// SetRequireHttps gets a reference to the given bool and assigns it to the RequireHttps field.
func (o *ModelServerConfiguration) SetRequireHttps(v bool) {
	o.RequireHttps = &v
}

// GetIsBehindProxy returns the IsBehindProxy field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetIsBehindProxy() bool {
	if o == nil || IsNil(o.IsBehindProxy) {
		var ret bool
		return ret
	}
	return *o.IsBehindProxy
}

// GetIsBehindProxyOk returns a tuple with the IsBehindProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetIsBehindProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBehindProxy) {
		return nil, false
	}
	return o.IsBehindProxy, true
}

// HasIsBehindProxy returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasIsBehindProxy() bool {
	if o != nil && !IsNil(o.IsBehindProxy) {
		return true
	}

	return false
}

// SetIsBehindProxy gets a reference to the given bool and assigns it to the IsBehindProxy field.
func (o *ModelServerConfiguration) SetIsBehindProxy(v bool) {
	o.IsBehindProxy = &v
}

// GetRemoteIPFilter returns the RemoteIPFilter field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetRemoteIPFilter() []string {
	if o == nil || IsNil(o.RemoteIPFilter) {
		var ret []string
		return ret
	}
	return o.RemoteIPFilter
}

// GetRemoteIPFilterOk returns a tuple with the RemoteIPFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetRemoteIPFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoteIPFilter) {
		return nil, false
	}
	return o.RemoteIPFilter, true
}

// HasRemoteIPFilter returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasRemoteIPFilter() bool {
	if o != nil && !IsNil(o.RemoteIPFilter) {
		return true
	}

	return false
}

// SetRemoteIPFilter gets a reference to the given []string and assigns it to the RemoteIPFilter field.
func (o *ModelServerConfiguration) SetRemoteIPFilter(v []string) {
	o.RemoteIPFilter = v
}

// GetIsRemoteIPFilterBlacklist returns the IsRemoteIPFilterBlacklist field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetIsRemoteIPFilterBlacklist() bool {
	if o == nil || IsNil(o.IsRemoteIPFilterBlacklist) {
		var ret bool
		return ret
	}
	return *o.IsRemoteIPFilterBlacklist
}

// GetIsRemoteIPFilterBlacklistOk returns a tuple with the IsRemoteIPFilterBlacklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetIsRemoteIPFilterBlacklistOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemoteIPFilterBlacklist) {
		return nil, false
	}
	return o.IsRemoteIPFilterBlacklist, true
}

// HasIsRemoteIPFilterBlacklist returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasIsRemoteIPFilterBlacklist() bool {
	if o != nil && !IsNil(o.IsRemoteIPFilterBlacklist) {
		return true
	}

	return false
}

// SetIsRemoteIPFilterBlacklist gets a reference to the given bool and assigns it to the IsRemoteIPFilterBlacklist field.
func (o *ModelServerConfiguration) SetIsRemoteIPFilterBlacklist(v bool) {
	o.IsRemoteIPFilterBlacklist = &v
}

// GetImageExtractionTimeoutMs returns the ImageExtractionTimeoutMs field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetImageExtractionTimeoutMs() int32 {
	if o == nil || IsNil(o.ImageExtractionTimeoutMs) {
		var ret int32
		return ret
	}
	return *o.ImageExtractionTimeoutMs
}

// GetImageExtractionTimeoutMsOk returns a tuple with the ImageExtractionTimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetImageExtractionTimeoutMsOk() (*int32, bool) {
	if o == nil || IsNil(o.ImageExtractionTimeoutMs) {
		return nil, false
	}
	return o.ImageExtractionTimeoutMs, true
}

// HasImageExtractionTimeoutMs returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasImageExtractionTimeoutMs() bool {
	if o != nil && !IsNil(o.ImageExtractionTimeoutMs) {
		return true
	}

	return false
}

// SetImageExtractionTimeoutMs gets a reference to the given int32 and assigns it to the ImageExtractionTimeoutMs field.
func (o *ModelServerConfiguration) SetImageExtractionTimeoutMs(v int32) {
	o.ImageExtractionTimeoutMs = &v
}

// GetPathSubstitutions returns the PathSubstitutions field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetPathSubstitutions() []ModelPathSubstitution {
	if o == nil || IsNil(o.PathSubstitutions) {
		var ret []ModelPathSubstitution
		return ret
	}
	return o.PathSubstitutions
}

// GetPathSubstitutionsOk returns a tuple with the PathSubstitutions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetPathSubstitutionsOk() ([]ModelPathSubstitution, bool) {
	if o == nil || IsNil(o.PathSubstitutions) {
		return nil, false
	}
	return o.PathSubstitutions, true
}

// HasPathSubstitutions returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasPathSubstitutions() bool {
	if o != nil && !IsNil(o.PathSubstitutions) {
		return true
	}

	return false
}

// SetPathSubstitutions gets a reference to the given []ModelPathSubstitution and assigns it to the PathSubstitutions field.
func (o *ModelServerConfiguration) SetPathSubstitutions(v []ModelPathSubstitution) {
	o.PathSubstitutions = v
}

// GetUninstalledPlugins returns the UninstalledPlugins field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetUninstalledPlugins() []string {
	if o == nil || IsNil(o.UninstalledPlugins) {
		var ret []string
		return ret
	}
	return o.UninstalledPlugins
}

// GetUninstalledPluginsOk returns a tuple with the UninstalledPlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetUninstalledPluginsOk() ([]string, bool) {
	if o == nil || IsNil(o.UninstalledPlugins) {
		return nil, false
	}
	return o.UninstalledPlugins, true
}

// HasUninstalledPlugins returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasUninstalledPlugins() bool {
	if o != nil && !IsNil(o.UninstalledPlugins) {
		return true
	}

	return false
}

// SetUninstalledPlugins gets a reference to the given []string and assigns it to the UninstalledPlugins field.
func (o *ModelServerConfiguration) SetUninstalledPlugins(v []string) {
	o.UninstalledPlugins = v
}

// GetCollapseVideoFolders returns the CollapseVideoFolders field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetCollapseVideoFolders() bool {
	if o == nil || IsNil(o.CollapseVideoFolders) {
		var ret bool
		return ret
	}
	return *o.CollapseVideoFolders
}

// GetCollapseVideoFoldersOk returns a tuple with the CollapseVideoFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetCollapseVideoFoldersOk() (*bool, bool) {
	if o == nil || IsNil(o.CollapseVideoFolders) {
		return nil, false
	}
	return o.CollapseVideoFolders, true
}

// HasCollapseVideoFolders returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasCollapseVideoFolders() bool {
	if o != nil && !IsNil(o.CollapseVideoFolders) {
		return true
	}

	return false
}

// SetCollapseVideoFolders gets a reference to the given bool and assigns it to the CollapseVideoFolders field.
func (o *ModelServerConfiguration) SetCollapseVideoFolders(v bool) {
	o.CollapseVideoFolders = &v
}

// GetEnableOriginalTrackTitles returns the EnableOriginalTrackTitles field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableOriginalTrackTitles() bool {
	if o == nil || IsNil(o.EnableOriginalTrackTitles) {
		var ret bool
		return ret
	}
	return *o.EnableOriginalTrackTitles
}

// GetEnableOriginalTrackTitlesOk returns a tuple with the EnableOriginalTrackTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableOriginalTrackTitlesOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableOriginalTrackTitles) {
		return nil, false
	}
	return o.EnableOriginalTrackTitles, true
}

// HasEnableOriginalTrackTitles returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableOriginalTrackTitles() bool {
	if o != nil && !IsNil(o.EnableOriginalTrackTitles) {
		return true
	}

	return false
}

// SetEnableOriginalTrackTitles gets a reference to the given bool and assigns it to the EnableOriginalTrackTitles field.
func (o *ModelServerConfiguration) SetEnableOriginalTrackTitles(v bool) {
	o.EnableOriginalTrackTitles = &v
}

// GetVacuumDatabaseOnStartup returns the VacuumDatabaseOnStartup field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetVacuumDatabaseOnStartup() bool {
	if o == nil || IsNil(o.VacuumDatabaseOnStartup) {
		var ret bool
		return ret
	}
	return *o.VacuumDatabaseOnStartup
}

// GetVacuumDatabaseOnStartupOk returns a tuple with the VacuumDatabaseOnStartup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetVacuumDatabaseOnStartupOk() (*bool, bool) {
	if o == nil || IsNil(o.VacuumDatabaseOnStartup) {
		return nil, false
	}
	return o.VacuumDatabaseOnStartup, true
}

// HasVacuumDatabaseOnStartup returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasVacuumDatabaseOnStartup() bool {
	if o != nil && !IsNil(o.VacuumDatabaseOnStartup) {
		return true
	}

	return false
}

// SetVacuumDatabaseOnStartup gets a reference to the given bool and assigns it to the VacuumDatabaseOnStartup field.
func (o *ModelServerConfiguration) SetVacuumDatabaseOnStartup(v bool) {
	o.VacuumDatabaseOnStartup = &v
}

// GetSimultaneousStreamLimit returns the SimultaneousStreamLimit field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetSimultaneousStreamLimit() int32 {
	if o == nil || IsNil(o.SimultaneousStreamLimit) {
		var ret int32
		return ret
	}
	return *o.SimultaneousStreamLimit
}

// GetSimultaneousStreamLimitOk returns a tuple with the SimultaneousStreamLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetSimultaneousStreamLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.SimultaneousStreamLimit) {
		return nil, false
	}
	return o.SimultaneousStreamLimit, true
}

// HasSimultaneousStreamLimit returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasSimultaneousStreamLimit() bool {
	if o != nil && !IsNil(o.SimultaneousStreamLimit) {
		return true
	}

	return false
}

// SetSimultaneousStreamLimit gets a reference to the given int32 and assigns it to the SimultaneousStreamLimit field.
func (o *ModelServerConfiguration) SetSimultaneousStreamLimit(v int32) {
	o.SimultaneousStreamLimit = &v
}

// GetDatabaseCacheSizeMB returns the DatabaseCacheSizeMB field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetDatabaseCacheSizeMB() int32 {
	if o == nil || IsNil(o.DatabaseCacheSizeMB) {
		var ret int32
		return ret
	}
	return *o.DatabaseCacheSizeMB
}

// GetDatabaseCacheSizeMBOk returns a tuple with the DatabaseCacheSizeMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetDatabaseCacheSizeMBOk() (*int32, bool) {
	if o == nil || IsNil(o.DatabaseCacheSizeMB) {
		return nil, false
	}
	return o.DatabaseCacheSizeMB, true
}

// HasDatabaseCacheSizeMB returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasDatabaseCacheSizeMB() bool {
	if o != nil && !IsNil(o.DatabaseCacheSizeMB) {
		return true
	}

	return false
}

// SetDatabaseCacheSizeMB gets a reference to the given int32 and assigns it to the DatabaseCacheSizeMB field.
func (o *ModelServerConfiguration) SetDatabaseCacheSizeMB(v int32) {
	o.DatabaseCacheSizeMB = &v
}

// GetEnableSqLiteMmio returns the EnableSqLiteMmio field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableSqLiteMmio() bool {
	if o == nil || IsNil(o.EnableSqLiteMmio) {
		var ret bool
		return ret
	}
	return *o.EnableSqLiteMmio
}

// GetEnableSqLiteMmioOk returns a tuple with the EnableSqLiteMmio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableSqLiteMmioOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSqLiteMmio) {
		return nil, false
	}
	return o.EnableSqLiteMmio, true
}

// HasEnableSqLiteMmio returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableSqLiteMmio() bool {
	if o != nil && !IsNil(o.EnableSqLiteMmio) {
		return true
	}

	return false
}

// SetEnableSqLiteMmio gets a reference to the given bool and assigns it to the EnableSqLiteMmio field.
func (o *ModelServerConfiguration) SetEnableSqLiteMmio(v bool) {
	o.EnableSqLiteMmio = &v
}

// GetPlaylistsUpgradedToM3U returns the PlaylistsUpgradedToM3U field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetPlaylistsUpgradedToM3U() bool {
	if o == nil || IsNil(o.PlaylistsUpgradedToM3U) {
		var ret bool
		return ret
	}
	return *o.PlaylistsUpgradedToM3U
}

// GetPlaylistsUpgradedToM3UOk returns a tuple with the PlaylistsUpgradedToM3U field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetPlaylistsUpgradedToM3UOk() (*bool, bool) {
	if o == nil || IsNil(o.PlaylistsUpgradedToM3U) {
		return nil, false
	}
	return o.PlaylistsUpgradedToM3U, true
}

// HasPlaylistsUpgradedToM3U returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasPlaylistsUpgradedToM3U() bool {
	if o != nil && !IsNil(o.PlaylistsUpgradedToM3U) {
		return true
	}

	return false
}

// SetPlaylistsUpgradedToM3U gets a reference to the given bool and assigns it to the PlaylistsUpgradedToM3U field.
func (o *ModelServerConfiguration) SetPlaylistsUpgradedToM3U(v bool) {
	o.PlaylistsUpgradedToM3U = &v
}

// GetImageExtractorUpgraded returns the ImageExtractorUpgraded field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetImageExtractorUpgraded() bool {
	if o == nil || IsNil(o.ImageExtractorUpgraded) {
		var ret bool
		return ret
	}
	return *o.ImageExtractorUpgraded
}

// GetImageExtractorUpgradedOk returns a tuple with the ImageExtractorUpgraded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetImageExtractorUpgradedOk() (*bool, bool) {
	if o == nil || IsNil(o.ImageExtractorUpgraded) {
		return nil, false
	}
	return o.ImageExtractorUpgraded, true
}

// HasImageExtractorUpgraded returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasImageExtractorUpgraded() bool {
	if o != nil && !IsNil(o.ImageExtractorUpgraded) {
		return true
	}

	return false
}

// SetImageExtractorUpgraded gets a reference to the given bool and assigns it to the ImageExtractorUpgraded field.
func (o *ModelServerConfiguration) SetImageExtractorUpgraded(v bool) {
	o.ImageExtractorUpgraded = &v
}

// GetEnablePeopleLetterSubFolders returns the EnablePeopleLetterSubFolders field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnablePeopleLetterSubFolders() bool {
	if o == nil || IsNil(o.EnablePeopleLetterSubFolders) {
		var ret bool
		return ret
	}
	return *o.EnablePeopleLetterSubFolders
}

// GetEnablePeopleLetterSubFoldersOk returns a tuple with the EnablePeopleLetterSubFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnablePeopleLetterSubFoldersOk() (*bool, bool) {
	if o == nil || IsNil(o.EnablePeopleLetterSubFolders) {
		return nil, false
	}
	return o.EnablePeopleLetterSubFolders, true
}

// HasEnablePeopleLetterSubFolders returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnablePeopleLetterSubFolders() bool {
	if o != nil && !IsNil(o.EnablePeopleLetterSubFolders) {
		return true
	}

	return false
}

// SetEnablePeopleLetterSubFolders gets a reference to the given bool and assigns it to the EnablePeopleLetterSubFolders field.
func (o *ModelServerConfiguration) SetEnablePeopleLetterSubFolders(v bool) {
	o.EnablePeopleLetterSubFolders = &v
}

// GetOptimizeDatabaseOnShutdown returns the OptimizeDatabaseOnShutdown field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetOptimizeDatabaseOnShutdown() bool {
	if o == nil || IsNil(o.OptimizeDatabaseOnShutdown) {
		var ret bool
		return ret
	}
	return *o.OptimizeDatabaseOnShutdown
}

// GetOptimizeDatabaseOnShutdownOk returns a tuple with the OptimizeDatabaseOnShutdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetOptimizeDatabaseOnShutdownOk() (*bool, bool) {
	if o == nil || IsNil(o.OptimizeDatabaseOnShutdown) {
		return nil, false
	}
	return o.OptimizeDatabaseOnShutdown, true
}

// HasOptimizeDatabaseOnShutdown returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasOptimizeDatabaseOnShutdown() bool {
	if o != nil && !IsNil(o.OptimizeDatabaseOnShutdown) {
		return true
	}

	return false
}

// SetOptimizeDatabaseOnShutdown gets a reference to the given bool and assigns it to the OptimizeDatabaseOnShutdown field.
func (o *ModelServerConfiguration) SetOptimizeDatabaseOnShutdown(v bool) {
	o.OptimizeDatabaseOnShutdown = &v
}

// GetDatabaseAnalysisLimit returns the DatabaseAnalysisLimit field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetDatabaseAnalysisLimit() int32 {
	if o == nil || IsNil(o.DatabaseAnalysisLimit) {
		var ret int32
		return ret
	}
	return *o.DatabaseAnalysisLimit
}

// GetDatabaseAnalysisLimitOk returns a tuple with the DatabaseAnalysisLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetDatabaseAnalysisLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.DatabaseAnalysisLimit) {
		return nil, false
	}
	return o.DatabaseAnalysisLimit, true
}

// HasDatabaseAnalysisLimit returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasDatabaseAnalysisLimit() bool {
	if o != nil && !IsNil(o.DatabaseAnalysisLimit) {
		return true
	}

	return false
}

// SetDatabaseAnalysisLimit gets a reference to the given int32 and assigns it to the DatabaseAnalysisLimit field.
func (o *ModelServerConfiguration) SetDatabaseAnalysisLimit(v int32) {
	o.DatabaseAnalysisLimit = &v
}

// GetDisableAsyncIO returns the DisableAsyncIO field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetDisableAsyncIO() bool {
	if o == nil || IsNil(o.DisableAsyncIO) {
		var ret bool
		return ret
	}
	return *o.DisableAsyncIO
}

// GetDisableAsyncIOOk returns a tuple with the DisableAsyncIO field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetDisableAsyncIOOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAsyncIO) {
		return nil, false
	}
	return o.DisableAsyncIO, true
}

// HasDisableAsyncIO returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasDisableAsyncIO() bool {
	if o != nil && !IsNil(o.DisableAsyncIO) {
		return true
	}

	return false
}

// SetDisableAsyncIO gets a reference to the given bool and assigns it to the DisableAsyncIO field.
func (o *ModelServerConfiguration) SetDisableAsyncIO(v bool) {
	o.DisableAsyncIO = &v
}

// GetMigratedToUserItemShares returns the MigratedToUserItemShares field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetMigratedToUserItemShares() bool {
	if o == nil || IsNil(o.MigratedToUserItemShares) {
		var ret bool
		return ret
	}
	return *o.MigratedToUserItemShares
}

// GetMigratedToUserItemSharesOk returns a tuple with the MigratedToUserItemShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetMigratedToUserItemSharesOk() (*bool, bool) {
	if o == nil || IsNil(o.MigratedToUserItemShares) {
		return nil, false
	}
	return o.MigratedToUserItemShares, true
}

// HasMigratedToUserItemShares returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasMigratedToUserItemShares() bool {
	if o != nil && !IsNil(o.MigratedToUserItemShares) {
		return true
	}

	return false
}

// SetMigratedToUserItemShares gets a reference to the given bool and assigns it to the MigratedToUserItemShares field.
func (o *ModelServerConfiguration) SetMigratedToUserItemShares(v bool) {
	o.MigratedToUserItemShares = &v
}

// GetMigratedLibraryOptionsToDb returns the MigratedLibraryOptionsToDb field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetMigratedLibraryOptionsToDb() bool {
	if o == nil || IsNil(o.MigratedLibraryOptionsToDb) {
		var ret bool
		return ret
	}
	return *o.MigratedLibraryOptionsToDb
}

// GetMigratedLibraryOptionsToDbOk returns a tuple with the MigratedLibraryOptionsToDb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetMigratedLibraryOptionsToDbOk() (*bool, bool) {
	if o == nil || IsNil(o.MigratedLibraryOptionsToDb) {
		return nil, false
	}
	return o.MigratedLibraryOptionsToDb, true
}

// HasMigratedLibraryOptionsToDb returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasMigratedLibraryOptionsToDb() bool {
	if o != nil && !IsNil(o.MigratedLibraryOptionsToDb) {
		return true
	}

	return false
}

// SetMigratedLibraryOptionsToDb gets a reference to the given bool and assigns it to the MigratedLibraryOptionsToDb field.
func (o *ModelServerConfiguration) SetMigratedLibraryOptionsToDb(v bool) {
	o.MigratedLibraryOptionsToDb = &v
}

// GetAllowLegacyLocalNetworkPassword returns the AllowLegacyLocalNetworkPassword field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetAllowLegacyLocalNetworkPassword() bool {
	if o == nil || IsNil(o.AllowLegacyLocalNetworkPassword) {
		var ret bool
		return ret
	}
	return *o.AllowLegacyLocalNetworkPassword
}

// GetAllowLegacyLocalNetworkPasswordOk returns a tuple with the AllowLegacyLocalNetworkPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetAllowLegacyLocalNetworkPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowLegacyLocalNetworkPassword) {
		return nil, false
	}
	return o.AllowLegacyLocalNetworkPassword, true
}

// HasAllowLegacyLocalNetworkPassword returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasAllowLegacyLocalNetworkPassword() bool {
	if o != nil && !IsNil(o.AllowLegacyLocalNetworkPassword) {
		return true
	}

	return false
}

// SetAllowLegacyLocalNetworkPassword gets a reference to the given bool and assigns it to the AllowLegacyLocalNetworkPassword field.
func (o *ModelServerConfiguration) SetAllowLegacyLocalNetworkPassword(v bool) {
	o.AllowLegacyLocalNetworkPassword = &v
}

// GetEnableSavedMetadataForPeople returns the EnableSavedMetadataForPeople field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableSavedMetadataForPeople() bool {
	if o == nil || IsNil(o.EnableSavedMetadataForPeople) {
		var ret bool
		return ret
	}
	return *o.EnableSavedMetadataForPeople
}

// GetEnableSavedMetadataForPeopleOk returns a tuple with the EnableSavedMetadataForPeople field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableSavedMetadataForPeopleOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSavedMetadataForPeople) {
		return nil, false
	}
	return o.EnableSavedMetadataForPeople, true
}

// HasEnableSavedMetadataForPeople returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableSavedMetadataForPeople() bool {
	if o != nil && !IsNil(o.EnableSavedMetadataForPeople) {
		return true
	}

	return false
}

// SetEnableSavedMetadataForPeople gets a reference to the given bool and assigns it to the EnableSavedMetadataForPeople field.
func (o *ModelServerConfiguration) SetEnableSavedMetadataForPeople(v bool) {
	o.EnableSavedMetadataForPeople = &v
}

// GetProxyHeaderMode returns the ProxyHeaderMode field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetProxyHeaderMode() ModelProxyHeaderMode {
	if o == nil || IsNil(o.ProxyHeaderMode) {
		var ret ModelProxyHeaderMode
		return ret
	}
	return *o.ProxyHeaderMode
}

// GetProxyHeaderModeOk returns a tuple with the ProxyHeaderMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetProxyHeaderModeOk() (*ModelProxyHeaderMode, bool) {
	if o == nil || IsNil(o.ProxyHeaderMode) {
		return nil, false
	}
	return o.ProxyHeaderMode, true
}

// HasProxyHeaderMode returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasProxyHeaderMode() bool {
	if o != nil && !IsNil(o.ProxyHeaderMode) {
		return true
	}

	return false
}

// SetProxyHeaderMode gets a reference to the given ModelProxyHeaderMode and assigns it to the ProxyHeaderMode field.
func (o *ModelServerConfiguration) SetProxyHeaderMode(v ModelProxyHeaderMode) {
	o.ProxyHeaderMode = &v
}

// GetEnableDebugLevelLogging returns the EnableDebugLevelLogging field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableDebugLevelLogging() bool {
	if o == nil || IsNil(o.EnableDebugLevelLogging) {
		var ret bool
		return ret
	}
	return *o.EnableDebugLevelLogging
}

// GetEnableDebugLevelLoggingOk returns a tuple with the EnableDebugLevelLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableDebugLevelLoggingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDebugLevelLogging) {
		return nil, false
	}
	return o.EnableDebugLevelLogging, true
}

// HasEnableDebugLevelLogging returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableDebugLevelLogging() bool {
	if o != nil && !IsNil(o.EnableDebugLevelLogging) {
		return true
	}

	return false
}

// SetEnableDebugLevelLogging gets a reference to the given bool and assigns it to the EnableDebugLevelLogging field.
func (o *ModelServerConfiguration) SetEnableDebugLevelLogging(v bool) {
	o.EnableDebugLevelLogging = &v
}

// GetRevertDebugLogging returns the RevertDebugLogging field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetRevertDebugLogging() string {
	if o == nil || IsNil(o.RevertDebugLogging) {
		var ret string
		return ret
	}
	return *o.RevertDebugLogging
}

// GetRevertDebugLoggingOk returns a tuple with the RevertDebugLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetRevertDebugLoggingOk() (*string, bool) {
	if o == nil || IsNil(o.RevertDebugLogging) {
		return nil, false
	}
	return o.RevertDebugLogging, true
}

// HasRevertDebugLogging returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasRevertDebugLogging() bool {
	if o != nil && !IsNil(o.RevertDebugLogging) {
		return true
	}

	return false
}

// SetRevertDebugLogging gets a reference to the given string and assigns it to the RevertDebugLogging field.
func (o *ModelServerConfiguration) SetRevertDebugLogging(v string) {
	o.RevertDebugLogging = &v
}

// GetEnableAutoUpdate returns the EnableAutoUpdate field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetEnableAutoUpdate() bool {
	if o == nil || IsNil(o.EnableAutoUpdate) {
		var ret bool
		return ret
	}
	return *o.EnableAutoUpdate
}

// GetEnableAutoUpdateOk returns a tuple with the EnableAutoUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetEnableAutoUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutoUpdate) {
		return nil, false
	}
	return o.EnableAutoUpdate, true
}

// HasEnableAutoUpdate returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasEnableAutoUpdate() bool {
	if o != nil && !IsNil(o.EnableAutoUpdate) {
		return true
	}

	return false
}

// SetEnableAutoUpdate gets a reference to the given bool and assigns it to the EnableAutoUpdate field.
func (o *ModelServerConfiguration) SetEnableAutoUpdate(v bool) {
	o.EnableAutoUpdate = &v
}

// GetLogFileRetentionDays returns the LogFileRetentionDays field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetLogFileRetentionDays() int32 {
	if o == nil || IsNil(o.LogFileRetentionDays) {
		var ret int32
		return ret
	}
	return *o.LogFileRetentionDays
}

// GetLogFileRetentionDaysOk returns a tuple with the LogFileRetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetLogFileRetentionDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.LogFileRetentionDays) {
		return nil, false
	}
	return o.LogFileRetentionDays, true
}

// HasLogFileRetentionDays returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasLogFileRetentionDays() bool {
	if o != nil && !IsNil(o.LogFileRetentionDays) {
		return true
	}

	return false
}

// SetLogFileRetentionDays gets a reference to the given int32 and assigns it to the LogFileRetentionDays field.
func (o *ModelServerConfiguration) SetLogFileRetentionDays(v int32) {
	o.LogFileRetentionDays = &v
}

// GetRunAtStartup returns the RunAtStartup field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetRunAtStartup() bool {
	if o == nil || IsNil(o.RunAtStartup) {
		var ret bool
		return ret
	}
	return *o.RunAtStartup
}

// GetRunAtStartupOk returns a tuple with the RunAtStartup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetRunAtStartupOk() (*bool, bool) {
	if o == nil || IsNil(o.RunAtStartup) {
		return nil, false
	}
	return o.RunAtStartup, true
}

// HasRunAtStartup returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasRunAtStartup() bool {
	if o != nil && !IsNil(o.RunAtStartup) {
		return true
	}

	return false
}

// SetRunAtStartup gets a reference to the given bool and assigns it to the RunAtStartup field.
func (o *ModelServerConfiguration) SetRunAtStartup(v bool) {
	o.RunAtStartup = &v
}

// GetIsStartupWizardCompleted returns the IsStartupWizardCompleted field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetIsStartupWizardCompleted() bool {
	if o == nil || IsNil(o.IsStartupWizardCompleted) {
		var ret bool
		return ret
	}
	return *o.IsStartupWizardCompleted
}

// GetIsStartupWizardCompletedOk returns a tuple with the IsStartupWizardCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetIsStartupWizardCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsStartupWizardCompleted) {
		return nil, false
	}
	return o.IsStartupWizardCompleted, true
}

// HasIsStartupWizardCompleted returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasIsStartupWizardCompleted() bool {
	if o != nil && !IsNil(o.IsStartupWizardCompleted) {
		return true
	}

	return false
}

// SetIsStartupWizardCompleted gets a reference to the given bool and assigns it to the IsStartupWizardCompleted field.
func (o *ModelServerConfiguration) SetIsStartupWizardCompleted(v bool) {
	o.IsStartupWizardCompleted = &v
}

// GetCachePath returns the CachePath field value if set, zero value otherwise.
func (o *ModelServerConfiguration) GetCachePath() string {
	if o == nil || IsNil(o.CachePath) {
		var ret string
		return ret
	}
	return *o.CachePath
}

// GetCachePathOk returns a tuple with the CachePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelServerConfiguration) GetCachePathOk() (*string, bool) {
	if o == nil || IsNil(o.CachePath) {
		return nil, false
	}
	return o.CachePath, true
}

// HasCachePath returns a boolean if a field has been set.
func (o *ModelServerConfiguration) HasCachePath() bool {
	if o != nil && !IsNil(o.CachePath) {
		return true
	}

	return false
}

// SetCachePath gets a reference to the given string and assigns it to the CachePath field.
func (o *ModelServerConfiguration) SetCachePath(v string) {
	o.CachePath = &v
}

func (o ModelServerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelServerConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableUPnP) {
		toSerialize["EnableUPnP"] = o.EnableUPnP
	}
	if !IsNil(o.PublicPort) {
		toSerialize["PublicPort"] = o.PublicPort
	}
	if !IsNil(o.PublicHttpsPort) {
		toSerialize["PublicHttpsPort"] = o.PublicHttpsPort
	}
	if !IsNil(o.HttpServerPortNumber) {
		toSerialize["HttpServerPortNumber"] = o.HttpServerPortNumber
	}
	if !IsNil(o.HttpsPortNumber) {
		toSerialize["HttpsPortNumber"] = o.HttpsPortNumber
	}
	if !IsNil(o.EnableHttps) {
		toSerialize["EnableHttps"] = o.EnableHttps
	}
	if !IsNil(o.CertificatePath) {
		toSerialize["CertificatePath"] = o.CertificatePath
	}
	if !IsNil(o.CertificatePassword) {
		toSerialize["CertificatePassword"] = o.CertificatePassword
	}
	if !IsNil(o.IsPortAuthorized) {
		toSerialize["IsPortAuthorized"] = o.IsPortAuthorized
	}
	if !IsNil(o.AutoRunWebApp) {
		toSerialize["AutoRunWebApp"] = o.AutoRunWebApp
	}
	if !IsNil(o.EnableRemoteAccess) {
		toSerialize["EnableRemoteAccess"] = o.EnableRemoteAccess
	}
	if !IsNil(o.LogAllQueryTimes) {
		toSerialize["LogAllQueryTimes"] = o.LogAllQueryTimes
	}
	if !IsNil(o.EnableCaseSensitiveItemIds) {
		toSerialize["EnableCaseSensitiveItemIds"] = o.EnableCaseSensitiveItemIds
	}
	if !IsNil(o.MetadataPath) {
		toSerialize["MetadataPath"] = o.MetadataPath
	}
	if !IsNil(o.MetadataNetworkPath) {
		toSerialize["MetadataNetworkPath"] = o.MetadataNetworkPath
	}
	if !IsNil(o.PreferredMetadataLanguage) {
		toSerialize["PreferredMetadataLanguage"] = o.PreferredMetadataLanguage
	}
	if !IsNil(o.MetadataCountryCode) {
		toSerialize["MetadataCountryCode"] = o.MetadataCountryCode
	}
	if !IsNil(o.SortRemoveWords) {
		toSerialize["SortRemoveWords"] = o.SortRemoveWords
	}
	if !IsNil(o.LibraryMonitorDelay) {
		toSerialize["LibraryMonitorDelay"] = o.LibraryMonitorDelay
	}
	if !IsNil(o.EnableDashboardResponseCaching) {
		toSerialize["EnableDashboardResponseCaching"] = o.EnableDashboardResponseCaching
	}
	if !IsNil(o.DashboardSourcePath) {
		toSerialize["DashboardSourcePath"] = o.DashboardSourcePath
	}
	if !IsNil(o.ImageSavingConvention) {
		toSerialize["ImageSavingConvention"] = o.ImageSavingConvention
	}
	if !IsNil(o.EnableAutomaticRestart) {
		toSerialize["EnableAutomaticRestart"] = o.EnableAutomaticRestart
	}
	if !IsNil(o.ServerName) {
		toSerialize["ServerName"] = o.ServerName
	}
	if !IsNil(o.PreferredDetectedRemoteAddressFamily) {
		toSerialize["PreferredDetectedRemoteAddressFamily"] = o.PreferredDetectedRemoteAddressFamily
	}
	if !IsNil(o.WanDdns) {
		toSerialize["WanDdns"] = o.WanDdns
	}
	if !IsNil(o.UICulture) {
		toSerialize["UICulture"] = o.UICulture
	}
	if !IsNil(o.RemoteClientBitrateLimit) {
		toSerialize["RemoteClientBitrateLimit"] = o.RemoteClientBitrateLimit
	}
	if !IsNil(o.LocalNetworkSubnets) {
		toSerialize["LocalNetworkSubnets"] = o.LocalNetworkSubnets
	}
	if !IsNil(o.LocalNetworkAddresses) {
		toSerialize["LocalNetworkAddresses"] = o.LocalNetworkAddresses
	}
	if !IsNil(o.EnableExternalContentInSuggestions) {
		toSerialize["EnableExternalContentInSuggestions"] = o.EnableExternalContentInSuggestions
	}
	if !IsNil(o.RequireHttps) {
		toSerialize["RequireHttps"] = o.RequireHttps
	}
	if !IsNil(o.IsBehindProxy) {
		toSerialize["IsBehindProxy"] = o.IsBehindProxy
	}
	if !IsNil(o.RemoteIPFilter) {
		toSerialize["RemoteIPFilter"] = o.RemoteIPFilter
	}
	if !IsNil(o.IsRemoteIPFilterBlacklist) {
		toSerialize["IsRemoteIPFilterBlacklist"] = o.IsRemoteIPFilterBlacklist
	}
	if !IsNil(o.ImageExtractionTimeoutMs) {
		toSerialize["ImageExtractionTimeoutMs"] = o.ImageExtractionTimeoutMs
	}
	if !IsNil(o.PathSubstitutions) {
		toSerialize["PathSubstitutions"] = o.PathSubstitutions
	}
	if !IsNil(o.UninstalledPlugins) {
		toSerialize["UninstalledPlugins"] = o.UninstalledPlugins
	}
	if !IsNil(o.CollapseVideoFolders) {
		toSerialize["CollapseVideoFolders"] = o.CollapseVideoFolders
	}
	if !IsNil(o.EnableOriginalTrackTitles) {
		toSerialize["EnableOriginalTrackTitles"] = o.EnableOriginalTrackTitles
	}
	if !IsNil(o.VacuumDatabaseOnStartup) {
		toSerialize["VacuumDatabaseOnStartup"] = o.VacuumDatabaseOnStartup
	}
	if !IsNil(o.SimultaneousStreamLimit) {
		toSerialize["SimultaneousStreamLimit"] = o.SimultaneousStreamLimit
	}
	if !IsNil(o.DatabaseCacheSizeMB) {
		toSerialize["DatabaseCacheSizeMB"] = o.DatabaseCacheSizeMB
	}
	if !IsNil(o.EnableSqLiteMmio) {
		toSerialize["EnableSqLiteMmio"] = o.EnableSqLiteMmio
	}
	if !IsNil(o.PlaylistsUpgradedToM3U) {
		toSerialize["PlaylistsUpgradedToM3U"] = o.PlaylistsUpgradedToM3U
	}
	if !IsNil(o.ImageExtractorUpgraded) {
		toSerialize["ImageExtractorUpgraded"] = o.ImageExtractorUpgraded
	}
	if !IsNil(o.EnablePeopleLetterSubFolders) {
		toSerialize["EnablePeopleLetterSubFolders"] = o.EnablePeopleLetterSubFolders
	}
	if !IsNil(o.OptimizeDatabaseOnShutdown) {
		toSerialize["OptimizeDatabaseOnShutdown"] = o.OptimizeDatabaseOnShutdown
	}
	if !IsNil(o.DatabaseAnalysisLimit) {
		toSerialize["DatabaseAnalysisLimit"] = o.DatabaseAnalysisLimit
	}
	if !IsNil(o.DisableAsyncIO) {
		toSerialize["DisableAsyncIO"] = o.DisableAsyncIO
	}
	if !IsNil(o.MigratedToUserItemShares) {
		toSerialize["MigratedToUserItemShares"] = o.MigratedToUserItemShares
	}
	if !IsNil(o.MigratedLibraryOptionsToDb) {
		toSerialize["MigratedLibraryOptionsToDb"] = o.MigratedLibraryOptionsToDb
	}
	if !IsNil(o.AllowLegacyLocalNetworkPassword) {
		toSerialize["AllowLegacyLocalNetworkPassword"] = o.AllowLegacyLocalNetworkPassword
	}
	if !IsNil(o.EnableSavedMetadataForPeople) {
		toSerialize["EnableSavedMetadataForPeople"] = o.EnableSavedMetadataForPeople
	}
	if !IsNil(o.ProxyHeaderMode) {
		toSerialize["ProxyHeaderMode"] = o.ProxyHeaderMode
	}
	if !IsNil(o.EnableDebugLevelLogging) {
		toSerialize["EnableDebugLevelLogging"] = o.EnableDebugLevelLogging
	}
	if !IsNil(o.RevertDebugLogging) {
		toSerialize["RevertDebugLogging"] = o.RevertDebugLogging
	}
	if !IsNil(o.EnableAutoUpdate) {
		toSerialize["EnableAutoUpdate"] = o.EnableAutoUpdate
	}
	if !IsNil(o.LogFileRetentionDays) {
		toSerialize["LogFileRetentionDays"] = o.LogFileRetentionDays
	}
	if !IsNil(o.RunAtStartup) {
		toSerialize["RunAtStartup"] = o.RunAtStartup
	}
	if !IsNil(o.IsStartupWizardCompleted) {
		toSerialize["IsStartupWizardCompleted"] = o.IsStartupWizardCompleted
	}
	if !IsNil(o.CachePath) {
		toSerialize["CachePath"] = o.CachePath
	}
	return toSerialize, nil
}

type NullableModelServerConfiguration struct {
	value *ModelServerConfiguration
	isSet bool
}

func (v NullableModelServerConfiguration) Get() *ModelServerConfiguration {
	return v.value
}

func (v *NullableModelServerConfiguration) Set(val *ModelServerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableModelServerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableModelServerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelServerConfiguration(val *ModelServerConfiguration) *NullableModelServerConfiguration {
	return &NullableModelServerConfiguration{value: val, isSet: true}
}

func (v NullableModelServerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelServerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


