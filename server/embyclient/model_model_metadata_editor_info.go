/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelMetadataEditorInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelMetadataEditorInfo{}

// ModelMetadataEditorInfo struct for ModelMetadataEditorInfo
type ModelMetadataEditorInfo struct {
	ParentalRatingOptions []ModelParentalRating `json:"ParentalRatingOptions,omitempty"`
	Countries []ModelGlobalizationCountryInfo `json:"Countries,omitempty"`
	Cultures []ModelGlobalizationCultureDto `json:"Cultures,omitempty"`
	ExternalIdInfos []ModelExternalIdInfo `json:"ExternalIdInfos,omitempty"`
}

// NewModelMetadataEditorInfo instantiates a new ModelMetadataEditorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelMetadataEditorInfo() *ModelMetadataEditorInfo {
	this := ModelMetadataEditorInfo{}
	return &this
}

// NewModelMetadataEditorInfoWithDefaults instantiates a new ModelMetadataEditorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelMetadataEditorInfoWithDefaults() *ModelMetadataEditorInfo {
	this := ModelMetadataEditorInfo{}
	return &this
}

// GetParentalRatingOptions returns the ParentalRatingOptions field value if set, zero value otherwise.
func (o *ModelMetadataEditorInfo) GetParentalRatingOptions() []ModelParentalRating {
	if o == nil || IsNil(o.ParentalRatingOptions) {
		var ret []ModelParentalRating
		return ret
	}
	return o.ParentalRatingOptions
}

// GetParentalRatingOptionsOk returns a tuple with the ParentalRatingOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMetadataEditorInfo) GetParentalRatingOptionsOk() ([]ModelParentalRating, bool) {
	if o == nil || IsNil(o.ParentalRatingOptions) {
		return nil, false
	}
	return o.ParentalRatingOptions, true
}

// HasParentalRatingOptions returns a boolean if a field has been set.
func (o *ModelMetadataEditorInfo) HasParentalRatingOptions() bool {
	if o != nil && !IsNil(o.ParentalRatingOptions) {
		return true
	}

	return false
}

// SetParentalRatingOptions gets a reference to the given []ModelParentalRating and assigns it to the ParentalRatingOptions field.
func (o *ModelMetadataEditorInfo) SetParentalRatingOptions(v []ModelParentalRating) {
	o.ParentalRatingOptions = v
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *ModelMetadataEditorInfo) GetCountries() []ModelGlobalizationCountryInfo {
	if o == nil || IsNil(o.Countries) {
		var ret []ModelGlobalizationCountryInfo
		return ret
	}
	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMetadataEditorInfo) GetCountriesOk() ([]ModelGlobalizationCountryInfo, bool) {
	if o == nil || IsNil(o.Countries) {
		return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *ModelMetadataEditorInfo) HasCountries() bool {
	if o != nil && !IsNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given []ModelGlobalizationCountryInfo and assigns it to the Countries field.
func (o *ModelMetadataEditorInfo) SetCountries(v []ModelGlobalizationCountryInfo) {
	o.Countries = v
}

// GetCultures returns the Cultures field value if set, zero value otherwise.
func (o *ModelMetadataEditorInfo) GetCultures() []ModelGlobalizationCultureDto {
	if o == nil || IsNil(o.Cultures) {
		var ret []ModelGlobalizationCultureDto
		return ret
	}
	return o.Cultures
}

// GetCulturesOk returns a tuple with the Cultures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMetadataEditorInfo) GetCulturesOk() ([]ModelGlobalizationCultureDto, bool) {
	if o == nil || IsNil(o.Cultures) {
		return nil, false
	}
	return o.Cultures, true
}

// HasCultures returns a boolean if a field has been set.
func (o *ModelMetadataEditorInfo) HasCultures() bool {
	if o != nil && !IsNil(o.Cultures) {
		return true
	}

	return false
}

// SetCultures gets a reference to the given []ModelGlobalizationCultureDto and assigns it to the Cultures field.
func (o *ModelMetadataEditorInfo) SetCultures(v []ModelGlobalizationCultureDto) {
	o.Cultures = v
}

// GetExternalIdInfos returns the ExternalIdInfos field value if set, zero value otherwise.
func (o *ModelMetadataEditorInfo) GetExternalIdInfos() []ModelExternalIdInfo {
	if o == nil || IsNil(o.ExternalIdInfos) {
		var ret []ModelExternalIdInfo
		return ret
	}
	return o.ExternalIdInfos
}

// GetExternalIdInfosOk returns a tuple with the ExternalIdInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelMetadataEditorInfo) GetExternalIdInfosOk() ([]ModelExternalIdInfo, bool) {
	if o == nil || IsNil(o.ExternalIdInfos) {
		return nil, false
	}
	return o.ExternalIdInfos, true
}

// HasExternalIdInfos returns a boolean if a field has been set.
func (o *ModelMetadataEditorInfo) HasExternalIdInfos() bool {
	if o != nil && !IsNil(o.ExternalIdInfos) {
		return true
	}

	return false
}

// SetExternalIdInfos gets a reference to the given []ModelExternalIdInfo and assigns it to the ExternalIdInfos field.
func (o *ModelMetadataEditorInfo) SetExternalIdInfos(v []ModelExternalIdInfo) {
	o.ExternalIdInfos = v
}

func (o ModelMetadataEditorInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelMetadataEditorInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentalRatingOptions) {
		toSerialize["ParentalRatingOptions"] = o.ParentalRatingOptions
	}
	if !IsNil(o.Countries) {
		toSerialize["Countries"] = o.Countries
	}
	if !IsNil(o.Cultures) {
		toSerialize["Cultures"] = o.Cultures
	}
	if !IsNil(o.ExternalIdInfos) {
		toSerialize["ExternalIdInfos"] = o.ExternalIdInfos
	}
	return toSerialize, nil
}

type NullableModelMetadataEditorInfo struct {
	value *ModelMetadataEditorInfo
	isSet bool
}

func (v NullableModelMetadataEditorInfo) Get() *ModelMetadataEditorInfo {
	return v.value
}

func (v *NullableModelMetadataEditorInfo) Set(val *ModelMetadataEditorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelMetadataEditorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelMetadataEditorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelMetadataEditorInfo(val *ModelMetadataEditorInfo) *NullableModelMetadataEditorInfo {
	return &NullableModelMetadataEditorInfo{value: val, isSet: true}
}

func (v NullableModelMetadataEditorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelMetadataEditorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


