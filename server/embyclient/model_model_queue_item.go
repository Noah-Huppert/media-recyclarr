/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelQueueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelQueueItem{}

// ModelQueueItem struct for ModelQueueItem
type ModelQueueItem struct {
	Id *int64 `json:"Id,omitempty"`
	PlaylistItemId *string `json:"PlaylistItemId,omitempty"`
}

// NewModelQueueItem instantiates a new ModelQueueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelQueueItem() *ModelQueueItem {
	this := ModelQueueItem{}
	return &this
}

// NewModelQueueItemWithDefaults instantiates a new ModelQueueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelQueueItemWithDefaults() *ModelQueueItem {
	this := ModelQueueItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelQueueItem) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelQueueItem) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelQueueItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ModelQueueItem) SetId(v int64) {
	o.Id = &v
}

// GetPlaylistItemId returns the PlaylistItemId field value if set, zero value otherwise.
func (o *ModelQueueItem) GetPlaylistItemId() string {
	if o == nil || IsNil(o.PlaylistItemId) {
		var ret string
		return ret
	}
	return *o.PlaylistItemId
}

// GetPlaylistItemIdOk returns a tuple with the PlaylistItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelQueueItem) GetPlaylistItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlaylistItemId) {
		return nil, false
	}
	return o.PlaylistItemId, true
}

// HasPlaylistItemId returns a boolean if a field has been set.
func (o *ModelQueueItem) HasPlaylistItemId() bool {
	if o != nil && !IsNil(o.PlaylistItemId) {
		return true
	}

	return false
}

// SetPlaylistItemId gets a reference to the given string and assigns it to the PlaylistItemId field.
func (o *ModelQueueItem) SetPlaylistItemId(v string) {
	o.PlaylistItemId = &v
}

func (o ModelQueueItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelQueueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.PlaylistItemId) {
		toSerialize["PlaylistItemId"] = o.PlaylistItemId
	}
	return toSerialize, nil
}

type NullableModelQueueItem struct {
	value *ModelQueueItem
	isSet bool
}

func (v NullableModelQueueItem) Get() *ModelQueueItem {
	return v.value
}

func (v *NullableModelQueueItem) Set(val *ModelQueueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableModelQueueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableModelQueueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelQueueItem(val *ModelQueueItem) *NullableModelQueueItem {
	return &NullableModelQueueItem{value: val, isSet: true}
}

func (v NullableModelQueueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelQueueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


