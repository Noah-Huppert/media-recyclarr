/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelPlaystateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelPlaystateRequest{}

// ModelPlaystateRequest struct for ModelPlaystateRequest
type ModelPlaystateRequest struct {
	Command *ModelPlaystateCommand `json:"Command,omitempty"`
	SeekPositionTicks NullableInt64 `json:"SeekPositionTicks,omitempty"`
	ControllingUserId *string `json:"ControllingUserId,omitempty"`
}

// NewModelPlaystateRequest instantiates a new ModelPlaystateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelPlaystateRequest() *ModelPlaystateRequest {
	this := ModelPlaystateRequest{}
	return &this
}

// NewModelPlaystateRequestWithDefaults instantiates a new ModelPlaystateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelPlaystateRequestWithDefaults() *ModelPlaystateRequest {
	this := ModelPlaystateRequest{}
	return &this
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *ModelPlaystateRequest) GetCommand() ModelPlaystateCommand {
	if o == nil || IsNil(o.Command) {
		var ret ModelPlaystateCommand
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaystateRequest) GetCommandOk() (*ModelPlaystateCommand, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *ModelPlaystateRequest) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given ModelPlaystateCommand and assigns it to the Command field.
func (o *ModelPlaystateRequest) SetCommand(v ModelPlaystateCommand) {
	o.Command = &v
}

// GetSeekPositionTicks returns the SeekPositionTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelPlaystateRequest) GetSeekPositionTicks() int64 {
	if o == nil || IsNil(o.SeekPositionTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.SeekPositionTicks.Get()
}

// GetSeekPositionTicksOk returns a tuple with the SeekPositionTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelPlaystateRequest) GetSeekPositionTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeekPositionTicks.Get(), o.SeekPositionTicks.IsSet()
}

// HasSeekPositionTicks returns a boolean if a field has been set.
func (o *ModelPlaystateRequest) HasSeekPositionTicks() bool {
	if o != nil && o.SeekPositionTicks.IsSet() {
		return true
	}

	return false
}

// SetSeekPositionTicks gets a reference to the given NullableInt64 and assigns it to the SeekPositionTicks field.
func (o *ModelPlaystateRequest) SetSeekPositionTicks(v int64) {
	o.SeekPositionTicks.Set(&v)
}
// SetSeekPositionTicksNil sets the value for SeekPositionTicks to be an explicit nil
func (o *ModelPlaystateRequest) SetSeekPositionTicksNil() {
	o.SeekPositionTicks.Set(nil)
}

// UnsetSeekPositionTicks ensures that no value is present for SeekPositionTicks, not even an explicit nil
func (o *ModelPlaystateRequest) UnsetSeekPositionTicks() {
	o.SeekPositionTicks.Unset()
}

// GetControllingUserId returns the ControllingUserId field value if set, zero value otherwise.
func (o *ModelPlaystateRequest) GetControllingUserId() string {
	if o == nil || IsNil(o.ControllingUserId) {
		var ret string
		return ret
	}
	return *o.ControllingUserId
}

// GetControllingUserIdOk returns a tuple with the ControllingUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaystateRequest) GetControllingUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ControllingUserId) {
		return nil, false
	}
	return o.ControllingUserId, true
}

// HasControllingUserId returns a boolean if a field has been set.
func (o *ModelPlaystateRequest) HasControllingUserId() bool {
	if o != nil && !IsNil(o.ControllingUserId) {
		return true
	}

	return false
}

// SetControllingUserId gets a reference to the given string and assigns it to the ControllingUserId field.
func (o *ModelPlaystateRequest) SetControllingUserId(v string) {
	o.ControllingUserId = &v
}

func (o ModelPlaystateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelPlaystateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Command) {
		toSerialize["Command"] = o.Command
	}
	if o.SeekPositionTicks.IsSet() {
		toSerialize["SeekPositionTicks"] = o.SeekPositionTicks.Get()
	}
	if !IsNil(o.ControllingUserId) {
		toSerialize["ControllingUserId"] = o.ControllingUserId
	}
	return toSerialize, nil
}

type NullableModelPlaystateRequest struct {
	value *ModelPlaystateRequest
	isSet bool
}

func (v NullableModelPlaystateRequest) Get() *ModelPlaystateRequest {
	return v.value
}

func (v *NullableModelPlaystateRequest) Set(val *ModelPlaystateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelPlaystateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelPlaystateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelPlaystateRequest(val *ModelPlaystateRequest) *NullableModelPlaystateRequest {
	return &NullableModelPlaystateRequest{value: val, isSet: true}
}

func (v NullableModelPlaystateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelPlaystateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


