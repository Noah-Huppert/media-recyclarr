/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelUITabPageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelUITabPageInfo{}

// ModelUITabPageInfo struct for ModelUITabPageInfo
type ModelUITabPageInfo struct {
	PageId *string `json:"PageId,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	PluginId *string `json:"PluginId,omitempty"`
	Href *string `json:"Href,omitempty"`
	NavKey *string `json:"NavKey,omitempty"`
	Index *int32 `json:"Index,omitempty"`
}

// NewModelUITabPageInfo instantiates a new ModelUITabPageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelUITabPageInfo() *ModelUITabPageInfo {
	this := ModelUITabPageInfo{}
	return &this
}

// NewModelUITabPageInfoWithDefaults instantiates a new ModelUITabPageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelUITabPageInfoWithDefaults() *ModelUITabPageInfo {
	this := ModelUITabPageInfo{}
	return &this
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *ModelUITabPageInfo) GetPageId() string {
	if o == nil || IsNil(o.PageId) {
		var ret string
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUITabPageInfo) GetPageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PageId) {
		return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *ModelUITabPageInfo) HasPageId() bool {
	if o != nil && !IsNil(o.PageId) {
		return true
	}

	return false
}

// SetPageId gets a reference to the given string and assigns it to the PageId field.
func (o *ModelUITabPageInfo) SetPageId(v string) {
	o.PageId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelUITabPageInfo) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUITabPageInfo) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelUITabPageInfo) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelUITabPageInfo) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetPluginId returns the PluginId field value if set, zero value otherwise.
func (o *ModelUITabPageInfo) GetPluginId() string {
	if o == nil || IsNil(o.PluginId) {
		var ret string
		return ret
	}
	return *o.PluginId
}

// GetPluginIdOk returns a tuple with the PluginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUITabPageInfo) GetPluginIdOk() (*string, bool) {
	if o == nil || IsNil(o.PluginId) {
		return nil, false
	}
	return o.PluginId, true
}

// HasPluginId returns a boolean if a field has been set.
func (o *ModelUITabPageInfo) HasPluginId() bool {
	if o != nil && !IsNil(o.PluginId) {
		return true
	}

	return false
}

// SetPluginId gets a reference to the given string and assigns it to the PluginId field.
func (o *ModelUITabPageInfo) SetPluginId(v string) {
	o.PluginId = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ModelUITabPageInfo) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUITabPageInfo) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ModelUITabPageInfo) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ModelUITabPageInfo) SetHref(v string) {
	o.Href = &v
}

// GetNavKey returns the NavKey field value if set, zero value otherwise.
func (o *ModelUITabPageInfo) GetNavKey() string {
	if o == nil || IsNil(o.NavKey) {
		var ret string
		return ret
	}
	return *o.NavKey
}

// GetNavKeyOk returns a tuple with the NavKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUITabPageInfo) GetNavKeyOk() (*string, bool) {
	if o == nil || IsNil(o.NavKey) {
		return nil, false
	}
	return o.NavKey, true
}

// HasNavKey returns a boolean if a field has been set.
func (o *ModelUITabPageInfo) HasNavKey() bool {
	if o != nil && !IsNil(o.NavKey) {
		return true
	}

	return false
}

// SetNavKey gets a reference to the given string and assigns it to the NavKey field.
func (o *ModelUITabPageInfo) SetNavKey(v string) {
	o.NavKey = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ModelUITabPageInfo) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUITabPageInfo) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ModelUITabPageInfo) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *ModelUITabPageInfo) SetIndex(v int32) {
	o.Index = &v
}

func (o ModelUITabPageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelUITabPageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageId) {
		toSerialize["PageId"] = o.PageId
	}
	if !IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !IsNil(o.PluginId) {
		toSerialize["PluginId"] = o.PluginId
	}
	if !IsNil(o.Href) {
		toSerialize["Href"] = o.Href
	}
	if !IsNil(o.NavKey) {
		toSerialize["NavKey"] = o.NavKey
	}
	if !IsNil(o.Index) {
		toSerialize["Index"] = o.Index
	}
	return toSerialize, nil
}

type NullableModelUITabPageInfo struct {
	value *ModelUITabPageInfo
	isSet bool
}

func (v NullableModelUITabPageInfo) Get() *ModelUITabPageInfo {
	return v.value
}

func (v *NullableModelUITabPageInfo) Set(val *ModelUITabPageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelUITabPageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelUITabPageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelUITabPageInfo(val *ModelUITabPageInfo) *NullableModelUITabPageInfo {
	return &NullableModelUITabPageInfo{value: val, isSet: true}
}

func (v NullableModelUITabPageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelUITabPageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


