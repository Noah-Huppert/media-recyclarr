/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelBaseItemDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelBaseItemDto{}

// ModelBaseItemDto struct for ModelBaseItemDto
type ModelBaseItemDto struct {
	Name *string `json:"Name,omitempty"`
	OriginalTitle *string `json:"OriginalTitle,omitempty"`
	ServerId *string `json:"ServerId,omitempty"`
	Id *string `json:"Id,omitempty"`
	Guid *string `json:"Guid,omitempty"`
	Etag *string `json:"Etag,omitempty"`
	Prefix *string `json:"Prefix,omitempty"`
	PlaylistItemId *string `json:"PlaylistItemId,omitempty"`
	DateCreated NullableTime `json:"DateCreated,omitempty"`
	ExtraType *string `json:"ExtraType,omitempty"`
	SortIndexNumber NullableInt32 `json:"SortIndexNumber,omitempty"`
	SortParentIndexNumber NullableInt32 `json:"SortParentIndexNumber,omitempty"`
	CanDelete NullableBool `json:"CanDelete,omitempty"`
	CanDownload NullableBool `json:"CanDownload,omitempty"`
	SupportsResume NullableBool `json:"SupportsResume,omitempty"`
	PresentationUniqueKey *string `json:"PresentationUniqueKey,omitempty"`
	PreferredMetadataLanguage *string `json:"PreferredMetadataLanguage,omitempty"`
	PreferredMetadataCountryCode *string `json:"PreferredMetadataCountryCode,omitempty"`
	SupportsSync NullableBool `json:"SupportsSync,omitempty"`
	SyncStatus *ModelSyncJobItemStatus `json:"SyncStatus,omitempty"`
	CanManageAccess NullableBool `json:"CanManageAccess,omitempty"`
	CanMakePrivate NullableBool `json:"CanMakePrivate,omitempty"`
	CanMakePublic NullableBool `json:"CanMakePublic,omitempty"`
	Container *string `json:"Container,omitempty"`
	SortName *string `json:"SortName,omitempty"`
	ForcedSortName *string `json:"ForcedSortName,omitempty"`
	Video3DFormat *ModelVideo3DFormat `json:"Video3DFormat,omitempty"`
	PremiereDate NullableTime `json:"PremiereDate,omitempty"`
	ExternalUrls []ModelExternalUrl `json:"ExternalUrls,omitempty"`
	MediaSources []ModelMediaSourceInfo `json:"MediaSources,omitempty"`
	CriticRating NullableFloat32 `json:"CriticRating,omitempty"`
	GameSystemId NullableInt64 `json:"GameSystemId,omitempty"`
	AsSeries NullableBool `json:"AsSeries,omitempty"`
	GameSystem *string `json:"GameSystem,omitempty"`
	ProductionLocations []string `json:"ProductionLocations,omitempty"`
	Path *string `json:"Path,omitempty"`
	OfficialRating *string `json:"OfficialRating,omitempty"`
	CustomRating *string `json:"CustomRating,omitempty"`
	ChannelId *string `json:"ChannelId,omitempty"`
	ChannelName *string `json:"ChannelName,omitempty"`
	Overview *string `json:"Overview,omitempty"`
	Taglines []string `json:"Taglines,omitempty"`
	Genres []string `json:"Genres,omitempty"`
	CommunityRating NullableFloat32 `json:"CommunityRating,omitempty"`
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	Size NullableInt64 `json:"Size,omitempty"`
	FileName *string `json:"FileName,omitempty"`
	Bitrate NullableInt32 `json:"Bitrate,omitempty"`
	ProductionYear NullableInt32 `json:"ProductionYear,omitempty"`
	Number *string `json:"Number,omitempty"`
	ChannelNumber *string `json:"ChannelNumber,omitempty"`
	IndexNumber NullableInt32 `json:"IndexNumber,omitempty"`
	IndexNumberEnd NullableInt32 `json:"IndexNumberEnd,omitempty"`
	ParentIndexNumber NullableInt32 `json:"ParentIndexNumber,omitempty"`
	RemoteTrailers []ModelMediaUrl `json:"RemoteTrailers,omitempty"`
	ProviderIds *map[string]string `json:"ProviderIds,omitempty"`
	IsFolder NullableBool `json:"IsFolder,omitempty"`
	ParentId *string `json:"ParentId,omitempty"`
	Type *string `json:"Type,omitempty"`
	People []ModelBaseItemPerson `json:"People,omitempty"`
	Studios []ModelNameLongIdPair `json:"Studios,omitempty"`
	GenreItems []ModelNameLongIdPair `json:"GenreItems,omitempty"`
	TagItems []ModelNameLongIdPair `json:"TagItems,omitempty"`
	ParentLogoItemId *string `json:"ParentLogoItemId,omitempty"`
	ParentBackdropItemId *string `json:"ParentBackdropItemId,omitempty"`
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	LocalTrailerCount NullableInt32 `json:"LocalTrailerCount,omitempty"`
	UserData *ModelUserItemDataDto `json:"UserData,omitempty"`
	RecursiveItemCount NullableInt32 `json:"RecursiveItemCount,omitempty"`
	ChildCount NullableInt32 `json:"ChildCount,omitempty"`
	SeriesName *string `json:"SeriesName,omitempty"`
	SeriesId *string `json:"SeriesId,omitempty"`
	SeasonId *string `json:"SeasonId,omitempty"`
	SpecialFeatureCount NullableInt32 `json:"SpecialFeatureCount,omitempty"`
	DisplayPreferencesId *string `json:"DisplayPreferencesId,omitempty"`
	Status *string `json:"Status,omitempty"`
	AirDays []ModelDayOfWeek `json:"AirDays,omitempty"`
	Tags []string `json:"Tags,omitempty"`
	PrimaryImageAspectRatio NullableFloat64 `json:"PrimaryImageAspectRatio,omitempty"`
	Artists []string `json:"Artists,omitempty"`
	ArtistItems []ModelNameIdPair `json:"ArtistItems,omitempty"`
	Composers []ModelNameIdPair `json:"Composers,omitempty"`
	Album *string `json:"Album,omitempty"`
	CollectionType *string `json:"CollectionType,omitempty"`
	DisplayOrder *string `json:"DisplayOrder,omitempty"`
	AlbumId *string `json:"AlbumId,omitempty"`
	AlbumPrimaryImageTag *string `json:"AlbumPrimaryImageTag,omitempty"`
	SeriesPrimaryImageTag *string `json:"SeriesPrimaryImageTag,omitempty"`
	AlbumArtist *string `json:"AlbumArtist,omitempty"`
	AlbumArtists []ModelNameIdPair `json:"AlbumArtists,omitempty"`
	SeasonName *string `json:"SeasonName,omitempty"`
	MediaStreams []ModelMediaStream `json:"MediaStreams,omitempty"`
	PartCount NullableInt32 `json:"PartCount,omitempty"`
	ImageTags *map[string]string `json:"ImageTags,omitempty"`
	BackdropImageTags []string `json:"BackdropImageTags,omitempty"`
	ParentLogoImageTag *string `json:"ParentLogoImageTag,omitempty"`
	SeriesStudio *string `json:"SeriesStudio,omitempty"`
	PrimaryImageItemId *string `json:"PrimaryImageItemId,omitempty"`
	PrimaryImageTag *string `json:"PrimaryImageTag,omitempty"`
	ParentThumbItemId *string `json:"ParentThumbItemId,omitempty"`
	ParentThumbImageTag *string `json:"ParentThumbImageTag,omitempty"`
	Chapters []ModelChapterInfo `json:"Chapters,omitempty"`
	LocationType *ModelLocationType `json:"LocationType,omitempty"`
	MediaType *string `json:"MediaType,omitempty"`
	EndDate NullableTime `json:"EndDate,omitempty"`
	LockedFields []ModelMetadataFields `json:"LockedFields,omitempty"`
	LockData NullableBool `json:"LockData,omitempty"`
	Width NullableInt32 `json:"Width,omitempty"`
	Height NullableInt32 `json:"Height,omitempty"`
	CameraMake *string `json:"CameraMake,omitempty"`
	CameraModel *string `json:"CameraModel,omitempty"`
	Software *string `json:"Software,omitempty"`
	ExposureTime NullableFloat64 `json:"ExposureTime,omitempty"`
	FocalLength NullableFloat64 `json:"FocalLength,omitempty"`
	ImageOrientation *ModelDrawingImageOrientation `json:"ImageOrientation,omitempty"`
	Aperture NullableFloat64 `json:"Aperture,omitempty"`
	ShutterSpeed NullableFloat64 `json:"ShutterSpeed,omitempty"`
	Latitude NullableFloat64 `json:"Latitude,omitempty"`
	Longitude NullableFloat64 `json:"Longitude,omitempty"`
	Altitude NullableFloat64 `json:"Altitude,omitempty"`
	IsoSpeedRating NullableInt32 `json:"IsoSpeedRating,omitempty"`
	SeriesTimerId *string `json:"SeriesTimerId,omitempty"`
	ChannelPrimaryImageTag *string `json:"ChannelPrimaryImageTag,omitempty"`
	StartDate NullableTime `json:"StartDate,omitempty"`
	CompletionPercentage NullableFloat64 `json:"CompletionPercentage,omitempty"`
	IsRepeat NullableBool `json:"IsRepeat,omitempty"`
	IsNew NullableBool `json:"IsNew,omitempty"`
	EpisodeTitle *string `json:"EpisodeTitle,omitempty"`
	IsMovie NullableBool `json:"IsMovie,omitempty"`
	IsSports NullableBool `json:"IsSports,omitempty"`
	IsSeries NullableBool `json:"IsSeries,omitempty"`
	IsLive NullableBool `json:"IsLive,omitempty"`
	IsNews NullableBool `json:"IsNews,omitempty"`
	IsKids NullableBool `json:"IsKids,omitempty"`
	IsPremiere NullableBool `json:"IsPremiere,omitempty"`
	TimerType *ModelLiveTvTimerType `json:"TimerType,omitempty"`
	Disabled NullableBool `json:"Disabled,omitempty"`
	ManagementId *string `json:"ManagementId,omitempty"`
	TimerId *string `json:"TimerId,omitempty"`
	CurrentProgram *ModelBaseItemDto `json:"CurrentProgram,omitempty"`
	MovieCount NullableInt32 `json:"MovieCount,omitempty"`
	SeriesCount NullableInt32 `json:"SeriesCount,omitempty"`
	AlbumCount NullableInt32 `json:"AlbumCount,omitempty"`
	SongCount NullableInt32 `json:"SongCount,omitempty"`
	MusicVideoCount NullableInt32 `json:"MusicVideoCount,omitempty"`
	Subviews []string `json:"Subviews,omitempty"`
	ListingsProviderId *string `json:"ListingsProviderId,omitempty"`
	ListingsChannelId *string `json:"ListingsChannelId,omitempty"`
	ListingsPath *string `json:"ListingsPath,omitempty"`
	ListingsId *string `json:"ListingsId,omitempty"`
	ListingsChannelName *string `json:"ListingsChannelName,omitempty"`
	ListingsChannelNumber *string `json:"ListingsChannelNumber,omitempty"`
	AffiliateCallSign *string `json:"AffiliateCallSign,omitempty"`
}

// NewModelBaseItemDto instantiates a new ModelBaseItemDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelBaseItemDto() *ModelBaseItemDto {
	this := ModelBaseItemDto{}
	return &this
}

// NewModelBaseItemDtoWithDefaults instantiates a new ModelBaseItemDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelBaseItemDtoWithDefaults() *ModelBaseItemDto {
	this := ModelBaseItemDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelBaseItemDto) SetName(v string) {
	o.Name = &v
}

// GetOriginalTitle returns the OriginalTitle field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetOriginalTitle() string {
	if o == nil || IsNil(o.OriginalTitle) {
		var ret string
		return ret
	}
	return *o.OriginalTitle
}

// GetOriginalTitleOk returns a tuple with the OriginalTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetOriginalTitleOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalTitle) {
		return nil, false
	}
	return o.OriginalTitle, true
}

// HasOriginalTitle returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasOriginalTitle() bool {
	if o != nil && !IsNil(o.OriginalTitle) {
		return true
	}

	return false
}

// SetOriginalTitle gets a reference to the given string and assigns it to the OriginalTitle field.
func (o *ModelBaseItemDto) SetOriginalTitle(v string) {
	o.OriginalTitle = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *ModelBaseItemDto) SetServerId(v string) {
	o.ServerId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelBaseItemDto) SetId(v string) {
	o.Id = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *ModelBaseItemDto) SetGuid(v string) {
	o.Guid = &v
}

// GetEtag returns the Etag field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetEtag() string {
	if o == nil || IsNil(o.Etag) {
		var ret string
		return ret
	}
	return *o.Etag
}

// GetEtagOk returns a tuple with the Etag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetEtagOk() (*string, bool) {
	if o == nil || IsNil(o.Etag) {
		return nil, false
	}
	return o.Etag, true
}

// HasEtag returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasEtag() bool {
	if o != nil && !IsNil(o.Etag) {
		return true
	}

	return false
}

// SetEtag gets a reference to the given string and assigns it to the Etag field.
func (o *ModelBaseItemDto) SetEtag(v string) {
	o.Etag = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *ModelBaseItemDto) SetPrefix(v string) {
	o.Prefix = &v
}

// GetPlaylistItemId returns the PlaylistItemId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPlaylistItemId() string {
	if o == nil || IsNil(o.PlaylistItemId) {
		var ret string
		return ret
	}
	return *o.PlaylistItemId
}

// GetPlaylistItemIdOk returns a tuple with the PlaylistItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPlaylistItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlaylistItemId) {
		return nil, false
	}
	return o.PlaylistItemId, true
}

// HasPlaylistItemId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPlaylistItemId() bool {
	if o != nil && !IsNil(o.PlaylistItemId) {
		return true
	}

	return false
}

// SetPlaylistItemId gets a reference to the given string and assigns it to the PlaylistItemId field.
func (o *ModelBaseItemDto) SetPlaylistItemId(v string) {
	o.PlaylistItemId = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableTime and assigns it to the DateCreated field.
func (o *ModelBaseItemDto) SetDateCreated(v time.Time) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ModelBaseItemDto) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ModelBaseItemDto) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *ModelBaseItemDto) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetSortIndexNumber returns the SortIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSortIndexNumber() int32 {
	if o == nil || IsNil(o.SortIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SortIndexNumber.Get()
}

// GetSortIndexNumberOk returns a tuple with the SortIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSortIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortIndexNumber.Get(), o.SortIndexNumber.IsSet()
}

// HasSortIndexNumber returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSortIndexNumber() bool {
	if o != nil && o.SortIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetSortIndexNumber gets a reference to the given NullableInt32 and assigns it to the SortIndexNumber field.
func (o *ModelBaseItemDto) SetSortIndexNumber(v int32) {
	o.SortIndexNumber.Set(&v)
}
// SetSortIndexNumberNil sets the value for SortIndexNumber to be an explicit nil
func (o *ModelBaseItemDto) SetSortIndexNumberNil() {
	o.SortIndexNumber.Set(nil)
}

// UnsetSortIndexNumber ensures that no value is present for SortIndexNumber, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSortIndexNumber() {
	o.SortIndexNumber.Unset()
}

// GetSortParentIndexNumber returns the SortParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSortParentIndexNumber() int32 {
	if o == nil || IsNil(o.SortParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.SortParentIndexNumber.Get()
}

// GetSortParentIndexNumberOk returns a tuple with the SortParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSortParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortParentIndexNumber.Get(), o.SortParentIndexNumber.IsSet()
}

// HasSortParentIndexNumber returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSortParentIndexNumber() bool {
	if o != nil && o.SortParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetSortParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the SortParentIndexNumber field.
func (o *ModelBaseItemDto) SetSortParentIndexNumber(v int32) {
	o.SortParentIndexNumber.Set(&v)
}
// SetSortParentIndexNumberNil sets the value for SortParentIndexNumber to be an explicit nil
func (o *ModelBaseItemDto) SetSortParentIndexNumberNil() {
	o.SortParentIndexNumber.Set(nil)
}

// UnsetSortParentIndexNumber ensures that no value is present for SortParentIndexNumber, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSortParentIndexNumber() {
	o.SortParentIndexNumber.Unset()
}

// GetCanDelete returns the CanDelete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCanDelete() bool {
	if o == nil || IsNil(o.CanDelete.Get()) {
		var ret bool
		return ret
	}
	return *o.CanDelete.Get()
}

// GetCanDeleteOk returns a tuple with the CanDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCanDeleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanDelete.Get(), o.CanDelete.IsSet()
}

// HasCanDelete returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCanDelete() bool {
	if o != nil && o.CanDelete.IsSet() {
		return true
	}

	return false
}

// SetCanDelete gets a reference to the given NullableBool and assigns it to the CanDelete field.
func (o *ModelBaseItemDto) SetCanDelete(v bool) {
	o.CanDelete.Set(&v)
}
// SetCanDeleteNil sets the value for CanDelete to be an explicit nil
func (o *ModelBaseItemDto) SetCanDeleteNil() {
	o.CanDelete.Set(nil)
}

// UnsetCanDelete ensures that no value is present for CanDelete, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCanDelete() {
	o.CanDelete.Unset()
}

// GetCanDownload returns the CanDownload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCanDownload() bool {
	if o == nil || IsNil(o.CanDownload.Get()) {
		var ret bool
		return ret
	}
	return *o.CanDownload.Get()
}

// GetCanDownloadOk returns a tuple with the CanDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCanDownloadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanDownload.Get(), o.CanDownload.IsSet()
}

// HasCanDownload returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCanDownload() bool {
	if o != nil && o.CanDownload.IsSet() {
		return true
	}

	return false
}

// SetCanDownload gets a reference to the given NullableBool and assigns it to the CanDownload field.
func (o *ModelBaseItemDto) SetCanDownload(v bool) {
	o.CanDownload.Set(&v)
}
// SetCanDownloadNil sets the value for CanDownload to be an explicit nil
func (o *ModelBaseItemDto) SetCanDownloadNil() {
	o.CanDownload.Set(nil)
}

// UnsetCanDownload ensures that no value is present for CanDownload, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCanDownload() {
	o.CanDownload.Unset()
}

// GetSupportsResume returns the SupportsResume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSupportsResume() bool {
	if o == nil || IsNil(o.SupportsResume.Get()) {
		var ret bool
		return ret
	}
	return *o.SupportsResume.Get()
}

// GetSupportsResumeOk returns a tuple with the SupportsResume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSupportsResumeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportsResume.Get(), o.SupportsResume.IsSet()
}

// HasSupportsResume returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSupportsResume() bool {
	if o != nil && o.SupportsResume.IsSet() {
		return true
	}

	return false
}

// SetSupportsResume gets a reference to the given NullableBool and assigns it to the SupportsResume field.
func (o *ModelBaseItemDto) SetSupportsResume(v bool) {
	o.SupportsResume.Set(&v)
}
// SetSupportsResumeNil sets the value for SupportsResume to be an explicit nil
func (o *ModelBaseItemDto) SetSupportsResumeNil() {
	o.SupportsResume.Set(nil)
}

// UnsetSupportsResume ensures that no value is present for SupportsResume, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSupportsResume() {
	o.SupportsResume.Unset()
}

// GetPresentationUniqueKey returns the PresentationUniqueKey field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPresentationUniqueKey() string {
	if o == nil || IsNil(o.PresentationUniqueKey) {
		var ret string
		return ret
	}
	return *o.PresentationUniqueKey
}

// GetPresentationUniqueKeyOk returns a tuple with the PresentationUniqueKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPresentationUniqueKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PresentationUniqueKey) {
		return nil, false
	}
	return o.PresentationUniqueKey, true
}

// HasPresentationUniqueKey returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPresentationUniqueKey() bool {
	if o != nil && !IsNil(o.PresentationUniqueKey) {
		return true
	}

	return false
}

// SetPresentationUniqueKey gets a reference to the given string and assigns it to the PresentationUniqueKey field.
func (o *ModelBaseItemDto) SetPresentationUniqueKey(v string) {
	o.PresentationUniqueKey = &v
}

// GetPreferredMetadataLanguage returns the PreferredMetadataLanguage field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPreferredMetadataLanguage() string {
	if o == nil || IsNil(o.PreferredMetadataLanguage) {
		var ret string
		return ret
	}
	return *o.PreferredMetadataLanguage
}

// GetPreferredMetadataLanguageOk returns a tuple with the PreferredMetadataLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPreferredMetadataLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredMetadataLanguage) {
		return nil, false
	}
	return o.PreferredMetadataLanguage, true
}

// HasPreferredMetadataLanguage returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPreferredMetadataLanguage() bool {
	if o != nil && !IsNil(o.PreferredMetadataLanguage) {
		return true
	}

	return false
}

// SetPreferredMetadataLanguage gets a reference to the given string and assigns it to the PreferredMetadataLanguage field.
func (o *ModelBaseItemDto) SetPreferredMetadataLanguage(v string) {
	o.PreferredMetadataLanguage = &v
}

// GetPreferredMetadataCountryCode returns the PreferredMetadataCountryCode field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPreferredMetadataCountryCode() string {
	if o == nil || IsNil(o.PreferredMetadataCountryCode) {
		var ret string
		return ret
	}
	return *o.PreferredMetadataCountryCode
}

// GetPreferredMetadataCountryCodeOk returns a tuple with the PreferredMetadataCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPreferredMetadataCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredMetadataCountryCode) {
		return nil, false
	}
	return o.PreferredMetadataCountryCode, true
}

// HasPreferredMetadataCountryCode returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPreferredMetadataCountryCode() bool {
	if o != nil && !IsNil(o.PreferredMetadataCountryCode) {
		return true
	}

	return false
}

// SetPreferredMetadataCountryCode gets a reference to the given string and assigns it to the PreferredMetadataCountryCode field.
func (o *ModelBaseItemDto) SetPreferredMetadataCountryCode(v string) {
	o.PreferredMetadataCountryCode = &v
}

// GetSupportsSync returns the SupportsSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSupportsSync() bool {
	if o == nil || IsNil(o.SupportsSync.Get()) {
		var ret bool
		return ret
	}
	return *o.SupportsSync.Get()
}

// GetSupportsSyncOk returns a tuple with the SupportsSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSupportsSyncOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportsSync.Get(), o.SupportsSync.IsSet()
}

// HasSupportsSync returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSupportsSync() bool {
	if o != nil && o.SupportsSync.IsSet() {
		return true
	}

	return false
}

// SetSupportsSync gets a reference to the given NullableBool and assigns it to the SupportsSync field.
func (o *ModelBaseItemDto) SetSupportsSync(v bool) {
	o.SupportsSync.Set(&v)
}
// SetSupportsSyncNil sets the value for SupportsSync to be an explicit nil
func (o *ModelBaseItemDto) SetSupportsSyncNil() {
	o.SupportsSync.Set(nil)
}

// UnsetSupportsSync ensures that no value is present for SupportsSync, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSupportsSync() {
	o.SupportsSync.Unset()
}

// GetSyncStatus returns the SyncStatus field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSyncStatus() ModelSyncJobItemStatus {
	if o == nil || IsNil(o.SyncStatus) {
		var ret ModelSyncJobItemStatus
		return ret
	}
	return *o.SyncStatus
}

// GetSyncStatusOk returns a tuple with the SyncStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSyncStatusOk() (*ModelSyncJobItemStatus, bool) {
	if o == nil || IsNil(o.SyncStatus) {
		return nil, false
	}
	return o.SyncStatus, true
}

// HasSyncStatus returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSyncStatus() bool {
	if o != nil && !IsNil(o.SyncStatus) {
		return true
	}

	return false
}

// SetSyncStatus gets a reference to the given ModelSyncJobItemStatus and assigns it to the SyncStatus field.
func (o *ModelBaseItemDto) SetSyncStatus(v ModelSyncJobItemStatus) {
	o.SyncStatus = &v
}

// GetCanManageAccess returns the CanManageAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCanManageAccess() bool {
	if o == nil || IsNil(o.CanManageAccess.Get()) {
		var ret bool
		return ret
	}
	return *o.CanManageAccess.Get()
}

// GetCanManageAccessOk returns a tuple with the CanManageAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCanManageAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanManageAccess.Get(), o.CanManageAccess.IsSet()
}

// HasCanManageAccess returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCanManageAccess() bool {
	if o != nil && o.CanManageAccess.IsSet() {
		return true
	}

	return false
}

// SetCanManageAccess gets a reference to the given NullableBool and assigns it to the CanManageAccess field.
func (o *ModelBaseItemDto) SetCanManageAccess(v bool) {
	o.CanManageAccess.Set(&v)
}
// SetCanManageAccessNil sets the value for CanManageAccess to be an explicit nil
func (o *ModelBaseItemDto) SetCanManageAccessNil() {
	o.CanManageAccess.Set(nil)
}

// UnsetCanManageAccess ensures that no value is present for CanManageAccess, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCanManageAccess() {
	o.CanManageAccess.Unset()
}

// GetCanMakePrivate returns the CanMakePrivate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCanMakePrivate() bool {
	if o == nil || IsNil(o.CanMakePrivate.Get()) {
		var ret bool
		return ret
	}
	return *o.CanMakePrivate.Get()
}

// GetCanMakePrivateOk returns a tuple with the CanMakePrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCanMakePrivateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanMakePrivate.Get(), o.CanMakePrivate.IsSet()
}

// HasCanMakePrivate returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCanMakePrivate() bool {
	if o != nil && o.CanMakePrivate.IsSet() {
		return true
	}

	return false
}

// SetCanMakePrivate gets a reference to the given NullableBool and assigns it to the CanMakePrivate field.
func (o *ModelBaseItemDto) SetCanMakePrivate(v bool) {
	o.CanMakePrivate.Set(&v)
}
// SetCanMakePrivateNil sets the value for CanMakePrivate to be an explicit nil
func (o *ModelBaseItemDto) SetCanMakePrivateNil() {
	o.CanMakePrivate.Set(nil)
}

// UnsetCanMakePrivate ensures that no value is present for CanMakePrivate, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCanMakePrivate() {
	o.CanMakePrivate.Unset()
}

// GetCanMakePublic returns the CanMakePublic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCanMakePublic() bool {
	if o == nil || IsNil(o.CanMakePublic.Get()) {
		var ret bool
		return ret
	}
	return *o.CanMakePublic.Get()
}

// GetCanMakePublicOk returns a tuple with the CanMakePublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCanMakePublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanMakePublic.Get(), o.CanMakePublic.IsSet()
}

// HasCanMakePublic returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCanMakePublic() bool {
	if o != nil && o.CanMakePublic.IsSet() {
		return true
	}

	return false
}

// SetCanMakePublic gets a reference to the given NullableBool and assigns it to the CanMakePublic field.
func (o *ModelBaseItemDto) SetCanMakePublic(v bool) {
	o.CanMakePublic.Set(&v)
}
// SetCanMakePublicNil sets the value for CanMakePublic to be an explicit nil
func (o *ModelBaseItemDto) SetCanMakePublicNil() {
	o.CanMakePublic.Set(nil)
}

// UnsetCanMakePublic ensures that no value is present for CanMakePublic, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCanMakePublic() {
	o.CanMakePublic.Unset()
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetContainer() string {
	if o == nil || IsNil(o.Container) {
		var ret string
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetContainerOk() (*string, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given string and assigns it to the Container field.
func (o *ModelBaseItemDto) SetContainer(v string) {
	o.Container = &v
}

// GetSortName returns the SortName field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSortName() string {
	if o == nil || IsNil(o.SortName) {
		var ret string
		return ret
	}
	return *o.SortName
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSortNameOk() (*string, bool) {
	if o == nil || IsNil(o.SortName) {
		return nil, false
	}
	return o.SortName, true
}

// HasSortName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSortName() bool {
	if o != nil && !IsNil(o.SortName) {
		return true
	}

	return false
}

// SetSortName gets a reference to the given string and assigns it to the SortName field.
func (o *ModelBaseItemDto) SetSortName(v string) {
	o.SortName = &v
}

// GetForcedSortName returns the ForcedSortName field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetForcedSortName() string {
	if o == nil || IsNil(o.ForcedSortName) {
		var ret string
		return ret
	}
	return *o.ForcedSortName
}

// GetForcedSortNameOk returns a tuple with the ForcedSortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetForcedSortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ForcedSortName) {
		return nil, false
	}
	return o.ForcedSortName, true
}

// HasForcedSortName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasForcedSortName() bool {
	if o != nil && !IsNil(o.ForcedSortName) {
		return true
	}

	return false
}

// SetForcedSortName gets a reference to the given string and assigns it to the ForcedSortName field.
func (o *ModelBaseItemDto) SetForcedSortName(v string) {
	o.ForcedSortName = &v
}

// GetVideo3DFormat returns the Video3DFormat field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetVideo3DFormat() ModelVideo3DFormat {
	if o == nil || IsNil(o.Video3DFormat) {
		var ret ModelVideo3DFormat
		return ret
	}
	return *o.Video3DFormat
}

// GetVideo3DFormatOk returns a tuple with the Video3DFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetVideo3DFormatOk() (*ModelVideo3DFormat, bool) {
	if o == nil || IsNil(o.Video3DFormat) {
		return nil, false
	}
	return o.Video3DFormat, true
}

// HasVideo3DFormat returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasVideo3DFormat() bool {
	if o != nil && !IsNil(o.Video3DFormat) {
		return true
	}

	return false
}

// SetVideo3DFormat gets a reference to the given ModelVideo3DFormat and assigns it to the Video3DFormat field.
func (o *ModelBaseItemDto) SetVideo3DFormat(v ModelVideo3DFormat) {
	o.Video3DFormat = &v
}

// GetPremiereDate returns the PremiereDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetPremiereDate() time.Time {
	if o == nil || IsNil(o.PremiereDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PremiereDate.Get()
}

// GetPremiereDateOk returns a tuple with the PremiereDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetPremiereDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PremiereDate.Get(), o.PremiereDate.IsSet()
}

// HasPremiereDate returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPremiereDate() bool {
	if o != nil && o.PremiereDate.IsSet() {
		return true
	}

	return false
}

// SetPremiereDate gets a reference to the given NullableTime and assigns it to the PremiereDate field.
func (o *ModelBaseItemDto) SetPremiereDate(v time.Time) {
	o.PremiereDate.Set(&v)
}
// SetPremiereDateNil sets the value for PremiereDate to be an explicit nil
func (o *ModelBaseItemDto) SetPremiereDateNil() {
	o.PremiereDate.Set(nil)
}

// UnsetPremiereDate ensures that no value is present for PremiereDate, not even an explicit nil
func (o *ModelBaseItemDto) UnsetPremiereDate() {
	o.PremiereDate.Unset()
}

// GetExternalUrls returns the ExternalUrls field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetExternalUrls() []ModelExternalUrl {
	if o == nil || IsNil(o.ExternalUrls) {
		var ret []ModelExternalUrl
		return ret
	}
	return o.ExternalUrls
}

// GetExternalUrlsOk returns a tuple with the ExternalUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetExternalUrlsOk() ([]ModelExternalUrl, bool) {
	if o == nil || IsNil(o.ExternalUrls) {
		return nil, false
	}
	return o.ExternalUrls, true
}

// HasExternalUrls returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasExternalUrls() bool {
	if o != nil && !IsNil(o.ExternalUrls) {
		return true
	}

	return false
}

// SetExternalUrls gets a reference to the given []ModelExternalUrl and assigns it to the ExternalUrls field.
func (o *ModelBaseItemDto) SetExternalUrls(v []ModelExternalUrl) {
	o.ExternalUrls = v
}

// GetMediaSources returns the MediaSources field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetMediaSources() []ModelMediaSourceInfo {
	if o == nil || IsNil(o.MediaSources) {
		var ret []ModelMediaSourceInfo
		return ret
	}
	return o.MediaSources
}

// GetMediaSourcesOk returns a tuple with the MediaSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetMediaSourcesOk() ([]ModelMediaSourceInfo, bool) {
	if o == nil || IsNil(o.MediaSources) {
		return nil, false
	}
	return o.MediaSources, true
}

// HasMediaSources returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasMediaSources() bool {
	if o != nil && !IsNil(o.MediaSources) {
		return true
	}

	return false
}

// SetMediaSources gets a reference to the given []ModelMediaSourceInfo and assigns it to the MediaSources field.
func (o *ModelBaseItemDto) SetMediaSources(v []ModelMediaSourceInfo) {
	o.MediaSources = v
}

// GetCriticRating returns the CriticRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCriticRating() float32 {
	if o == nil || IsNil(o.CriticRating.Get()) {
		var ret float32
		return ret
	}
	return *o.CriticRating.Get()
}

// GetCriticRatingOk returns a tuple with the CriticRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCriticRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CriticRating.Get(), o.CriticRating.IsSet()
}

// HasCriticRating returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCriticRating() bool {
	if o != nil && o.CriticRating.IsSet() {
		return true
	}

	return false
}

// SetCriticRating gets a reference to the given NullableFloat32 and assigns it to the CriticRating field.
func (o *ModelBaseItemDto) SetCriticRating(v float32) {
	o.CriticRating.Set(&v)
}
// SetCriticRatingNil sets the value for CriticRating to be an explicit nil
func (o *ModelBaseItemDto) SetCriticRatingNil() {
	o.CriticRating.Set(nil)
}

// UnsetCriticRating ensures that no value is present for CriticRating, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCriticRating() {
	o.CriticRating.Unset()
}

// GetGameSystemId returns the GameSystemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetGameSystemId() int64 {
	if o == nil || IsNil(o.GameSystemId.Get()) {
		var ret int64
		return ret
	}
	return *o.GameSystemId.Get()
}

// GetGameSystemIdOk returns a tuple with the GameSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetGameSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.GameSystemId.Get(), o.GameSystemId.IsSet()
}

// HasGameSystemId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasGameSystemId() bool {
	if o != nil && o.GameSystemId.IsSet() {
		return true
	}

	return false
}

// SetGameSystemId gets a reference to the given NullableInt64 and assigns it to the GameSystemId field.
func (o *ModelBaseItemDto) SetGameSystemId(v int64) {
	o.GameSystemId.Set(&v)
}
// SetGameSystemIdNil sets the value for GameSystemId to be an explicit nil
func (o *ModelBaseItemDto) SetGameSystemIdNil() {
	o.GameSystemId.Set(nil)
}

// UnsetGameSystemId ensures that no value is present for GameSystemId, not even an explicit nil
func (o *ModelBaseItemDto) UnsetGameSystemId() {
	o.GameSystemId.Unset()
}

// GetAsSeries returns the AsSeries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetAsSeries() bool {
	if o == nil || IsNil(o.AsSeries.Get()) {
		var ret bool
		return ret
	}
	return *o.AsSeries.Get()
}

// GetAsSeriesOk returns a tuple with the AsSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetAsSeriesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AsSeries.Get(), o.AsSeries.IsSet()
}

// HasAsSeries returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAsSeries() bool {
	if o != nil && o.AsSeries.IsSet() {
		return true
	}

	return false
}

// SetAsSeries gets a reference to the given NullableBool and assigns it to the AsSeries field.
func (o *ModelBaseItemDto) SetAsSeries(v bool) {
	o.AsSeries.Set(&v)
}
// SetAsSeriesNil sets the value for AsSeries to be an explicit nil
func (o *ModelBaseItemDto) SetAsSeriesNil() {
	o.AsSeries.Set(nil)
}

// UnsetAsSeries ensures that no value is present for AsSeries, not even an explicit nil
func (o *ModelBaseItemDto) UnsetAsSeries() {
	o.AsSeries.Unset()
}

// GetGameSystem returns the GameSystem field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetGameSystem() string {
	if o == nil || IsNil(o.GameSystem) {
		var ret string
		return ret
	}
	return *o.GameSystem
}

// GetGameSystemOk returns a tuple with the GameSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetGameSystemOk() (*string, bool) {
	if o == nil || IsNil(o.GameSystem) {
		return nil, false
	}
	return o.GameSystem, true
}

// HasGameSystem returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasGameSystem() bool {
	if o != nil && !IsNil(o.GameSystem) {
		return true
	}

	return false
}

// SetGameSystem gets a reference to the given string and assigns it to the GameSystem field.
func (o *ModelBaseItemDto) SetGameSystem(v string) {
	o.GameSystem = &v
}

// GetProductionLocations returns the ProductionLocations field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetProductionLocations() []string {
	if o == nil || IsNil(o.ProductionLocations) {
		var ret []string
		return ret
	}
	return o.ProductionLocations
}

// GetProductionLocationsOk returns a tuple with the ProductionLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetProductionLocationsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductionLocations) {
		return nil, false
	}
	return o.ProductionLocations, true
}

// HasProductionLocations returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasProductionLocations() bool {
	if o != nil && !IsNil(o.ProductionLocations) {
		return true
	}

	return false
}

// SetProductionLocations gets a reference to the given []string and assigns it to the ProductionLocations field.
func (o *ModelBaseItemDto) SetProductionLocations(v []string) {
	o.ProductionLocations = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ModelBaseItemDto) SetPath(v string) {
	o.Path = &v
}

// GetOfficialRating returns the OfficialRating field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetOfficialRating() string {
	if o == nil || IsNil(o.OfficialRating) {
		var ret string
		return ret
	}
	return *o.OfficialRating
}

// GetOfficialRatingOk returns a tuple with the OfficialRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetOfficialRatingOk() (*string, bool) {
	if o == nil || IsNil(o.OfficialRating) {
		return nil, false
	}
	return o.OfficialRating, true
}

// HasOfficialRating returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasOfficialRating() bool {
	if o != nil && !IsNil(o.OfficialRating) {
		return true
	}

	return false
}

// SetOfficialRating gets a reference to the given string and assigns it to the OfficialRating field.
func (o *ModelBaseItemDto) SetOfficialRating(v string) {
	o.OfficialRating = &v
}

// GetCustomRating returns the CustomRating field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetCustomRating() string {
	if o == nil || IsNil(o.CustomRating) {
		var ret string
		return ret
	}
	return *o.CustomRating
}

// GetCustomRatingOk returns a tuple with the CustomRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetCustomRatingOk() (*string, bool) {
	if o == nil || IsNil(o.CustomRating) {
		return nil, false
	}
	return o.CustomRating, true
}

// HasCustomRating returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCustomRating() bool {
	if o != nil && !IsNil(o.CustomRating) {
		return true
	}

	return false
}

// SetCustomRating gets a reference to the given string and assigns it to the CustomRating field.
func (o *ModelBaseItemDto) SetCustomRating(v string) {
	o.CustomRating = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *ModelBaseItemDto) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *ModelBaseItemDto) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetOverview() string {
	if o == nil || IsNil(o.Overview) {
		var ret string
		return ret
	}
	return *o.Overview
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.Overview) {
		return nil, false
	}
	return o.Overview, true
}

// HasOverview returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasOverview() bool {
	if o != nil && !IsNil(o.Overview) {
		return true
	}

	return false
}

// SetOverview gets a reference to the given string and assigns it to the Overview field.
func (o *ModelBaseItemDto) SetOverview(v string) {
	o.Overview = &v
}

// GetTaglines returns the Taglines field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetTaglines() []string {
	if o == nil || IsNil(o.Taglines) {
		var ret []string
		return ret
	}
	return o.Taglines
}

// GetTaglinesOk returns a tuple with the Taglines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetTaglinesOk() ([]string, bool) {
	if o == nil || IsNil(o.Taglines) {
		return nil, false
	}
	return o.Taglines, true
}

// HasTaglines returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasTaglines() bool {
	if o != nil && !IsNil(o.Taglines) {
		return true
	}

	return false
}

// SetTaglines gets a reference to the given []string and assigns it to the Taglines field.
func (o *ModelBaseItemDto) SetTaglines(v []string) {
	o.Taglines = v
}

// GetGenres returns the Genres field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetGenres() []string {
	if o == nil || IsNil(o.Genres) {
		var ret []string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetGenresOk() ([]string, bool) {
	if o == nil || IsNil(o.Genres) {
		return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasGenres() bool {
	if o != nil && !IsNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *ModelBaseItemDto) SetGenres(v []string) {
	o.Genres = v
}

// GetCommunityRating returns the CommunityRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCommunityRating() float32 {
	if o == nil || IsNil(o.CommunityRating.Get()) {
		var ret float32
		return ret
	}
	return *o.CommunityRating.Get()
}

// GetCommunityRatingOk returns a tuple with the CommunityRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCommunityRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommunityRating.Get(), o.CommunityRating.IsSet()
}

// HasCommunityRating returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCommunityRating() bool {
	if o != nil && o.CommunityRating.IsSet() {
		return true
	}

	return false
}

// SetCommunityRating gets a reference to the given NullableFloat32 and assigns it to the CommunityRating field.
func (o *ModelBaseItemDto) SetCommunityRating(v float32) {
	o.CommunityRating.Set(&v)
}
// SetCommunityRatingNil sets the value for CommunityRating to be an explicit nil
func (o *ModelBaseItemDto) SetCommunityRatingNil() {
	o.CommunityRating.Set(nil)
}

// UnsetCommunityRating ensures that no value is present for CommunityRating, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCommunityRating() {
	o.CommunityRating.Unset()
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *ModelBaseItemDto) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *ModelBaseItemDto) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *ModelBaseItemDto) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *ModelBaseItemDto) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *ModelBaseItemDto) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSize() {
	o.Size.Unset()
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ModelBaseItemDto) SetFileName(v string) {
	o.FileName = &v
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetBitrate() int32 {
	if o == nil || IsNil(o.Bitrate.Get()) {
		var ret int32
		return ret
	}
	return *o.Bitrate.Get()
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetBitrateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bitrate.Get(), o.Bitrate.IsSet()
}

// HasBitrate returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasBitrate() bool {
	if o != nil && o.Bitrate.IsSet() {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given NullableInt32 and assigns it to the Bitrate field.
func (o *ModelBaseItemDto) SetBitrate(v int32) {
	o.Bitrate.Set(&v)
}
// SetBitrateNil sets the value for Bitrate to be an explicit nil
func (o *ModelBaseItemDto) SetBitrateNil() {
	o.Bitrate.Set(nil)
}

// UnsetBitrate ensures that no value is present for Bitrate, not even an explicit nil
func (o *ModelBaseItemDto) UnsetBitrate() {
	o.Bitrate.Unset()
}

// GetProductionYear returns the ProductionYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetProductionYear() int32 {
	if o == nil || IsNil(o.ProductionYear.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductionYear.Get()
}

// GetProductionYearOk returns a tuple with the ProductionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetProductionYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductionYear.Get(), o.ProductionYear.IsSet()
}

// HasProductionYear returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasProductionYear() bool {
	if o != nil && o.ProductionYear.IsSet() {
		return true
	}

	return false
}

// SetProductionYear gets a reference to the given NullableInt32 and assigns it to the ProductionYear field.
func (o *ModelBaseItemDto) SetProductionYear(v int32) {
	o.ProductionYear.Set(&v)
}
// SetProductionYearNil sets the value for ProductionYear to be an explicit nil
func (o *ModelBaseItemDto) SetProductionYearNil() {
	o.ProductionYear.Set(nil)
}

// UnsetProductionYear ensures that no value is present for ProductionYear, not even an explicit nil
func (o *ModelBaseItemDto) UnsetProductionYear() {
	o.ProductionYear.Unset()
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *ModelBaseItemDto) SetNumber(v string) {
	o.Number = &v
}

// GetChannelNumber returns the ChannelNumber field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetChannelNumber() string {
	if o == nil || IsNil(o.ChannelNumber) {
		var ret string
		return ret
	}
	return *o.ChannelNumber
}

// GetChannelNumberOk returns a tuple with the ChannelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetChannelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelNumber) {
		return nil, false
	}
	return o.ChannelNumber, true
}

// HasChannelNumber returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasChannelNumber() bool {
	if o != nil && !IsNil(o.ChannelNumber) {
		return true
	}

	return false
}

// SetChannelNumber gets a reference to the given string and assigns it to the ChannelNumber field.
func (o *ModelBaseItemDto) SetChannelNumber(v string) {
	o.ChannelNumber = &v
}

// GetIndexNumber returns the IndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIndexNumber() int32 {
	if o == nil || IsNil(o.IndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumber.Get()
}

// GetIndexNumberOk returns a tuple with the IndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumber.Get(), o.IndexNumber.IsSet()
}

// HasIndexNumber returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIndexNumber() bool {
	if o != nil && o.IndexNumber.IsSet() {
		return true
	}

	return false
}

// SetIndexNumber gets a reference to the given NullableInt32 and assigns it to the IndexNumber field.
func (o *ModelBaseItemDto) SetIndexNumber(v int32) {
	o.IndexNumber.Set(&v)
}
// SetIndexNumberNil sets the value for IndexNumber to be an explicit nil
func (o *ModelBaseItemDto) SetIndexNumberNil() {
	o.IndexNumber.Set(nil)
}

// UnsetIndexNumber ensures that no value is present for IndexNumber, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIndexNumber() {
	o.IndexNumber.Unset()
}

// GetIndexNumberEnd returns the IndexNumberEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIndexNumberEnd() int32 {
	if o == nil || IsNil(o.IndexNumberEnd.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumberEnd.Get()
}

// GetIndexNumberEndOk returns a tuple with the IndexNumberEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIndexNumberEndOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumberEnd.Get(), o.IndexNumberEnd.IsSet()
}

// HasIndexNumberEnd returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIndexNumberEnd() bool {
	if o != nil && o.IndexNumberEnd.IsSet() {
		return true
	}

	return false
}

// SetIndexNumberEnd gets a reference to the given NullableInt32 and assigns it to the IndexNumberEnd field.
func (o *ModelBaseItemDto) SetIndexNumberEnd(v int32) {
	o.IndexNumberEnd.Set(&v)
}
// SetIndexNumberEndNil sets the value for IndexNumberEnd to be an explicit nil
func (o *ModelBaseItemDto) SetIndexNumberEndNil() {
	o.IndexNumberEnd.Set(nil)
}

// UnsetIndexNumberEnd ensures that no value is present for IndexNumberEnd, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIndexNumberEnd() {
	o.IndexNumberEnd.Unset()
}

// GetParentIndexNumber returns the ParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetParentIndexNumber() int32 {
	if o == nil || IsNil(o.ParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentIndexNumber.Get()
}

// GetParentIndexNumberOk returns a tuple with the ParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentIndexNumber.Get(), o.ParentIndexNumber.IsSet()
}

// HasParentIndexNumber returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentIndexNumber() bool {
	if o != nil && o.ParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the ParentIndexNumber field.
func (o *ModelBaseItemDto) SetParentIndexNumber(v int32) {
	o.ParentIndexNumber.Set(&v)
}
// SetParentIndexNumberNil sets the value for ParentIndexNumber to be an explicit nil
func (o *ModelBaseItemDto) SetParentIndexNumberNil() {
	o.ParentIndexNumber.Set(nil)
}

// UnsetParentIndexNumber ensures that no value is present for ParentIndexNumber, not even an explicit nil
func (o *ModelBaseItemDto) UnsetParentIndexNumber() {
	o.ParentIndexNumber.Unset()
}

// GetRemoteTrailers returns the RemoteTrailers field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetRemoteTrailers() []ModelMediaUrl {
	if o == nil || IsNil(o.RemoteTrailers) {
		var ret []ModelMediaUrl
		return ret
	}
	return o.RemoteTrailers
}

// GetRemoteTrailersOk returns a tuple with the RemoteTrailers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetRemoteTrailersOk() ([]ModelMediaUrl, bool) {
	if o == nil || IsNil(o.RemoteTrailers) {
		return nil, false
	}
	return o.RemoteTrailers, true
}

// HasRemoteTrailers returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasRemoteTrailers() bool {
	if o != nil && !IsNil(o.RemoteTrailers) {
		return true
	}

	return false
}

// SetRemoteTrailers gets a reference to the given []ModelMediaUrl and assigns it to the RemoteTrailers field.
func (o *ModelBaseItemDto) SetRemoteTrailers(v []ModelMediaUrl) {
	o.RemoteTrailers = v
}

// GetProviderIds returns the ProviderIds field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetProviderIds() map[string]string {
	if o == nil || IsNil(o.ProviderIds) {
		var ret map[string]string
		return ret
	}
	return *o.ProviderIds
}

// GetProviderIdsOk returns a tuple with the ProviderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetProviderIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProviderIds) {
		return nil, false
	}
	return o.ProviderIds, true
}

// HasProviderIds returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasProviderIds() bool {
	if o != nil && !IsNil(o.ProviderIds) {
		return true
	}

	return false
}

// SetProviderIds gets a reference to the given map[string]string and assigns it to the ProviderIds field.
func (o *ModelBaseItemDto) SetProviderIds(v map[string]string) {
	o.ProviderIds = &v
}

// GetIsFolder returns the IsFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsFolder() bool {
	if o == nil || IsNil(o.IsFolder.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFolder.Get()
}

// GetIsFolderOk returns a tuple with the IsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsFolderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFolder.Get(), o.IsFolder.IsSet()
}

// HasIsFolder returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsFolder() bool {
	if o != nil && o.IsFolder.IsSet() {
		return true
	}

	return false
}

// SetIsFolder gets a reference to the given NullableBool and assigns it to the IsFolder field.
func (o *ModelBaseItemDto) SetIsFolder(v bool) {
	o.IsFolder.Set(&v)
}
// SetIsFolderNil sets the value for IsFolder to be an explicit nil
func (o *ModelBaseItemDto) SetIsFolderNil() {
	o.IsFolder.Set(nil)
}

// UnsetIsFolder ensures that no value is present for IsFolder, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsFolder() {
	o.IsFolder.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *ModelBaseItemDto) SetParentId(v string) {
	o.ParentId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ModelBaseItemDto) SetType(v string) {
	o.Type = &v
}

// GetPeople returns the People field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPeople() []ModelBaseItemPerson {
	if o == nil || IsNil(o.People) {
		var ret []ModelBaseItemPerson
		return ret
	}
	return o.People
}

// GetPeopleOk returns a tuple with the People field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPeopleOk() ([]ModelBaseItemPerson, bool) {
	if o == nil || IsNil(o.People) {
		return nil, false
	}
	return o.People, true
}

// HasPeople returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPeople() bool {
	if o != nil && !IsNil(o.People) {
		return true
	}

	return false
}

// SetPeople gets a reference to the given []ModelBaseItemPerson and assigns it to the People field.
func (o *ModelBaseItemDto) SetPeople(v []ModelBaseItemPerson) {
	o.People = v
}

// GetStudios returns the Studios field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetStudios() []ModelNameLongIdPair {
	if o == nil || IsNil(o.Studios) {
		var ret []ModelNameLongIdPair
		return ret
	}
	return o.Studios
}

// GetStudiosOk returns a tuple with the Studios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetStudiosOk() ([]ModelNameLongIdPair, bool) {
	if o == nil || IsNil(o.Studios) {
		return nil, false
	}
	return o.Studios, true
}

// HasStudios returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasStudios() bool {
	if o != nil && !IsNil(o.Studios) {
		return true
	}

	return false
}

// SetStudios gets a reference to the given []ModelNameLongIdPair and assigns it to the Studios field.
func (o *ModelBaseItemDto) SetStudios(v []ModelNameLongIdPair) {
	o.Studios = v
}

// GetGenreItems returns the GenreItems field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetGenreItems() []ModelNameLongIdPair {
	if o == nil || IsNil(o.GenreItems) {
		var ret []ModelNameLongIdPair
		return ret
	}
	return o.GenreItems
}

// GetGenreItemsOk returns a tuple with the GenreItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetGenreItemsOk() ([]ModelNameLongIdPair, bool) {
	if o == nil || IsNil(o.GenreItems) {
		return nil, false
	}
	return o.GenreItems, true
}

// HasGenreItems returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasGenreItems() bool {
	if o != nil && !IsNil(o.GenreItems) {
		return true
	}

	return false
}

// SetGenreItems gets a reference to the given []ModelNameLongIdPair and assigns it to the GenreItems field.
func (o *ModelBaseItemDto) SetGenreItems(v []ModelNameLongIdPair) {
	o.GenreItems = v
}

// GetTagItems returns the TagItems field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetTagItems() []ModelNameLongIdPair {
	if o == nil || IsNil(o.TagItems) {
		var ret []ModelNameLongIdPair
		return ret
	}
	return o.TagItems
}

// GetTagItemsOk returns a tuple with the TagItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetTagItemsOk() ([]ModelNameLongIdPair, bool) {
	if o == nil || IsNil(o.TagItems) {
		return nil, false
	}
	return o.TagItems, true
}

// HasTagItems returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasTagItems() bool {
	if o != nil && !IsNil(o.TagItems) {
		return true
	}

	return false
}

// SetTagItems gets a reference to the given []ModelNameLongIdPair and assigns it to the TagItems field.
func (o *ModelBaseItemDto) SetTagItems(v []ModelNameLongIdPair) {
	o.TagItems = v
}

// GetParentLogoItemId returns the ParentLogoItemId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetParentLogoItemId() string {
	if o == nil || IsNil(o.ParentLogoItemId) {
		var ret string
		return ret
	}
	return *o.ParentLogoItemId
}

// GetParentLogoItemIdOk returns a tuple with the ParentLogoItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetParentLogoItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentLogoItemId) {
		return nil, false
	}
	return o.ParentLogoItemId, true
}

// HasParentLogoItemId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentLogoItemId() bool {
	if o != nil && !IsNil(o.ParentLogoItemId) {
		return true
	}

	return false
}

// SetParentLogoItemId gets a reference to the given string and assigns it to the ParentLogoItemId field.
func (o *ModelBaseItemDto) SetParentLogoItemId(v string) {
	o.ParentLogoItemId = &v
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		return nil, false
	}
	return o.ParentBackdropItemId, true
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentBackdropItemId() bool {
	if o != nil && !IsNil(o.ParentBackdropItemId) {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given string and assigns it to the ParentBackdropItemId field.
func (o *ModelBaseItemDto) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId = &v
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetParentBackdropImageTags() []string {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *ModelBaseItemDto) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetLocalTrailerCount returns the LocalTrailerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetLocalTrailerCount() int32 {
	if o == nil || IsNil(o.LocalTrailerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.LocalTrailerCount.Get()
}

// GetLocalTrailerCountOk returns a tuple with the LocalTrailerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetLocalTrailerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTrailerCount.Get(), o.LocalTrailerCount.IsSet()
}

// HasLocalTrailerCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasLocalTrailerCount() bool {
	if o != nil && o.LocalTrailerCount.IsSet() {
		return true
	}

	return false
}

// SetLocalTrailerCount gets a reference to the given NullableInt32 and assigns it to the LocalTrailerCount field.
func (o *ModelBaseItemDto) SetLocalTrailerCount(v int32) {
	o.LocalTrailerCount.Set(&v)
}
// SetLocalTrailerCountNil sets the value for LocalTrailerCount to be an explicit nil
func (o *ModelBaseItemDto) SetLocalTrailerCountNil() {
	o.LocalTrailerCount.Set(nil)
}

// UnsetLocalTrailerCount ensures that no value is present for LocalTrailerCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetLocalTrailerCount() {
	o.LocalTrailerCount.Unset()
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetUserData() ModelUserItemDataDto {
	if o == nil || IsNil(o.UserData) {
		var ret ModelUserItemDataDto
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetUserDataOk() (*ModelUserItemDataDto, bool) {
	if o == nil || IsNil(o.UserData) {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasUserData() bool {
	if o != nil && !IsNil(o.UserData) {
		return true
	}

	return false
}

// SetUserData gets a reference to the given ModelUserItemDataDto and assigns it to the UserData field.
func (o *ModelBaseItemDto) SetUserData(v ModelUserItemDataDto) {
	o.UserData = &v
}

// GetRecursiveItemCount returns the RecursiveItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetRecursiveItemCount() int32 {
	if o == nil || IsNil(o.RecursiveItemCount.Get()) {
		var ret int32
		return ret
	}
	return *o.RecursiveItemCount.Get()
}

// GetRecursiveItemCountOk returns a tuple with the RecursiveItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetRecursiveItemCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecursiveItemCount.Get(), o.RecursiveItemCount.IsSet()
}

// HasRecursiveItemCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasRecursiveItemCount() bool {
	if o != nil && o.RecursiveItemCount.IsSet() {
		return true
	}

	return false
}

// SetRecursiveItemCount gets a reference to the given NullableInt32 and assigns it to the RecursiveItemCount field.
func (o *ModelBaseItemDto) SetRecursiveItemCount(v int32) {
	o.RecursiveItemCount.Set(&v)
}
// SetRecursiveItemCountNil sets the value for RecursiveItemCount to be an explicit nil
func (o *ModelBaseItemDto) SetRecursiveItemCountNil() {
	o.RecursiveItemCount.Set(nil)
}

// UnsetRecursiveItemCount ensures that no value is present for RecursiveItemCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetRecursiveItemCount() {
	o.RecursiveItemCount.Unset()
}

// GetChildCount returns the ChildCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetChildCount() int32 {
	if o == nil || IsNil(o.ChildCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ChildCount.Get()
}

// GetChildCountOk returns a tuple with the ChildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetChildCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChildCount.Get(), o.ChildCount.IsSet()
}

// HasChildCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasChildCount() bool {
	if o != nil && o.ChildCount.IsSet() {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given NullableInt32 and assigns it to the ChildCount field.
func (o *ModelBaseItemDto) SetChildCount(v int32) {
	o.ChildCount.Set(&v)
}
// SetChildCountNil sets the value for ChildCount to be an explicit nil
func (o *ModelBaseItemDto) SetChildCountNil() {
	o.ChildCount.Set(nil)
}

// UnsetChildCount ensures that no value is present for ChildCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetChildCount() {
	o.ChildCount.Unset()
}

// GetSeriesName returns the SeriesName field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSeriesName() string {
	if o == nil || IsNil(o.SeriesName) {
		var ret string
		return ret
	}
	return *o.SeriesName
}

// GetSeriesNameOk returns a tuple with the SeriesName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSeriesNameOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesName) {
		return nil, false
	}
	return o.SeriesName, true
}

// HasSeriesName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeriesName() bool {
	if o != nil && !IsNil(o.SeriesName) {
		return true
	}

	return false
}

// SetSeriesName gets a reference to the given string and assigns it to the SeriesName field.
func (o *ModelBaseItemDto) SetSeriesName(v string) {
	o.SeriesName = &v
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSeriesId() string {
	if o == nil || IsNil(o.SeriesId) {
		var ret string
		return ret
	}
	return *o.SeriesId
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSeriesIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesId) {
		return nil, false
	}
	return o.SeriesId, true
}

// HasSeriesId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeriesId() bool {
	if o != nil && !IsNil(o.SeriesId) {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given string and assigns it to the SeriesId field.
func (o *ModelBaseItemDto) SetSeriesId(v string) {
	o.SeriesId = &v
}

// GetSeasonId returns the SeasonId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSeasonId() string {
	if o == nil || IsNil(o.SeasonId) {
		var ret string
		return ret
	}
	return *o.SeasonId
}

// GetSeasonIdOk returns a tuple with the SeasonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSeasonIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeasonId) {
		return nil, false
	}
	return o.SeasonId, true
}

// HasSeasonId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeasonId() bool {
	if o != nil && !IsNil(o.SeasonId) {
		return true
	}

	return false
}

// SetSeasonId gets a reference to the given string and assigns it to the SeasonId field.
func (o *ModelBaseItemDto) SetSeasonId(v string) {
	o.SeasonId = &v
}

// GetSpecialFeatureCount returns the SpecialFeatureCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSpecialFeatureCount() int32 {
	if o == nil || IsNil(o.SpecialFeatureCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SpecialFeatureCount.Get()
}

// GetSpecialFeatureCountOk returns a tuple with the SpecialFeatureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSpecialFeatureCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecialFeatureCount.Get(), o.SpecialFeatureCount.IsSet()
}

// HasSpecialFeatureCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSpecialFeatureCount() bool {
	if o != nil && o.SpecialFeatureCount.IsSet() {
		return true
	}

	return false
}

// SetSpecialFeatureCount gets a reference to the given NullableInt32 and assigns it to the SpecialFeatureCount field.
func (o *ModelBaseItemDto) SetSpecialFeatureCount(v int32) {
	o.SpecialFeatureCount.Set(&v)
}
// SetSpecialFeatureCountNil sets the value for SpecialFeatureCount to be an explicit nil
func (o *ModelBaseItemDto) SetSpecialFeatureCountNil() {
	o.SpecialFeatureCount.Set(nil)
}

// UnsetSpecialFeatureCount ensures that no value is present for SpecialFeatureCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSpecialFeatureCount() {
	o.SpecialFeatureCount.Unset()
}

// GetDisplayPreferencesId returns the DisplayPreferencesId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetDisplayPreferencesId() string {
	if o == nil || IsNil(o.DisplayPreferencesId) {
		var ret string
		return ret
	}
	return *o.DisplayPreferencesId
}

// GetDisplayPreferencesIdOk returns a tuple with the DisplayPreferencesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetDisplayPreferencesIdOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayPreferencesId) {
		return nil, false
	}
	return o.DisplayPreferencesId, true
}

// HasDisplayPreferencesId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasDisplayPreferencesId() bool {
	if o != nil && !IsNil(o.DisplayPreferencesId) {
		return true
	}

	return false
}

// SetDisplayPreferencesId gets a reference to the given string and assigns it to the DisplayPreferencesId field.
func (o *ModelBaseItemDto) SetDisplayPreferencesId(v string) {
	o.DisplayPreferencesId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModelBaseItemDto) SetStatus(v string) {
	o.Status = &v
}

// GetAirDays returns the AirDays field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetAirDays() []ModelDayOfWeek {
	if o == nil || IsNil(o.AirDays) {
		var ret []ModelDayOfWeek
		return ret
	}
	return o.AirDays
}

// GetAirDaysOk returns a tuple with the AirDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetAirDaysOk() ([]ModelDayOfWeek, bool) {
	if o == nil || IsNil(o.AirDays) {
		return nil, false
	}
	return o.AirDays, true
}

// HasAirDays returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAirDays() bool {
	if o != nil && !IsNil(o.AirDays) {
		return true
	}

	return false
}

// SetAirDays gets a reference to the given []ModelDayOfWeek and assigns it to the AirDays field.
func (o *ModelBaseItemDto) SetAirDays(v []ModelDayOfWeek) {
	o.AirDays = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ModelBaseItemDto) SetTags(v []string) {
	o.Tags = v
}

// GetPrimaryImageAspectRatio returns the PrimaryImageAspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetPrimaryImageAspectRatio() float64 {
	if o == nil || IsNil(o.PrimaryImageAspectRatio.Get()) {
		var ret float64
		return ret
	}
	return *o.PrimaryImageAspectRatio.Get()
}

// GetPrimaryImageAspectRatioOk returns a tuple with the PrimaryImageAspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetPrimaryImageAspectRatioOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryImageAspectRatio.Get(), o.PrimaryImageAspectRatio.IsSet()
}

// HasPrimaryImageAspectRatio returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPrimaryImageAspectRatio() bool {
	if o != nil && o.PrimaryImageAspectRatio.IsSet() {
		return true
	}

	return false
}

// SetPrimaryImageAspectRatio gets a reference to the given NullableFloat64 and assigns it to the PrimaryImageAspectRatio field.
func (o *ModelBaseItemDto) SetPrimaryImageAspectRatio(v float64) {
	o.PrimaryImageAspectRatio.Set(&v)
}
// SetPrimaryImageAspectRatioNil sets the value for PrimaryImageAspectRatio to be an explicit nil
func (o *ModelBaseItemDto) SetPrimaryImageAspectRatioNil() {
	o.PrimaryImageAspectRatio.Set(nil)
}

// UnsetPrimaryImageAspectRatio ensures that no value is present for PrimaryImageAspectRatio, not even an explicit nil
func (o *ModelBaseItemDto) UnsetPrimaryImageAspectRatio() {
	o.PrimaryImageAspectRatio.Unset()
}

// GetArtists returns the Artists field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetArtists() []string {
	if o == nil || IsNil(o.Artists) {
		var ret []string
		return ret
	}
	return o.Artists
}

// GetArtistsOk returns a tuple with the Artists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetArtistsOk() ([]string, bool) {
	if o == nil || IsNil(o.Artists) {
		return nil, false
	}
	return o.Artists, true
}

// HasArtists returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasArtists() bool {
	if o != nil && !IsNil(o.Artists) {
		return true
	}

	return false
}

// SetArtists gets a reference to the given []string and assigns it to the Artists field.
func (o *ModelBaseItemDto) SetArtists(v []string) {
	o.Artists = v
}

// GetArtistItems returns the ArtistItems field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetArtistItems() []ModelNameIdPair {
	if o == nil || IsNil(o.ArtistItems) {
		var ret []ModelNameIdPair
		return ret
	}
	return o.ArtistItems
}

// GetArtistItemsOk returns a tuple with the ArtistItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetArtistItemsOk() ([]ModelNameIdPair, bool) {
	if o == nil || IsNil(o.ArtistItems) {
		return nil, false
	}
	return o.ArtistItems, true
}

// HasArtistItems returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasArtistItems() bool {
	if o != nil && !IsNil(o.ArtistItems) {
		return true
	}

	return false
}

// SetArtistItems gets a reference to the given []ModelNameIdPair and assigns it to the ArtistItems field.
func (o *ModelBaseItemDto) SetArtistItems(v []ModelNameIdPair) {
	o.ArtistItems = v
}

// GetComposers returns the Composers field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetComposers() []ModelNameIdPair {
	if o == nil || IsNil(o.Composers) {
		var ret []ModelNameIdPair
		return ret
	}
	return o.Composers
}

// GetComposersOk returns a tuple with the Composers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetComposersOk() ([]ModelNameIdPair, bool) {
	if o == nil || IsNil(o.Composers) {
		return nil, false
	}
	return o.Composers, true
}

// HasComposers returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasComposers() bool {
	if o != nil && !IsNil(o.Composers) {
		return true
	}

	return false
}

// SetComposers gets a reference to the given []ModelNameIdPair and assigns it to the Composers field.
func (o *ModelBaseItemDto) SetComposers(v []ModelNameIdPair) {
	o.Composers = v
}

// GetAlbum returns the Album field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetAlbum() string {
	if o == nil || IsNil(o.Album) {
		var ret string
		return ret
	}
	return *o.Album
}

// GetAlbumOk returns a tuple with the Album field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetAlbumOk() (*string, bool) {
	if o == nil || IsNil(o.Album) {
		return nil, false
	}
	return o.Album, true
}

// HasAlbum returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAlbum() bool {
	if o != nil && !IsNil(o.Album) {
		return true
	}

	return false
}

// SetAlbum gets a reference to the given string and assigns it to the Album field.
func (o *ModelBaseItemDto) SetAlbum(v string) {
	o.Album = &v
}

// GetCollectionType returns the CollectionType field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetCollectionType() string {
	if o == nil || IsNil(o.CollectionType) {
		var ret string
		return ret
	}
	return *o.CollectionType
}

// GetCollectionTypeOk returns a tuple with the CollectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetCollectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CollectionType) {
		return nil, false
	}
	return o.CollectionType, true
}

// HasCollectionType returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCollectionType() bool {
	if o != nil && !IsNil(o.CollectionType) {
		return true
	}

	return false
}

// SetCollectionType gets a reference to the given string and assigns it to the CollectionType field.
func (o *ModelBaseItemDto) SetCollectionType(v string) {
	o.CollectionType = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetDisplayOrder() string {
	if o == nil || IsNil(o.DisplayOrder) {
		var ret string
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetDisplayOrderOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayOrder) {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasDisplayOrder() bool {
	if o != nil && !IsNil(o.DisplayOrder) {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given string and assigns it to the DisplayOrder field.
func (o *ModelBaseItemDto) SetDisplayOrder(v string) {
	o.DisplayOrder = &v
}

// GetAlbumId returns the AlbumId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetAlbumId() string {
	if o == nil || IsNil(o.AlbumId) {
		var ret string
		return ret
	}
	return *o.AlbumId
}

// GetAlbumIdOk returns a tuple with the AlbumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetAlbumIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlbumId) {
		return nil, false
	}
	return o.AlbumId, true
}

// HasAlbumId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAlbumId() bool {
	if o != nil && !IsNil(o.AlbumId) {
		return true
	}

	return false
}

// SetAlbumId gets a reference to the given string and assigns it to the AlbumId field.
func (o *ModelBaseItemDto) SetAlbumId(v string) {
	o.AlbumId = &v
}

// GetAlbumPrimaryImageTag returns the AlbumPrimaryImageTag field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetAlbumPrimaryImageTag() string {
	if o == nil || IsNil(o.AlbumPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.AlbumPrimaryImageTag
}

// GetAlbumPrimaryImageTagOk returns a tuple with the AlbumPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetAlbumPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.AlbumPrimaryImageTag) {
		return nil, false
	}
	return o.AlbumPrimaryImageTag, true
}

// HasAlbumPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAlbumPrimaryImageTag() bool {
	if o != nil && !IsNil(o.AlbumPrimaryImageTag) {
		return true
	}

	return false
}

// SetAlbumPrimaryImageTag gets a reference to the given string and assigns it to the AlbumPrimaryImageTag field.
func (o *ModelBaseItemDto) SetAlbumPrimaryImageTag(v string) {
	o.AlbumPrimaryImageTag = &v
}

// GetSeriesPrimaryImageTag returns the SeriesPrimaryImageTag field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSeriesPrimaryImageTag() string {
	if o == nil || IsNil(o.SeriesPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.SeriesPrimaryImageTag
}

// GetSeriesPrimaryImageTagOk returns a tuple with the SeriesPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSeriesPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesPrimaryImageTag) {
		return nil, false
	}
	return o.SeriesPrimaryImageTag, true
}

// HasSeriesPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeriesPrimaryImageTag() bool {
	if o != nil && !IsNil(o.SeriesPrimaryImageTag) {
		return true
	}

	return false
}

// SetSeriesPrimaryImageTag gets a reference to the given string and assigns it to the SeriesPrimaryImageTag field.
func (o *ModelBaseItemDto) SetSeriesPrimaryImageTag(v string) {
	o.SeriesPrimaryImageTag = &v
}

// GetAlbumArtist returns the AlbumArtist field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetAlbumArtist() string {
	if o == nil || IsNil(o.AlbumArtist) {
		var ret string
		return ret
	}
	return *o.AlbumArtist
}

// GetAlbumArtistOk returns a tuple with the AlbumArtist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetAlbumArtistOk() (*string, bool) {
	if o == nil || IsNil(o.AlbumArtist) {
		return nil, false
	}
	return o.AlbumArtist, true
}

// HasAlbumArtist returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAlbumArtist() bool {
	if o != nil && !IsNil(o.AlbumArtist) {
		return true
	}

	return false
}

// SetAlbumArtist gets a reference to the given string and assigns it to the AlbumArtist field.
func (o *ModelBaseItemDto) SetAlbumArtist(v string) {
	o.AlbumArtist = &v
}

// GetAlbumArtists returns the AlbumArtists field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetAlbumArtists() []ModelNameIdPair {
	if o == nil || IsNil(o.AlbumArtists) {
		var ret []ModelNameIdPair
		return ret
	}
	return o.AlbumArtists
}

// GetAlbumArtistsOk returns a tuple with the AlbumArtists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetAlbumArtistsOk() ([]ModelNameIdPair, bool) {
	if o == nil || IsNil(o.AlbumArtists) {
		return nil, false
	}
	return o.AlbumArtists, true
}

// HasAlbumArtists returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAlbumArtists() bool {
	if o != nil && !IsNil(o.AlbumArtists) {
		return true
	}

	return false
}

// SetAlbumArtists gets a reference to the given []ModelNameIdPair and assigns it to the AlbumArtists field.
func (o *ModelBaseItemDto) SetAlbumArtists(v []ModelNameIdPair) {
	o.AlbumArtists = v
}

// GetSeasonName returns the SeasonName field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSeasonName() string {
	if o == nil || IsNil(o.SeasonName) {
		var ret string
		return ret
	}
	return *o.SeasonName
}

// GetSeasonNameOk returns a tuple with the SeasonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSeasonNameOk() (*string, bool) {
	if o == nil || IsNil(o.SeasonName) {
		return nil, false
	}
	return o.SeasonName, true
}

// HasSeasonName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeasonName() bool {
	if o != nil && !IsNil(o.SeasonName) {
		return true
	}

	return false
}

// SetSeasonName gets a reference to the given string and assigns it to the SeasonName field.
func (o *ModelBaseItemDto) SetSeasonName(v string) {
	o.SeasonName = &v
}

// GetMediaStreams returns the MediaStreams field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetMediaStreams() []ModelMediaStream {
	if o == nil || IsNil(o.MediaStreams) {
		var ret []ModelMediaStream
		return ret
	}
	return o.MediaStreams
}

// GetMediaStreamsOk returns a tuple with the MediaStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetMediaStreamsOk() ([]ModelMediaStream, bool) {
	if o == nil || IsNil(o.MediaStreams) {
		return nil, false
	}
	return o.MediaStreams, true
}

// HasMediaStreams returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasMediaStreams() bool {
	if o != nil && !IsNil(o.MediaStreams) {
		return true
	}

	return false
}

// SetMediaStreams gets a reference to the given []ModelMediaStream and assigns it to the MediaStreams field.
func (o *ModelBaseItemDto) SetMediaStreams(v []ModelMediaStream) {
	o.MediaStreams = v
}

// GetPartCount returns the PartCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetPartCount() int32 {
	if o == nil || IsNil(o.PartCount.Get()) {
		var ret int32
		return ret
	}
	return *o.PartCount.Get()
}

// GetPartCountOk returns a tuple with the PartCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetPartCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartCount.Get(), o.PartCount.IsSet()
}

// HasPartCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPartCount() bool {
	if o != nil && o.PartCount.IsSet() {
		return true
	}

	return false
}

// SetPartCount gets a reference to the given NullableInt32 and assigns it to the PartCount field.
func (o *ModelBaseItemDto) SetPartCount(v int32) {
	o.PartCount.Set(&v)
}
// SetPartCountNil sets the value for PartCount to be an explicit nil
func (o *ModelBaseItemDto) SetPartCountNil() {
	o.PartCount.Set(nil)
}

// UnsetPartCount ensures that no value is present for PartCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetPartCount() {
	o.PartCount.Unset()
}

// GetImageTags returns the ImageTags field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetImageTags() map[string]string {
	if o == nil || IsNil(o.ImageTags) {
		var ret map[string]string
		return ret
	}
	return *o.ImageTags
}

// GetImageTagsOk returns a tuple with the ImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetImageTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ImageTags) {
		return nil, false
	}
	return o.ImageTags, true
}

// HasImageTags returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasImageTags() bool {
	if o != nil && !IsNil(o.ImageTags) {
		return true
	}

	return false
}

// SetImageTags gets a reference to the given map[string]string and assigns it to the ImageTags field.
func (o *ModelBaseItemDto) SetImageTags(v map[string]string) {
	o.ImageTags = &v
}

// GetBackdropImageTags returns the BackdropImageTags field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetBackdropImageTags() []string {
	if o == nil || IsNil(o.BackdropImageTags) {
		var ret []string
		return ret
	}
	return o.BackdropImageTags
}

// GetBackdropImageTagsOk returns a tuple with the BackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.BackdropImageTags) {
		return nil, false
	}
	return o.BackdropImageTags, true
}

// HasBackdropImageTags returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasBackdropImageTags() bool {
	if o != nil && !IsNil(o.BackdropImageTags) {
		return true
	}

	return false
}

// SetBackdropImageTags gets a reference to the given []string and assigns it to the BackdropImageTags field.
func (o *ModelBaseItemDto) SetBackdropImageTags(v []string) {
	o.BackdropImageTags = v
}

// GetParentLogoImageTag returns the ParentLogoImageTag field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetParentLogoImageTag() string {
	if o == nil || IsNil(o.ParentLogoImageTag) {
		var ret string
		return ret
	}
	return *o.ParentLogoImageTag
}

// GetParentLogoImageTagOk returns a tuple with the ParentLogoImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetParentLogoImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentLogoImageTag) {
		return nil, false
	}
	return o.ParentLogoImageTag, true
}

// HasParentLogoImageTag returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentLogoImageTag() bool {
	if o != nil && !IsNil(o.ParentLogoImageTag) {
		return true
	}

	return false
}

// SetParentLogoImageTag gets a reference to the given string and assigns it to the ParentLogoImageTag field.
func (o *ModelBaseItemDto) SetParentLogoImageTag(v string) {
	o.ParentLogoImageTag = &v
}

// GetSeriesStudio returns the SeriesStudio field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSeriesStudio() string {
	if o == nil || IsNil(o.SeriesStudio) {
		var ret string
		return ret
	}
	return *o.SeriesStudio
}

// GetSeriesStudioOk returns a tuple with the SeriesStudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSeriesStudioOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesStudio) {
		return nil, false
	}
	return o.SeriesStudio, true
}

// HasSeriesStudio returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeriesStudio() bool {
	if o != nil && !IsNil(o.SeriesStudio) {
		return true
	}

	return false
}

// SetSeriesStudio gets a reference to the given string and assigns it to the SeriesStudio field.
func (o *ModelBaseItemDto) SetSeriesStudio(v string) {
	o.SeriesStudio = &v
}

// GetPrimaryImageItemId returns the PrimaryImageItemId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPrimaryImageItemId() string {
	if o == nil || IsNil(o.PrimaryImageItemId) {
		var ret string
		return ret
	}
	return *o.PrimaryImageItemId
}

// GetPrimaryImageItemIdOk returns a tuple with the PrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPrimaryImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryImageItemId) {
		return nil, false
	}
	return o.PrimaryImageItemId, true
}

// HasPrimaryImageItemId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPrimaryImageItemId() bool {
	if o != nil && !IsNil(o.PrimaryImageItemId) {
		return true
	}

	return false
}

// SetPrimaryImageItemId gets a reference to the given string and assigns it to the PrimaryImageItemId field.
func (o *ModelBaseItemDto) SetPrimaryImageItemId(v string) {
	o.PrimaryImageItemId = &v
}

// GetPrimaryImageTag returns the PrimaryImageTag field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetPrimaryImageTag() string {
	if o == nil || IsNil(o.PrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.PrimaryImageTag
}

// GetPrimaryImageTagOk returns a tuple with the PrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryImageTag) {
		return nil, false
	}
	return o.PrimaryImageTag, true
}

// HasPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasPrimaryImageTag() bool {
	if o != nil && !IsNil(o.PrimaryImageTag) {
		return true
	}

	return false
}

// SetPrimaryImageTag gets a reference to the given string and assigns it to the PrimaryImageTag field.
func (o *ModelBaseItemDto) SetPrimaryImageTag(v string) {
	o.PrimaryImageTag = &v
}

// GetParentThumbItemId returns the ParentThumbItemId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetParentThumbItemId() string {
	if o == nil || IsNil(o.ParentThumbItemId) {
		var ret string
		return ret
	}
	return *o.ParentThumbItemId
}

// GetParentThumbItemIdOk returns a tuple with the ParentThumbItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetParentThumbItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbItemId) {
		return nil, false
	}
	return o.ParentThumbItemId, true
}

// HasParentThumbItemId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentThumbItemId() bool {
	if o != nil && !IsNil(o.ParentThumbItemId) {
		return true
	}

	return false
}

// SetParentThumbItemId gets a reference to the given string and assigns it to the ParentThumbItemId field.
func (o *ModelBaseItemDto) SetParentThumbItemId(v string) {
	o.ParentThumbItemId = &v
}

// GetParentThumbImageTag returns the ParentThumbImageTag field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetParentThumbImageTag() string {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		var ret string
		return ret
	}
	return *o.ParentThumbImageTag
}

// GetParentThumbImageTagOk returns a tuple with the ParentThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetParentThumbImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		return nil, false
	}
	return o.ParentThumbImageTag, true
}

// HasParentThumbImageTag returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasParentThumbImageTag() bool {
	if o != nil && !IsNil(o.ParentThumbImageTag) {
		return true
	}

	return false
}

// SetParentThumbImageTag gets a reference to the given string and assigns it to the ParentThumbImageTag field.
func (o *ModelBaseItemDto) SetParentThumbImageTag(v string) {
	o.ParentThumbImageTag = &v
}

// GetChapters returns the Chapters field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetChapters() []ModelChapterInfo {
	if o == nil || IsNil(o.Chapters) {
		var ret []ModelChapterInfo
		return ret
	}
	return o.Chapters
}

// GetChaptersOk returns a tuple with the Chapters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetChaptersOk() ([]ModelChapterInfo, bool) {
	if o == nil || IsNil(o.Chapters) {
		return nil, false
	}
	return o.Chapters, true
}

// HasChapters returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasChapters() bool {
	if o != nil && !IsNil(o.Chapters) {
		return true
	}

	return false
}

// SetChapters gets a reference to the given []ModelChapterInfo and assigns it to the Chapters field.
func (o *ModelBaseItemDto) SetChapters(v []ModelChapterInfo) {
	o.Chapters = v
}

// GetLocationType returns the LocationType field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetLocationType() ModelLocationType {
	if o == nil || IsNil(o.LocationType) {
		var ret ModelLocationType
		return ret
	}
	return *o.LocationType
}

// GetLocationTypeOk returns a tuple with the LocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetLocationTypeOk() (*ModelLocationType, bool) {
	if o == nil || IsNil(o.LocationType) {
		return nil, false
	}
	return o.LocationType, true
}

// HasLocationType returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasLocationType() bool {
	if o != nil && !IsNil(o.LocationType) {
		return true
	}

	return false
}

// SetLocationType gets a reference to the given ModelLocationType and assigns it to the LocationType field.
func (o *ModelBaseItemDto) SetLocationType(v ModelLocationType) {
	o.LocationType = &v
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetMediaType() string {
	if o == nil || IsNil(o.MediaType) {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *ModelBaseItemDto) SetMediaType(v string) {
	o.MediaType = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *ModelBaseItemDto) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *ModelBaseItemDto) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *ModelBaseItemDto) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetLockedFields returns the LockedFields field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetLockedFields() []ModelMetadataFields {
	if o == nil || IsNil(o.LockedFields) {
		var ret []ModelMetadataFields
		return ret
	}
	return o.LockedFields
}

// GetLockedFieldsOk returns a tuple with the LockedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetLockedFieldsOk() ([]ModelMetadataFields, bool) {
	if o == nil || IsNil(o.LockedFields) {
		return nil, false
	}
	return o.LockedFields, true
}

// HasLockedFields returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasLockedFields() bool {
	if o != nil && !IsNil(o.LockedFields) {
		return true
	}

	return false
}

// SetLockedFields gets a reference to the given []ModelMetadataFields and assigns it to the LockedFields field.
func (o *ModelBaseItemDto) SetLockedFields(v []ModelMetadataFields) {
	o.LockedFields = v
}

// GetLockData returns the LockData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetLockData() bool {
	if o == nil || IsNil(o.LockData.Get()) {
		var ret bool
		return ret
	}
	return *o.LockData.Get()
}

// GetLockDataOk returns a tuple with the LockData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetLockDataOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LockData.Get(), o.LockData.IsSet()
}

// HasLockData returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasLockData() bool {
	if o != nil && o.LockData.IsSet() {
		return true
	}

	return false
}

// SetLockData gets a reference to the given NullableBool and assigns it to the LockData field.
func (o *ModelBaseItemDto) SetLockData(v bool) {
	o.LockData.Set(&v)
}
// SetLockDataNil sets the value for LockData to be an explicit nil
func (o *ModelBaseItemDto) SetLockDataNil() {
	o.LockData.Set(nil)
}

// UnsetLockData ensures that no value is present for LockData, not even an explicit nil
func (o *ModelBaseItemDto) UnsetLockData() {
	o.LockData.Unset()
}

// GetWidth returns the Width field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetWidth() int32 {
	if o == nil || IsNil(o.Width.Get()) {
		var ret int32
		return ret
	}
	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// HasWidth returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasWidth() bool {
	if o != nil && o.Width.IsSet() {
		return true
	}

	return false
}

// SetWidth gets a reference to the given NullableInt32 and assigns it to the Width field.
func (o *ModelBaseItemDto) SetWidth(v int32) {
	o.Width.Set(&v)
}
// SetWidthNil sets the value for Width to be an explicit nil
func (o *ModelBaseItemDto) SetWidthNil() {
	o.Width.Set(nil)
}

// UnsetWidth ensures that no value is present for Width, not even an explicit nil
func (o *ModelBaseItemDto) UnsetWidth() {
	o.Width.Unset()
}

// GetHeight returns the Height field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetHeight() int32 {
	if o == nil || IsNil(o.Height.Get()) {
		var ret int32
		return ret
	}
	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// HasHeight returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasHeight() bool {
	if o != nil && o.Height.IsSet() {
		return true
	}

	return false
}

// SetHeight gets a reference to the given NullableInt32 and assigns it to the Height field.
func (o *ModelBaseItemDto) SetHeight(v int32) {
	o.Height.Set(&v)
}
// SetHeightNil sets the value for Height to be an explicit nil
func (o *ModelBaseItemDto) SetHeightNil() {
	o.Height.Set(nil)
}

// UnsetHeight ensures that no value is present for Height, not even an explicit nil
func (o *ModelBaseItemDto) UnsetHeight() {
	o.Height.Unset()
}

// GetCameraMake returns the CameraMake field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetCameraMake() string {
	if o == nil || IsNil(o.CameraMake) {
		var ret string
		return ret
	}
	return *o.CameraMake
}

// GetCameraMakeOk returns a tuple with the CameraMake field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetCameraMakeOk() (*string, bool) {
	if o == nil || IsNil(o.CameraMake) {
		return nil, false
	}
	return o.CameraMake, true
}

// HasCameraMake returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCameraMake() bool {
	if o != nil && !IsNil(o.CameraMake) {
		return true
	}

	return false
}

// SetCameraMake gets a reference to the given string and assigns it to the CameraMake field.
func (o *ModelBaseItemDto) SetCameraMake(v string) {
	o.CameraMake = &v
}

// GetCameraModel returns the CameraModel field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetCameraModel() string {
	if o == nil || IsNil(o.CameraModel) {
		var ret string
		return ret
	}
	return *o.CameraModel
}

// GetCameraModelOk returns a tuple with the CameraModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetCameraModelOk() (*string, bool) {
	if o == nil || IsNil(o.CameraModel) {
		return nil, false
	}
	return o.CameraModel, true
}

// HasCameraModel returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCameraModel() bool {
	if o != nil && !IsNil(o.CameraModel) {
		return true
	}

	return false
}

// SetCameraModel gets a reference to the given string and assigns it to the CameraModel field.
func (o *ModelBaseItemDto) SetCameraModel(v string) {
	o.CameraModel = &v
}

// GetSoftware returns the Software field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSoftware() string {
	if o == nil || IsNil(o.Software) {
		var ret string
		return ret
	}
	return *o.Software
}

// GetSoftwareOk returns a tuple with the Software field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSoftwareOk() (*string, bool) {
	if o == nil || IsNil(o.Software) {
		return nil, false
	}
	return o.Software, true
}

// HasSoftware returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSoftware() bool {
	if o != nil && !IsNil(o.Software) {
		return true
	}

	return false
}

// SetSoftware gets a reference to the given string and assigns it to the Software field.
func (o *ModelBaseItemDto) SetSoftware(v string) {
	o.Software = &v
}

// GetExposureTime returns the ExposureTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetExposureTime() float64 {
	if o == nil || IsNil(o.ExposureTime.Get()) {
		var ret float64
		return ret
	}
	return *o.ExposureTime.Get()
}

// GetExposureTimeOk returns a tuple with the ExposureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetExposureTimeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExposureTime.Get(), o.ExposureTime.IsSet()
}

// HasExposureTime returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasExposureTime() bool {
	if o != nil && o.ExposureTime.IsSet() {
		return true
	}

	return false
}

// SetExposureTime gets a reference to the given NullableFloat64 and assigns it to the ExposureTime field.
func (o *ModelBaseItemDto) SetExposureTime(v float64) {
	o.ExposureTime.Set(&v)
}
// SetExposureTimeNil sets the value for ExposureTime to be an explicit nil
func (o *ModelBaseItemDto) SetExposureTimeNil() {
	o.ExposureTime.Set(nil)
}

// UnsetExposureTime ensures that no value is present for ExposureTime, not even an explicit nil
func (o *ModelBaseItemDto) UnsetExposureTime() {
	o.ExposureTime.Unset()
}

// GetFocalLength returns the FocalLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetFocalLength() float64 {
	if o == nil || IsNil(o.FocalLength.Get()) {
		var ret float64
		return ret
	}
	return *o.FocalLength.Get()
}

// GetFocalLengthOk returns a tuple with the FocalLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetFocalLengthOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FocalLength.Get(), o.FocalLength.IsSet()
}

// HasFocalLength returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasFocalLength() bool {
	if o != nil && o.FocalLength.IsSet() {
		return true
	}

	return false
}

// SetFocalLength gets a reference to the given NullableFloat64 and assigns it to the FocalLength field.
func (o *ModelBaseItemDto) SetFocalLength(v float64) {
	o.FocalLength.Set(&v)
}
// SetFocalLengthNil sets the value for FocalLength to be an explicit nil
func (o *ModelBaseItemDto) SetFocalLengthNil() {
	o.FocalLength.Set(nil)
}

// UnsetFocalLength ensures that no value is present for FocalLength, not even an explicit nil
func (o *ModelBaseItemDto) UnsetFocalLength() {
	o.FocalLength.Unset()
}

// GetImageOrientation returns the ImageOrientation field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetImageOrientation() ModelDrawingImageOrientation {
	if o == nil || IsNil(o.ImageOrientation) {
		var ret ModelDrawingImageOrientation
		return ret
	}
	return *o.ImageOrientation
}

// GetImageOrientationOk returns a tuple with the ImageOrientation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetImageOrientationOk() (*ModelDrawingImageOrientation, bool) {
	if o == nil || IsNil(o.ImageOrientation) {
		return nil, false
	}
	return o.ImageOrientation, true
}

// HasImageOrientation returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasImageOrientation() bool {
	if o != nil && !IsNil(o.ImageOrientation) {
		return true
	}

	return false
}

// SetImageOrientation gets a reference to the given ModelDrawingImageOrientation and assigns it to the ImageOrientation field.
func (o *ModelBaseItemDto) SetImageOrientation(v ModelDrawingImageOrientation) {
	o.ImageOrientation = &v
}

// GetAperture returns the Aperture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetAperture() float64 {
	if o == nil || IsNil(o.Aperture.Get()) {
		var ret float64
		return ret
	}
	return *o.Aperture.Get()
}

// GetApertureOk returns a tuple with the Aperture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetApertureOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aperture.Get(), o.Aperture.IsSet()
}

// HasAperture returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAperture() bool {
	if o != nil && o.Aperture.IsSet() {
		return true
	}

	return false
}

// SetAperture gets a reference to the given NullableFloat64 and assigns it to the Aperture field.
func (o *ModelBaseItemDto) SetAperture(v float64) {
	o.Aperture.Set(&v)
}
// SetApertureNil sets the value for Aperture to be an explicit nil
func (o *ModelBaseItemDto) SetApertureNil() {
	o.Aperture.Set(nil)
}

// UnsetAperture ensures that no value is present for Aperture, not even an explicit nil
func (o *ModelBaseItemDto) UnsetAperture() {
	o.Aperture.Unset()
}

// GetShutterSpeed returns the ShutterSpeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetShutterSpeed() float64 {
	if o == nil || IsNil(o.ShutterSpeed.Get()) {
		var ret float64
		return ret
	}
	return *o.ShutterSpeed.Get()
}

// GetShutterSpeedOk returns a tuple with the ShutterSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetShutterSpeedOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShutterSpeed.Get(), o.ShutterSpeed.IsSet()
}

// HasShutterSpeed returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasShutterSpeed() bool {
	if o != nil && o.ShutterSpeed.IsSet() {
		return true
	}

	return false
}

// SetShutterSpeed gets a reference to the given NullableFloat64 and assigns it to the ShutterSpeed field.
func (o *ModelBaseItemDto) SetShutterSpeed(v float64) {
	o.ShutterSpeed.Set(&v)
}
// SetShutterSpeedNil sets the value for ShutterSpeed to be an explicit nil
func (o *ModelBaseItemDto) SetShutterSpeedNil() {
	o.ShutterSpeed.Set(nil)
}

// UnsetShutterSpeed ensures that no value is present for ShutterSpeed, not even an explicit nil
func (o *ModelBaseItemDto) UnsetShutterSpeed() {
	o.ShutterSpeed.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableFloat64 and assigns it to the Latitude field.
func (o *ModelBaseItemDto) SetLatitude(v float64) {
	o.Latitude.Set(&v)
}
// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *ModelBaseItemDto) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *ModelBaseItemDto) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableFloat64 and assigns it to the Longitude field.
func (o *ModelBaseItemDto) SetLongitude(v float64) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *ModelBaseItemDto) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *ModelBaseItemDto) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetAltitude returns the Altitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetAltitude() float64 {
	if o == nil || IsNil(o.Altitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Altitude.Get()
}

// GetAltitudeOk returns a tuple with the Altitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetAltitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Altitude.Get(), o.Altitude.IsSet()
}

// HasAltitude returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAltitude() bool {
	if o != nil && o.Altitude.IsSet() {
		return true
	}

	return false
}

// SetAltitude gets a reference to the given NullableFloat64 and assigns it to the Altitude field.
func (o *ModelBaseItemDto) SetAltitude(v float64) {
	o.Altitude.Set(&v)
}
// SetAltitudeNil sets the value for Altitude to be an explicit nil
func (o *ModelBaseItemDto) SetAltitudeNil() {
	o.Altitude.Set(nil)
}

// UnsetAltitude ensures that no value is present for Altitude, not even an explicit nil
func (o *ModelBaseItemDto) UnsetAltitude() {
	o.Altitude.Unset()
}

// GetIsoSpeedRating returns the IsoSpeedRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsoSpeedRating() int32 {
	if o == nil || IsNil(o.IsoSpeedRating.Get()) {
		var ret int32
		return ret
	}
	return *o.IsoSpeedRating.Get()
}

// GetIsoSpeedRatingOk returns a tuple with the IsoSpeedRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsoSpeedRatingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsoSpeedRating.Get(), o.IsoSpeedRating.IsSet()
}

// HasIsoSpeedRating returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsoSpeedRating() bool {
	if o != nil && o.IsoSpeedRating.IsSet() {
		return true
	}

	return false
}

// SetIsoSpeedRating gets a reference to the given NullableInt32 and assigns it to the IsoSpeedRating field.
func (o *ModelBaseItemDto) SetIsoSpeedRating(v int32) {
	o.IsoSpeedRating.Set(&v)
}
// SetIsoSpeedRatingNil sets the value for IsoSpeedRating to be an explicit nil
func (o *ModelBaseItemDto) SetIsoSpeedRatingNil() {
	o.IsoSpeedRating.Set(nil)
}

// UnsetIsoSpeedRating ensures that no value is present for IsoSpeedRating, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsoSpeedRating() {
	o.IsoSpeedRating.Unset()
}

// GetSeriesTimerId returns the SeriesTimerId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSeriesTimerId() string {
	if o == nil || IsNil(o.SeriesTimerId) {
		var ret string
		return ret
	}
	return *o.SeriesTimerId
}

// GetSeriesTimerIdOk returns a tuple with the SeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSeriesTimerIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesTimerId) {
		return nil, false
	}
	return o.SeriesTimerId, true
}

// HasSeriesTimerId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeriesTimerId() bool {
	if o != nil && !IsNil(o.SeriesTimerId) {
		return true
	}

	return false
}

// SetSeriesTimerId gets a reference to the given string and assigns it to the SeriesTimerId field.
func (o *ModelBaseItemDto) SetSeriesTimerId(v string) {
	o.SeriesTimerId = &v
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		return nil, false
	}
	return o.ChannelPrimaryImageTag, true
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasChannelPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ChannelPrimaryImageTag) {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given string and assigns it to the ChannelPrimaryImageTag field.
func (o *ModelBaseItemDto) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableTime and assigns it to the StartDate field.
func (o *ModelBaseItemDto) SetStartDate(v time.Time) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *ModelBaseItemDto) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *ModelBaseItemDto) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetCompletionPercentage returns the CompletionPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetCompletionPercentage() float64 {
	if o == nil || IsNil(o.CompletionPercentage.Get()) {
		var ret float64
		return ret
	}
	return *o.CompletionPercentage.Get()
}

// GetCompletionPercentageOk returns a tuple with the CompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetCompletionPercentageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletionPercentage.Get(), o.CompletionPercentage.IsSet()
}

// HasCompletionPercentage returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCompletionPercentage() bool {
	if o != nil && o.CompletionPercentage.IsSet() {
		return true
	}

	return false
}

// SetCompletionPercentage gets a reference to the given NullableFloat64 and assigns it to the CompletionPercentage field.
func (o *ModelBaseItemDto) SetCompletionPercentage(v float64) {
	o.CompletionPercentage.Set(&v)
}
// SetCompletionPercentageNil sets the value for CompletionPercentage to be an explicit nil
func (o *ModelBaseItemDto) SetCompletionPercentageNil() {
	o.CompletionPercentage.Set(nil)
}

// UnsetCompletionPercentage ensures that no value is present for CompletionPercentage, not even an explicit nil
func (o *ModelBaseItemDto) UnsetCompletionPercentage() {
	o.CompletionPercentage.Unset()
}

// GetIsRepeat returns the IsRepeat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsRepeat() bool {
	if o == nil || IsNil(o.IsRepeat.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRepeat.Get()
}

// GetIsRepeatOk returns a tuple with the IsRepeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsRepeatOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRepeat.Get(), o.IsRepeat.IsSet()
}

// HasIsRepeat returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsRepeat() bool {
	if o != nil && o.IsRepeat.IsSet() {
		return true
	}

	return false
}

// SetIsRepeat gets a reference to the given NullableBool and assigns it to the IsRepeat field.
func (o *ModelBaseItemDto) SetIsRepeat(v bool) {
	o.IsRepeat.Set(&v)
}
// SetIsRepeatNil sets the value for IsRepeat to be an explicit nil
func (o *ModelBaseItemDto) SetIsRepeatNil() {
	o.IsRepeat.Set(nil)
}

// UnsetIsRepeat ensures that no value is present for IsRepeat, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsRepeat() {
	o.IsRepeat.Unset()
}

// GetIsNew returns the IsNew field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsNew() bool {
	if o == nil || IsNil(o.IsNew.Get()) {
		var ret bool
		return ret
	}
	return *o.IsNew.Get()
}

// GetIsNewOk returns a tuple with the IsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsNewOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsNew.Get(), o.IsNew.IsSet()
}

// HasIsNew returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsNew() bool {
	if o != nil && o.IsNew.IsSet() {
		return true
	}

	return false
}

// SetIsNew gets a reference to the given NullableBool and assigns it to the IsNew field.
func (o *ModelBaseItemDto) SetIsNew(v bool) {
	o.IsNew.Set(&v)
}
// SetIsNewNil sets the value for IsNew to be an explicit nil
func (o *ModelBaseItemDto) SetIsNewNil() {
	o.IsNew.Set(nil)
}

// UnsetIsNew ensures that no value is present for IsNew, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsNew() {
	o.IsNew.Unset()
}

// GetEpisodeTitle returns the EpisodeTitle field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetEpisodeTitle() string {
	if o == nil || IsNil(o.EpisodeTitle) {
		var ret string
		return ret
	}
	return *o.EpisodeTitle
}

// GetEpisodeTitleOk returns a tuple with the EpisodeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetEpisodeTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EpisodeTitle) {
		return nil, false
	}
	return o.EpisodeTitle, true
}

// HasEpisodeTitle returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasEpisodeTitle() bool {
	if o != nil && !IsNil(o.EpisodeTitle) {
		return true
	}

	return false
}

// SetEpisodeTitle gets a reference to the given string and assigns it to the EpisodeTitle field.
func (o *ModelBaseItemDto) SetEpisodeTitle(v string) {
	o.EpisodeTitle = &v
}

// GetIsMovie returns the IsMovie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsMovie() bool {
	if o == nil || IsNil(o.IsMovie.Get()) {
		var ret bool
		return ret
	}
	return *o.IsMovie.Get()
}

// GetIsMovieOk returns a tuple with the IsMovie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsMovieOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsMovie.Get(), o.IsMovie.IsSet()
}

// HasIsMovie returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsMovie() bool {
	if o != nil && o.IsMovie.IsSet() {
		return true
	}

	return false
}

// SetIsMovie gets a reference to the given NullableBool and assigns it to the IsMovie field.
func (o *ModelBaseItemDto) SetIsMovie(v bool) {
	o.IsMovie.Set(&v)
}
// SetIsMovieNil sets the value for IsMovie to be an explicit nil
func (o *ModelBaseItemDto) SetIsMovieNil() {
	o.IsMovie.Set(nil)
}

// UnsetIsMovie ensures that no value is present for IsMovie, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsMovie() {
	o.IsMovie.Unset()
}

// GetIsSports returns the IsSports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsSports() bool {
	if o == nil || IsNil(o.IsSports.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSports.Get()
}

// GetIsSportsOk returns a tuple with the IsSports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsSportsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSports.Get(), o.IsSports.IsSet()
}

// HasIsSports returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsSports() bool {
	if o != nil && o.IsSports.IsSet() {
		return true
	}

	return false
}

// SetIsSports gets a reference to the given NullableBool and assigns it to the IsSports field.
func (o *ModelBaseItemDto) SetIsSports(v bool) {
	o.IsSports.Set(&v)
}
// SetIsSportsNil sets the value for IsSports to be an explicit nil
func (o *ModelBaseItemDto) SetIsSportsNil() {
	o.IsSports.Set(nil)
}

// UnsetIsSports ensures that no value is present for IsSports, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsSports() {
	o.IsSports.Unset()
}

// GetIsSeries returns the IsSeries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsSeries() bool {
	if o == nil || IsNil(o.IsSeries.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSeries.Get()
}

// GetIsSeriesOk returns a tuple with the IsSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsSeriesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSeries.Get(), o.IsSeries.IsSet()
}

// HasIsSeries returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsSeries() bool {
	if o != nil && o.IsSeries.IsSet() {
		return true
	}

	return false
}

// SetIsSeries gets a reference to the given NullableBool and assigns it to the IsSeries field.
func (o *ModelBaseItemDto) SetIsSeries(v bool) {
	o.IsSeries.Set(&v)
}
// SetIsSeriesNil sets the value for IsSeries to be an explicit nil
func (o *ModelBaseItemDto) SetIsSeriesNil() {
	o.IsSeries.Set(nil)
}

// UnsetIsSeries ensures that no value is present for IsSeries, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsSeries() {
	o.IsSeries.Unset()
}

// GetIsLive returns the IsLive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsLive() bool {
	if o == nil || IsNil(o.IsLive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsLive.Get()
}

// GetIsLiveOk returns a tuple with the IsLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsLiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsLive.Get(), o.IsLive.IsSet()
}

// HasIsLive returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsLive() bool {
	if o != nil && o.IsLive.IsSet() {
		return true
	}

	return false
}

// SetIsLive gets a reference to the given NullableBool and assigns it to the IsLive field.
func (o *ModelBaseItemDto) SetIsLive(v bool) {
	o.IsLive.Set(&v)
}
// SetIsLiveNil sets the value for IsLive to be an explicit nil
func (o *ModelBaseItemDto) SetIsLiveNil() {
	o.IsLive.Set(nil)
}

// UnsetIsLive ensures that no value is present for IsLive, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsLive() {
	o.IsLive.Unset()
}

// GetIsNews returns the IsNews field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsNews() bool {
	if o == nil || IsNil(o.IsNews.Get()) {
		var ret bool
		return ret
	}
	return *o.IsNews.Get()
}

// GetIsNewsOk returns a tuple with the IsNews field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsNewsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsNews.Get(), o.IsNews.IsSet()
}

// HasIsNews returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsNews() bool {
	if o != nil && o.IsNews.IsSet() {
		return true
	}

	return false
}

// SetIsNews gets a reference to the given NullableBool and assigns it to the IsNews field.
func (o *ModelBaseItemDto) SetIsNews(v bool) {
	o.IsNews.Set(&v)
}
// SetIsNewsNil sets the value for IsNews to be an explicit nil
func (o *ModelBaseItemDto) SetIsNewsNil() {
	o.IsNews.Set(nil)
}

// UnsetIsNews ensures that no value is present for IsNews, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsNews() {
	o.IsNews.Unset()
}

// GetIsKids returns the IsKids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsKids() bool {
	if o == nil || IsNil(o.IsKids.Get()) {
		var ret bool
		return ret
	}
	return *o.IsKids.Get()
}

// GetIsKidsOk returns a tuple with the IsKids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsKidsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsKids.Get(), o.IsKids.IsSet()
}

// HasIsKids returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsKids() bool {
	if o != nil && o.IsKids.IsSet() {
		return true
	}

	return false
}

// SetIsKids gets a reference to the given NullableBool and assigns it to the IsKids field.
func (o *ModelBaseItemDto) SetIsKids(v bool) {
	o.IsKids.Set(&v)
}
// SetIsKidsNil sets the value for IsKids to be an explicit nil
func (o *ModelBaseItemDto) SetIsKidsNil() {
	o.IsKids.Set(nil)
}

// UnsetIsKids ensures that no value is present for IsKids, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsKids() {
	o.IsKids.Unset()
}

// GetIsPremiere returns the IsPremiere field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetIsPremiere() bool {
	if o == nil || IsNil(o.IsPremiere.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPremiere.Get()
}

// GetIsPremiereOk returns a tuple with the IsPremiere field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetIsPremiereOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPremiere.Get(), o.IsPremiere.IsSet()
}

// HasIsPremiere returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasIsPremiere() bool {
	if o != nil && o.IsPremiere.IsSet() {
		return true
	}

	return false
}

// SetIsPremiere gets a reference to the given NullableBool and assigns it to the IsPremiere field.
func (o *ModelBaseItemDto) SetIsPremiere(v bool) {
	o.IsPremiere.Set(&v)
}
// SetIsPremiereNil sets the value for IsPremiere to be an explicit nil
func (o *ModelBaseItemDto) SetIsPremiereNil() {
	o.IsPremiere.Set(nil)
}

// UnsetIsPremiere ensures that no value is present for IsPremiere, not even an explicit nil
func (o *ModelBaseItemDto) UnsetIsPremiere() {
	o.IsPremiere.Unset()
}

// GetTimerType returns the TimerType field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetTimerType() ModelLiveTvTimerType {
	if o == nil || IsNil(o.TimerType) {
		var ret ModelLiveTvTimerType
		return ret
	}
	return *o.TimerType
}

// GetTimerTypeOk returns a tuple with the TimerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetTimerTypeOk() (*ModelLiveTvTimerType, bool) {
	if o == nil || IsNil(o.TimerType) {
		return nil, false
	}
	return o.TimerType, true
}

// HasTimerType returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasTimerType() bool {
	if o != nil && !IsNil(o.TimerType) {
		return true
	}

	return false
}

// SetTimerType gets a reference to the given ModelLiveTvTimerType and assigns it to the TimerType field.
func (o *ModelBaseItemDto) SetTimerType(v ModelLiveTvTimerType) {
	o.TimerType = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Disabled.Get()
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Disabled.Get(), o.Disabled.IsSet()
}

// HasDisabled returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasDisabled() bool {
	if o != nil && o.Disabled.IsSet() {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given NullableBool and assigns it to the Disabled field.
func (o *ModelBaseItemDto) SetDisabled(v bool) {
	o.Disabled.Set(&v)
}
// SetDisabledNil sets the value for Disabled to be an explicit nil
func (o *ModelBaseItemDto) SetDisabledNil() {
	o.Disabled.Set(nil)
}

// UnsetDisabled ensures that no value is present for Disabled, not even an explicit nil
func (o *ModelBaseItemDto) UnsetDisabled() {
	o.Disabled.Unset()
}

// GetManagementId returns the ManagementId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetManagementId() string {
	if o == nil || IsNil(o.ManagementId) {
		var ret string
		return ret
	}
	return *o.ManagementId
}

// GetManagementIdOk returns a tuple with the ManagementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetManagementIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementId) {
		return nil, false
	}
	return o.ManagementId, true
}

// HasManagementId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasManagementId() bool {
	if o != nil && !IsNil(o.ManagementId) {
		return true
	}

	return false
}

// SetManagementId gets a reference to the given string and assigns it to the ManagementId field.
func (o *ModelBaseItemDto) SetManagementId(v string) {
	o.ManagementId = &v
}

// GetTimerId returns the TimerId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetTimerId() string {
	if o == nil || IsNil(o.TimerId) {
		var ret string
		return ret
	}
	return *o.TimerId
}

// GetTimerIdOk returns a tuple with the TimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetTimerIdOk() (*string, bool) {
	if o == nil || IsNil(o.TimerId) {
		return nil, false
	}
	return o.TimerId, true
}

// HasTimerId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasTimerId() bool {
	if o != nil && !IsNil(o.TimerId) {
		return true
	}

	return false
}

// SetTimerId gets a reference to the given string and assigns it to the TimerId field.
func (o *ModelBaseItemDto) SetTimerId(v string) {
	o.TimerId = &v
}

// GetCurrentProgram returns the CurrentProgram field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetCurrentProgram() ModelBaseItemDto {
	if o == nil || IsNil(o.CurrentProgram) {
		var ret ModelBaseItemDto
		return ret
	}
	return *o.CurrentProgram
}

// GetCurrentProgramOk returns a tuple with the CurrentProgram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetCurrentProgramOk() (*ModelBaseItemDto, bool) {
	if o == nil || IsNil(o.CurrentProgram) {
		return nil, false
	}
	return o.CurrentProgram, true
}

// HasCurrentProgram returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasCurrentProgram() bool {
	if o != nil && !IsNil(o.CurrentProgram) {
		return true
	}

	return false
}

// SetCurrentProgram gets a reference to the given ModelBaseItemDto and assigns it to the CurrentProgram field.
func (o *ModelBaseItemDto) SetCurrentProgram(v ModelBaseItemDto) {
	o.CurrentProgram = &v
}

// GetMovieCount returns the MovieCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetMovieCount() int32 {
	if o == nil || IsNil(o.MovieCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MovieCount.Get()
}

// GetMovieCountOk returns a tuple with the MovieCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetMovieCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MovieCount.Get(), o.MovieCount.IsSet()
}

// HasMovieCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasMovieCount() bool {
	if o != nil && o.MovieCount.IsSet() {
		return true
	}

	return false
}

// SetMovieCount gets a reference to the given NullableInt32 and assigns it to the MovieCount field.
func (o *ModelBaseItemDto) SetMovieCount(v int32) {
	o.MovieCount.Set(&v)
}
// SetMovieCountNil sets the value for MovieCount to be an explicit nil
func (o *ModelBaseItemDto) SetMovieCountNil() {
	o.MovieCount.Set(nil)
}

// UnsetMovieCount ensures that no value is present for MovieCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetMovieCount() {
	o.MovieCount.Unset()
}

// GetSeriesCount returns the SeriesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSeriesCount() int32 {
	if o == nil || IsNil(o.SeriesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SeriesCount.Get()
}

// GetSeriesCountOk returns a tuple with the SeriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSeriesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesCount.Get(), o.SeriesCount.IsSet()
}

// HasSeriesCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSeriesCount() bool {
	if o != nil && o.SeriesCount.IsSet() {
		return true
	}

	return false
}

// SetSeriesCount gets a reference to the given NullableInt32 and assigns it to the SeriesCount field.
func (o *ModelBaseItemDto) SetSeriesCount(v int32) {
	o.SeriesCount.Set(&v)
}
// SetSeriesCountNil sets the value for SeriesCount to be an explicit nil
func (o *ModelBaseItemDto) SetSeriesCountNil() {
	o.SeriesCount.Set(nil)
}

// UnsetSeriesCount ensures that no value is present for SeriesCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSeriesCount() {
	o.SeriesCount.Unset()
}

// GetAlbumCount returns the AlbumCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetAlbumCount() int32 {
	if o == nil || IsNil(o.AlbumCount.Get()) {
		var ret int32
		return ret
	}
	return *o.AlbumCount.Get()
}

// GetAlbumCountOk returns a tuple with the AlbumCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetAlbumCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumCount.Get(), o.AlbumCount.IsSet()
}

// HasAlbumCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAlbumCount() bool {
	if o != nil && o.AlbumCount.IsSet() {
		return true
	}

	return false
}

// SetAlbumCount gets a reference to the given NullableInt32 and assigns it to the AlbumCount field.
func (o *ModelBaseItemDto) SetAlbumCount(v int32) {
	o.AlbumCount.Set(&v)
}
// SetAlbumCountNil sets the value for AlbumCount to be an explicit nil
func (o *ModelBaseItemDto) SetAlbumCountNil() {
	o.AlbumCount.Set(nil)
}

// UnsetAlbumCount ensures that no value is present for AlbumCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetAlbumCount() {
	o.AlbumCount.Unset()
}

// GetSongCount returns the SongCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetSongCount() int32 {
	if o == nil || IsNil(o.SongCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SongCount.Get()
}

// GetSongCountOk returns a tuple with the SongCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetSongCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SongCount.Get(), o.SongCount.IsSet()
}

// HasSongCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSongCount() bool {
	if o != nil && o.SongCount.IsSet() {
		return true
	}

	return false
}

// SetSongCount gets a reference to the given NullableInt32 and assigns it to the SongCount field.
func (o *ModelBaseItemDto) SetSongCount(v int32) {
	o.SongCount.Set(&v)
}
// SetSongCountNil sets the value for SongCount to be an explicit nil
func (o *ModelBaseItemDto) SetSongCountNil() {
	o.SongCount.Set(nil)
}

// UnsetSongCount ensures that no value is present for SongCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetSongCount() {
	o.SongCount.Unset()
}

// GetMusicVideoCount returns the MusicVideoCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelBaseItemDto) GetMusicVideoCount() int32 {
	if o == nil || IsNil(o.MusicVideoCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MusicVideoCount.Get()
}

// GetMusicVideoCountOk returns a tuple with the MusicVideoCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelBaseItemDto) GetMusicVideoCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MusicVideoCount.Get(), o.MusicVideoCount.IsSet()
}

// HasMusicVideoCount returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasMusicVideoCount() bool {
	if o != nil && o.MusicVideoCount.IsSet() {
		return true
	}

	return false
}

// SetMusicVideoCount gets a reference to the given NullableInt32 and assigns it to the MusicVideoCount field.
func (o *ModelBaseItemDto) SetMusicVideoCount(v int32) {
	o.MusicVideoCount.Set(&v)
}
// SetMusicVideoCountNil sets the value for MusicVideoCount to be an explicit nil
func (o *ModelBaseItemDto) SetMusicVideoCountNil() {
	o.MusicVideoCount.Set(nil)
}

// UnsetMusicVideoCount ensures that no value is present for MusicVideoCount, not even an explicit nil
func (o *ModelBaseItemDto) UnsetMusicVideoCount() {
	o.MusicVideoCount.Unset()
}

// GetSubviews returns the Subviews field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetSubviews() []string {
	if o == nil || IsNil(o.Subviews) {
		var ret []string
		return ret
	}
	return o.Subviews
}

// GetSubviewsOk returns a tuple with the Subviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetSubviewsOk() ([]string, bool) {
	if o == nil || IsNil(o.Subviews) {
		return nil, false
	}
	return o.Subviews, true
}

// HasSubviews returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasSubviews() bool {
	if o != nil && !IsNil(o.Subviews) {
		return true
	}

	return false
}

// SetSubviews gets a reference to the given []string and assigns it to the Subviews field.
func (o *ModelBaseItemDto) SetSubviews(v []string) {
	o.Subviews = v
}

// GetListingsProviderId returns the ListingsProviderId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetListingsProviderId() string {
	if o == nil || IsNil(o.ListingsProviderId) {
		var ret string
		return ret
	}
	return *o.ListingsProviderId
}

// GetListingsProviderIdOk returns a tuple with the ListingsProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetListingsProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListingsProviderId) {
		return nil, false
	}
	return o.ListingsProviderId, true
}

// HasListingsProviderId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasListingsProviderId() bool {
	if o != nil && !IsNil(o.ListingsProviderId) {
		return true
	}

	return false
}

// SetListingsProviderId gets a reference to the given string and assigns it to the ListingsProviderId field.
func (o *ModelBaseItemDto) SetListingsProviderId(v string) {
	o.ListingsProviderId = &v
}

// GetListingsChannelId returns the ListingsChannelId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetListingsChannelId() string {
	if o == nil || IsNil(o.ListingsChannelId) {
		var ret string
		return ret
	}
	return *o.ListingsChannelId
}

// GetListingsChannelIdOk returns a tuple with the ListingsChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetListingsChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListingsChannelId) {
		return nil, false
	}
	return o.ListingsChannelId, true
}

// HasListingsChannelId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasListingsChannelId() bool {
	if o != nil && !IsNil(o.ListingsChannelId) {
		return true
	}

	return false
}

// SetListingsChannelId gets a reference to the given string and assigns it to the ListingsChannelId field.
func (o *ModelBaseItemDto) SetListingsChannelId(v string) {
	o.ListingsChannelId = &v
}

// GetListingsPath returns the ListingsPath field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetListingsPath() string {
	if o == nil || IsNil(o.ListingsPath) {
		var ret string
		return ret
	}
	return *o.ListingsPath
}

// GetListingsPathOk returns a tuple with the ListingsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetListingsPathOk() (*string, bool) {
	if o == nil || IsNil(o.ListingsPath) {
		return nil, false
	}
	return o.ListingsPath, true
}

// HasListingsPath returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasListingsPath() bool {
	if o != nil && !IsNil(o.ListingsPath) {
		return true
	}

	return false
}

// SetListingsPath gets a reference to the given string and assigns it to the ListingsPath field.
func (o *ModelBaseItemDto) SetListingsPath(v string) {
	o.ListingsPath = &v
}

// GetListingsId returns the ListingsId field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetListingsId() string {
	if o == nil || IsNil(o.ListingsId) {
		var ret string
		return ret
	}
	return *o.ListingsId
}

// GetListingsIdOk returns a tuple with the ListingsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetListingsIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListingsId) {
		return nil, false
	}
	return o.ListingsId, true
}

// HasListingsId returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasListingsId() bool {
	if o != nil && !IsNil(o.ListingsId) {
		return true
	}

	return false
}

// SetListingsId gets a reference to the given string and assigns it to the ListingsId field.
func (o *ModelBaseItemDto) SetListingsId(v string) {
	o.ListingsId = &v
}

// GetListingsChannelName returns the ListingsChannelName field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetListingsChannelName() string {
	if o == nil || IsNil(o.ListingsChannelName) {
		var ret string
		return ret
	}
	return *o.ListingsChannelName
}

// GetListingsChannelNameOk returns a tuple with the ListingsChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetListingsChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ListingsChannelName) {
		return nil, false
	}
	return o.ListingsChannelName, true
}

// HasListingsChannelName returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasListingsChannelName() bool {
	if o != nil && !IsNil(o.ListingsChannelName) {
		return true
	}

	return false
}

// SetListingsChannelName gets a reference to the given string and assigns it to the ListingsChannelName field.
func (o *ModelBaseItemDto) SetListingsChannelName(v string) {
	o.ListingsChannelName = &v
}

// GetListingsChannelNumber returns the ListingsChannelNumber field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetListingsChannelNumber() string {
	if o == nil || IsNil(o.ListingsChannelNumber) {
		var ret string
		return ret
	}
	return *o.ListingsChannelNumber
}

// GetListingsChannelNumberOk returns a tuple with the ListingsChannelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetListingsChannelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ListingsChannelNumber) {
		return nil, false
	}
	return o.ListingsChannelNumber, true
}

// HasListingsChannelNumber returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasListingsChannelNumber() bool {
	if o != nil && !IsNil(o.ListingsChannelNumber) {
		return true
	}

	return false
}

// SetListingsChannelNumber gets a reference to the given string and assigns it to the ListingsChannelNumber field.
func (o *ModelBaseItemDto) SetListingsChannelNumber(v string) {
	o.ListingsChannelNumber = &v
}

// GetAffiliateCallSign returns the AffiliateCallSign field value if set, zero value otherwise.
func (o *ModelBaseItemDto) GetAffiliateCallSign() string {
	if o == nil || IsNil(o.AffiliateCallSign) {
		var ret string
		return ret
	}
	return *o.AffiliateCallSign
}

// GetAffiliateCallSignOk returns a tuple with the AffiliateCallSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBaseItemDto) GetAffiliateCallSignOk() (*string, bool) {
	if o == nil || IsNil(o.AffiliateCallSign) {
		return nil, false
	}
	return o.AffiliateCallSign, true
}

// HasAffiliateCallSign returns a boolean if a field has been set.
func (o *ModelBaseItemDto) HasAffiliateCallSign() bool {
	if o != nil && !IsNil(o.AffiliateCallSign) {
		return true
	}

	return false
}

// SetAffiliateCallSign gets a reference to the given string and assigns it to the AffiliateCallSign field.
func (o *ModelBaseItemDto) SetAffiliateCallSign(v string) {
	o.AffiliateCallSign = &v
}

func (o ModelBaseItemDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelBaseItemDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.OriginalTitle) {
		toSerialize["OriginalTitle"] = o.OriginalTitle
	}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Guid) {
		toSerialize["Guid"] = o.Guid
	}
	if !IsNil(o.Etag) {
		toSerialize["Etag"] = o.Etag
	}
	if !IsNil(o.Prefix) {
		toSerialize["Prefix"] = o.Prefix
	}
	if !IsNil(o.PlaylistItemId) {
		toSerialize["PlaylistItemId"] = o.PlaylistItemId
	}
	if o.DateCreated.IsSet() {
		toSerialize["DateCreated"] = o.DateCreated.Get()
	}
	if !IsNil(o.ExtraType) {
		toSerialize["ExtraType"] = o.ExtraType
	}
	if o.SortIndexNumber.IsSet() {
		toSerialize["SortIndexNumber"] = o.SortIndexNumber.Get()
	}
	if o.SortParentIndexNumber.IsSet() {
		toSerialize["SortParentIndexNumber"] = o.SortParentIndexNumber.Get()
	}
	if o.CanDelete.IsSet() {
		toSerialize["CanDelete"] = o.CanDelete.Get()
	}
	if o.CanDownload.IsSet() {
		toSerialize["CanDownload"] = o.CanDownload.Get()
	}
	if o.SupportsResume.IsSet() {
		toSerialize["SupportsResume"] = o.SupportsResume.Get()
	}
	if !IsNil(o.PresentationUniqueKey) {
		toSerialize["PresentationUniqueKey"] = o.PresentationUniqueKey
	}
	if !IsNil(o.PreferredMetadataLanguage) {
		toSerialize["PreferredMetadataLanguage"] = o.PreferredMetadataLanguage
	}
	if !IsNil(o.PreferredMetadataCountryCode) {
		toSerialize["PreferredMetadataCountryCode"] = o.PreferredMetadataCountryCode
	}
	if o.SupportsSync.IsSet() {
		toSerialize["SupportsSync"] = o.SupportsSync.Get()
	}
	if !IsNil(o.SyncStatus) {
		toSerialize["SyncStatus"] = o.SyncStatus
	}
	if o.CanManageAccess.IsSet() {
		toSerialize["CanManageAccess"] = o.CanManageAccess.Get()
	}
	if o.CanMakePrivate.IsSet() {
		toSerialize["CanMakePrivate"] = o.CanMakePrivate.Get()
	}
	if o.CanMakePublic.IsSet() {
		toSerialize["CanMakePublic"] = o.CanMakePublic.Get()
	}
	if !IsNil(o.Container) {
		toSerialize["Container"] = o.Container
	}
	if !IsNil(o.SortName) {
		toSerialize["SortName"] = o.SortName
	}
	if !IsNil(o.ForcedSortName) {
		toSerialize["ForcedSortName"] = o.ForcedSortName
	}
	if !IsNil(o.Video3DFormat) {
		toSerialize["Video3DFormat"] = o.Video3DFormat
	}
	if o.PremiereDate.IsSet() {
		toSerialize["PremiereDate"] = o.PremiereDate.Get()
	}
	if !IsNil(o.ExternalUrls) {
		toSerialize["ExternalUrls"] = o.ExternalUrls
	}
	if !IsNil(o.MediaSources) {
		toSerialize["MediaSources"] = o.MediaSources
	}
	if o.CriticRating.IsSet() {
		toSerialize["CriticRating"] = o.CriticRating.Get()
	}
	if o.GameSystemId.IsSet() {
		toSerialize["GameSystemId"] = o.GameSystemId.Get()
	}
	if o.AsSeries.IsSet() {
		toSerialize["AsSeries"] = o.AsSeries.Get()
	}
	if !IsNil(o.GameSystem) {
		toSerialize["GameSystem"] = o.GameSystem
	}
	if !IsNil(o.ProductionLocations) {
		toSerialize["ProductionLocations"] = o.ProductionLocations
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.OfficialRating) {
		toSerialize["OfficialRating"] = o.OfficialRating
	}
	if !IsNil(o.CustomRating) {
		toSerialize["CustomRating"] = o.CustomRating
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if !IsNil(o.ChannelName) {
		toSerialize["ChannelName"] = o.ChannelName
	}
	if !IsNil(o.Overview) {
		toSerialize["Overview"] = o.Overview
	}
	if !IsNil(o.Taglines) {
		toSerialize["Taglines"] = o.Taglines
	}
	if !IsNil(o.Genres) {
		toSerialize["Genres"] = o.Genres
	}
	if o.CommunityRating.IsSet() {
		toSerialize["CommunityRating"] = o.CommunityRating.Get()
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if o.Size.IsSet() {
		toSerialize["Size"] = o.Size.Get()
	}
	if !IsNil(o.FileName) {
		toSerialize["FileName"] = o.FileName
	}
	if o.Bitrate.IsSet() {
		toSerialize["Bitrate"] = o.Bitrate.Get()
	}
	if o.ProductionYear.IsSet() {
		toSerialize["ProductionYear"] = o.ProductionYear.Get()
	}
	if !IsNil(o.Number) {
		toSerialize["Number"] = o.Number
	}
	if !IsNil(o.ChannelNumber) {
		toSerialize["ChannelNumber"] = o.ChannelNumber
	}
	if o.IndexNumber.IsSet() {
		toSerialize["IndexNumber"] = o.IndexNumber.Get()
	}
	if o.IndexNumberEnd.IsSet() {
		toSerialize["IndexNumberEnd"] = o.IndexNumberEnd.Get()
	}
	if o.ParentIndexNumber.IsSet() {
		toSerialize["ParentIndexNumber"] = o.ParentIndexNumber.Get()
	}
	if !IsNil(o.RemoteTrailers) {
		toSerialize["RemoteTrailers"] = o.RemoteTrailers
	}
	if !IsNil(o.ProviderIds) {
		toSerialize["ProviderIds"] = o.ProviderIds
	}
	if o.IsFolder.IsSet() {
		toSerialize["IsFolder"] = o.IsFolder.Get()
	}
	if !IsNil(o.ParentId) {
		toSerialize["ParentId"] = o.ParentId
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.People) {
		toSerialize["People"] = o.People
	}
	if !IsNil(o.Studios) {
		toSerialize["Studios"] = o.Studios
	}
	if !IsNil(o.GenreItems) {
		toSerialize["GenreItems"] = o.GenreItems
	}
	if !IsNil(o.TagItems) {
		toSerialize["TagItems"] = o.TagItems
	}
	if !IsNil(o.ParentLogoItemId) {
		toSerialize["ParentLogoItemId"] = o.ParentLogoItemId
	}
	if !IsNil(o.ParentBackdropItemId) {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId
	}
	if !IsNil(o.ParentBackdropImageTags) {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if o.LocalTrailerCount.IsSet() {
		toSerialize["LocalTrailerCount"] = o.LocalTrailerCount.Get()
	}
	if !IsNil(o.UserData) {
		toSerialize["UserData"] = o.UserData
	}
	if o.RecursiveItemCount.IsSet() {
		toSerialize["RecursiveItemCount"] = o.RecursiveItemCount.Get()
	}
	if o.ChildCount.IsSet() {
		toSerialize["ChildCount"] = o.ChildCount.Get()
	}
	if !IsNil(o.SeriesName) {
		toSerialize["SeriesName"] = o.SeriesName
	}
	if !IsNil(o.SeriesId) {
		toSerialize["SeriesId"] = o.SeriesId
	}
	if !IsNil(o.SeasonId) {
		toSerialize["SeasonId"] = o.SeasonId
	}
	if o.SpecialFeatureCount.IsSet() {
		toSerialize["SpecialFeatureCount"] = o.SpecialFeatureCount.Get()
	}
	if !IsNil(o.DisplayPreferencesId) {
		toSerialize["DisplayPreferencesId"] = o.DisplayPreferencesId
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.AirDays) {
		toSerialize["AirDays"] = o.AirDays
	}
	if !IsNil(o.Tags) {
		toSerialize["Tags"] = o.Tags
	}
	if o.PrimaryImageAspectRatio.IsSet() {
		toSerialize["PrimaryImageAspectRatio"] = o.PrimaryImageAspectRatio.Get()
	}
	if !IsNil(o.Artists) {
		toSerialize["Artists"] = o.Artists
	}
	if !IsNil(o.ArtistItems) {
		toSerialize["ArtistItems"] = o.ArtistItems
	}
	if !IsNil(o.Composers) {
		toSerialize["Composers"] = o.Composers
	}
	if !IsNil(o.Album) {
		toSerialize["Album"] = o.Album
	}
	if !IsNil(o.CollectionType) {
		toSerialize["CollectionType"] = o.CollectionType
	}
	if !IsNil(o.DisplayOrder) {
		toSerialize["DisplayOrder"] = o.DisplayOrder
	}
	if !IsNil(o.AlbumId) {
		toSerialize["AlbumId"] = o.AlbumId
	}
	if !IsNil(o.AlbumPrimaryImageTag) {
		toSerialize["AlbumPrimaryImageTag"] = o.AlbumPrimaryImageTag
	}
	if !IsNil(o.SeriesPrimaryImageTag) {
		toSerialize["SeriesPrimaryImageTag"] = o.SeriesPrimaryImageTag
	}
	if !IsNil(o.AlbumArtist) {
		toSerialize["AlbumArtist"] = o.AlbumArtist
	}
	if !IsNil(o.AlbumArtists) {
		toSerialize["AlbumArtists"] = o.AlbumArtists
	}
	if !IsNil(o.SeasonName) {
		toSerialize["SeasonName"] = o.SeasonName
	}
	if !IsNil(o.MediaStreams) {
		toSerialize["MediaStreams"] = o.MediaStreams
	}
	if o.PartCount.IsSet() {
		toSerialize["PartCount"] = o.PartCount.Get()
	}
	if !IsNil(o.ImageTags) {
		toSerialize["ImageTags"] = o.ImageTags
	}
	if !IsNil(o.BackdropImageTags) {
		toSerialize["BackdropImageTags"] = o.BackdropImageTags
	}
	if !IsNil(o.ParentLogoImageTag) {
		toSerialize["ParentLogoImageTag"] = o.ParentLogoImageTag
	}
	if !IsNil(o.SeriesStudio) {
		toSerialize["SeriesStudio"] = o.SeriesStudio
	}
	if !IsNil(o.PrimaryImageItemId) {
		toSerialize["PrimaryImageItemId"] = o.PrimaryImageItemId
	}
	if !IsNil(o.PrimaryImageTag) {
		toSerialize["PrimaryImageTag"] = o.PrimaryImageTag
	}
	if !IsNil(o.ParentThumbItemId) {
		toSerialize["ParentThumbItemId"] = o.ParentThumbItemId
	}
	if !IsNil(o.ParentThumbImageTag) {
		toSerialize["ParentThumbImageTag"] = o.ParentThumbImageTag
	}
	if !IsNil(o.Chapters) {
		toSerialize["Chapters"] = o.Chapters
	}
	if !IsNil(o.LocationType) {
		toSerialize["LocationType"] = o.LocationType
	}
	if !IsNil(o.MediaType) {
		toSerialize["MediaType"] = o.MediaType
	}
	if o.EndDate.IsSet() {
		toSerialize["EndDate"] = o.EndDate.Get()
	}
	if !IsNil(o.LockedFields) {
		toSerialize["LockedFields"] = o.LockedFields
	}
	if o.LockData.IsSet() {
		toSerialize["LockData"] = o.LockData.Get()
	}
	if o.Width.IsSet() {
		toSerialize["Width"] = o.Width.Get()
	}
	if o.Height.IsSet() {
		toSerialize["Height"] = o.Height.Get()
	}
	if !IsNil(o.CameraMake) {
		toSerialize["CameraMake"] = o.CameraMake
	}
	if !IsNil(o.CameraModel) {
		toSerialize["CameraModel"] = o.CameraModel
	}
	if !IsNil(o.Software) {
		toSerialize["Software"] = o.Software
	}
	if o.ExposureTime.IsSet() {
		toSerialize["ExposureTime"] = o.ExposureTime.Get()
	}
	if o.FocalLength.IsSet() {
		toSerialize["FocalLength"] = o.FocalLength.Get()
	}
	if !IsNil(o.ImageOrientation) {
		toSerialize["ImageOrientation"] = o.ImageOrientation
	}
	if o.Aperture.IsSet() {
		toSerialize["Aperture"] = o.Aperture.Get()
	}
	if o.ShutterSpeed.IsSet() {
		toSerialize["ShutterSpeed"] = o.ShutterSpeed.Get()
	}
	if o.Latitude.IsSet() {
		toSerialize["Latitude"] = o.Latitude.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["Longitude"] = o.Longitude.Get()
	}
	if o.Altitude.IsSet() {
		toSerialize["Altitude"] = o.Altitude.Get()
	}
	if o.IsoSpeedRating.IsSet() {
		toSerialize["IsoSpeedRating"] = o.IsoSpeedRating.Get()
	}
	if !IsNil(o.SeriesTimerId) {
		toSerialize["SeriesTimerId"] = o.SeriesTimerId
	}
	if !IsNil(o.ChannelPrimaryImageTag) {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag
	}
	if o.StartDate.IsSet() {
		toSerialize["StartDate"] = o.StartDate.Get()
	}
	if o.CompletionPercentage.IsSet() {
		toSerialize["CompletionPercentage"] = o.CompletionPercentage.Get()
	}
	if o.IsRepeat.IsSet() {
		toSerialize["IsRepeat"] = o.IsRepeat.Get()
	}
	if o.IsNew.IsSet() {
		toSerialize["IsNew"] = o.IsNew.Get()
	}
	if !IsNil(o.EpisodeTitle) {
		toSerialize["EpisodeTitle"] = o.EpisodeTitle
	}
	if o.IsMovie.IsSet() {
		toSerialize["IsMovie"] = o.IsMovie.Get()
	}
	if o.IsSports.IsSet() {
		toSerialize["IsSports"] = o.IsSports.Get()
	}
	if o.IsSeries.IsSet() {
		toSerialize["IsSeries"] = o.IsSeries.Get()
	}
	if o.IsLive.IsSet() {
		toSerialize["IsLive"] = o.IsLive.Get()
	}
	if o.IsNews.IsSet() {
		toSerialize["IsNews"] = o.IsNews.Get()
	}
	if o.IsKids.IsSet() {
		toSerialize["IsKids"] = o.IsKids.Get()
	}
	if o.IsPremiere.IsSet() {
		toSerialize["IsPremiere"] = o.IsPremiere.Get()
	}
	if !IsNil(o.TimerType) {
		toSerialize["TimerType"] = o.TimerType
	}
	if o.Disabled.IsSet() {
		toSerialize["Disabled"] = o.Disabled.Get()
	}
	if !IsNil(o.ManagementId) {
		toSerialize["ManagementId"] = o.ManagementId
	}
	if !IsNil(o.TimerId) {
		toSerialize["TimerId"] = o.TimerId
	}
	if !IsNil(o.CurrentProgram) {
		toSerialize["CurrentProgram"] = o.CurrentProgram
	}
	if o.MovieCount.IsSet() {
		toSerialize["MovieCount"] = o.MovieCount.Get()
	}
	if o.SeriesCount.IsSet() {
		toSerialize["SeriesCount"] = o.SeriesCount.Get()
	}
	if o.AlbumCount.IsSet() {
		toSerialize["AlbumCount"] = o.AlbumCount.Get()
	}
	if o.SongCount.IsSet() {
		toSerialize["SongCount"] = o.SongCount.Get()
	}
	if o.MusicVideoCount.IsSet() {
		toSerialize["MusicVideoCount"] = o.MusicVideoCount.Get()
	}
	if !IsNil(o.Subviews) {
		toSerialize["Subviews"] = o.Subviews
	}
	if !IsNil(o.ListingsProviderId) {
		toSerialize["ListingsProviderId"] = o.ListingsProviderId
	}
	if !IsNil(o.ListingsChannelId) {
		toSerialize["ListingsChannelId"] = o.ListingsChannelId
	}
	if !IsNil(o.ListingsPath) {
		toSerialize["ListingsPath"] = o.ListingsPath
	}
	if !IsNil(o.ListingsId) {
		toSerialize["ListingsId"] = o.ListingsId
	}
	if !IsNil(o.ListingsChannelName) {
		toSerialize["ListingsChannelName"] = o.ListingsChannelName
	}
	if !IsNil(o.ListingsChannelNumber) {
		toSerialize["ListingsChannelNumber"] = o.ListingsChannelNumber
	}
	if !IsNil(o.AffiliateCallSign) {
		toSerialize["AffiliateCallSign"] = o.AffiliateCallSign
	}
	return toSerialize, nil
}

type NullableModelBaseItemDto struct {
	value *ModelBaseItemDto
	isSet bool
}

func (v NullableModelBaseItemDto) Get() *ModelBaseItemDto {
	return v.value
}

func (v *NullableModelBaseItemDto) Set(val *ModelBaseItemDto) {
	v.value = val
	v.isSet = true
}

func (v NullableModelBaseItemDto) IsSet() bool {
	return v.isSet
}

func (v *NullableModelBaseItemDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelBaseItemDto(val *ModelBaseItemDto) *NullableModelBaseItemDto {
	return &NullableModelBaseItemDto{value: val, isSet: true}
}

func (v NullableModelBaseItemDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelBaseItemDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


