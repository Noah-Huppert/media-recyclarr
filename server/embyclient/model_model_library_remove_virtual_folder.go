/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelLibraryRemoveVirtualFolder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelLibraryRemoveVirtualFolder{}

// ModelLibraryRemoveVirtualFolder struct for ModelLibraryRemoveVirtualFolder
type ModelLibraryRemoveVirtualFolder struct {
	Id *string `json:"Id,omitempty"`
	RefreshLibrary *bool `json:"RefreshLibrary,omitempty"`
}

// NewModelLibraryRemoveVirtualFolder instantiates a new ModelLibraryRemoveVirtualFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelLibraryRemoveVirtualFolder() *ModelLibraryRemoveVirtualFolder {
	this := ModelLibraryRemoveVirtualFolder{}
	return &this
}

// NewModelLibraryRemoveVirtualFolderWithDefaults instantiates a new ModelLibraryRemoveVirtualFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelLibraryRemoveVirtualFolderWithDefaults() *ModelLibraryRemoveVirtualFolder {
	this := ModelLibraryRemoveVirtualFolder{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelLibraryRemoveVirtualFolder) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryRemoveVirtualFolder) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelLibraryRemoveVirtualFolder) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelLibraryRemoveVirtualFolder) SetId(v string) {
	o.Id = &v
}

// GetRefreshLibrary returns the RefreshLibrary field value if set, zero value otherwise.
func (o *ModelLibraryRemoveVirtualFolder) GetRefreshLibrary() bool {
	if o == nil || IsNil(o.RefreshLibrary) {
		var ret bool
		return ret
	}
	return *o.RefreshLibrary
}

// GetRefreshLibraryOk returns a tuple with the RefreshLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelLibraryRemoveVirtualFolder) GetRefreshLibraryOk() (*bool, bool) {
	if o == nil || IsNil(o.RefreshLibrary) {
		return nil, false
	}
	return o.RefreshLibrary, true
}

// HasRefreshLibrary returns a boolean if a field has been set.
func (o *ModelLibraryRemoveVirtualFolder) HasRefreshLibrary() bool {
	if o != nil && !IsNil(o.RefreshLibrary) {
		return true
	}

	return false
}

// SetRefreshLibrary gets a reference to the given bool and assigns it to the RefreshLibrary field.
func (o *ModelLibraryRemoveVirtualFolder) SetRefreshLibrary(v bool) {
	o.RefreshLibrary = &v
}

func (o ModelLibraryRemoveVirtualFolder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelLibraryRemoveVirtualFolder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.RefreshLibrary) {
		toSerialize["RefreshLibrary"] = o.RefreshLibrary
	}
	return toSerialize, nil
}

type NullableModelLibraryRemoveVirtualFolder struct {
	value *ModelLibraryRemoveVirtualFolder
	isSet bool
}

func (v NullableModelLibraryRemoveVirtualFolder) Get() *ModelLibraryRemoveVirtualFolder {
	return v.value
}

func (v *NullableModelLibraryRemoveVirtualFolder) Set(val *ModelLibraryRemoveVirtualFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableModelLibraryRemoveVirtualFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableModelLibraryRemoveVirtualFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelLibraryRemoveVirtualFolder(val *ModelLibraryRemoveVirtualFolder) *NullableModelLibraryRemoveVirtualFolder {
	return &NullableModelLibraryRemoveVirtualFolder{value: val, isSet: true}
}

func (v NullableModelLibraryRemoveVirtualFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelLibraryRemoveVirtualFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


