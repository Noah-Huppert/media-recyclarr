/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelPlaybackStopInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelPlaybackStopInfo{}

// ModelPlaybackStopInfo struct for ModelPlaybackStopInfo
type ModelPlaybackStopInfo struct {
	NowPlayingQueue []ModelQueueItem `json:"NowPlayingQueue,omitempty"`
	PlaylistItemId *string `json:"PlaylistItemId,omitempty"`
	PlaylistIndex *int32 `json:"PlaylistIndex,omitempty"`
	PlaylistLength *int32 `json:"PlaylistLength,omitempty"`
	Item *ModelBaseItemDto `json:"Item,omitempty"`
	ItemId *string `json:"ItemId,omitempty"`
	SessionId *string `json:"SessionId,omitempty"`
	MediaSourceId *string `json:"MediaSourceId,omitempty"`
	PositionTicks NullableInt64 `json:"PositionTicks,omitempty"`
	LiveStreamId *string `json:"LiveStreamId,omitempty"`
	PlaySessionId *string `json:"PlaySessionId,omitempty"`
	Failed *bool `json:"Failed,omitempty"`
	IsAutomated *bool `json:"IsAutomated,omitempty"`
	NextMediaType *string `json:"NextMediaType,omitempty"`
}

// NewModelPlaybackStopInfo instantiates a new ModelPlaybackStopInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelPlaybackStopInfo() *ModelPlaybackStopInfo {
	this := ModelPlaybackStopInfo{}
	return &this
}

// NewModelPlaybackStopInfoWithDefaults instantiates a new ModelPlaybackStopInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelPlaybackStopInfoWithDefaults() *ModelPlaybackStopInfo {
	this := ModelPlaybackStopInfo{}
	return &this
}

// GetNowPlayingQueue returns the NowPlayingQueue field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetNowPlayingQueue() []ModelQueueItem {
	if o == nil || IsNil(o.NowPlayingQueue) {
		var ret []ModelQueueItem
		return ret
	}
	return o.NowPlayingQueue
}

// GetNowPlayingQueueOk returns a tuple with the NowPlayingQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetNowPlayingQueueOk() ([]ModelQueueItem, bool) {
	if o == nil || IsNil(o.NowPlayingQueue) {
		return nil, false
	}
	return o.NowPlayingQueue, true
}

// HasNowPlayingQueue returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasNowPlayingQueue() bool {
	if o != nil && !IsNil(o.NowPlayingQueue) {
		return true
	}

	return false
}

// SetNowPlayingQueue gets a reference to the given []ModelQueueItem and assigns it to the NowPlayingQueue field.
func (o *ModelPlaybackStopInfo) SetNowPlayingQueue(v []ModelQueueItem) {
	o.NowPlayingQueue = v
}

// GetPlaylistItemId returns the PlaylistItemId field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetPlaylistItemId() string {
	if o == nil || IsNil(o.PlaylistItemId) {
		var ret string
		return ret
	}
	return *o.PlaylistItemId
}

// GetPlaylistItemIdOk returns a tuple with the PlaylistItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetPlaylistItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlaylistItemId) {
		return nil, false
	}
	return o.PlaylistItemId, true
}

// HasPlaylistItemId returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasPlaylistItemId() bool {
	if o != nil && !IsNil(o.PlaylistItemId) {
		return true
	}

	return false
}

// SetPlaylistItemId gets a reference to the given string and assigns it to the PlaylistItemId field.
func (o *ModelPlaybackStopInfo) SetPlaylistItemId(v string) {
	o.PlaylistItemId = &v
}

// GetPlaylistIndex returns the PlaylistIndex field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetPlaylistIndex() int32 {
	if o == nil || IsNil(o.PlaylistIndex) {
		var ret int32
		return ret
	}
	return *o.PlaylistIndex
}

// GetPlaylistIndexOk returns a tuple with the PlaylistIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetPlaylistIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PlaylistIndex) {
		return nil, false
	}
	return o.PlaylistIndex, true
}

// HasPlaylistIndex returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasPlaylistIndex() bool {
	if o != nil && !IsNil(o.PlaylistIndex) {
		return true
	}

	return false
}

// SetPlaylistIndex gets a reference to the given int32 and assigns it to the PlaylistIndex field.
func (o *ModelPlaybackStopInfo) SetPlaylistIndex(v int32) {
	o.PlaylistIndex = &v
}

// GetPlaylistLength returns the PlaylistLength field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetPlaylistLength() int32 {
	if o == nil || IsNil(o.PlaylistLength) {
		var ret int32
		return ret
	}
	return *o.PlaylistLength
}

// GetPlaylistLengthOk returns a tuple with the PlaylistLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetPlaylistLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PlaylistLength) {
		return nil, false
	}
	return o.PlaylistLength, true
}

// HasPlaylistLength returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasPlaylistLength() bool {
	if o != nil && !IsNil(o.PlaylistLength) {
		return true
	}

	return false
}

// SetPlaylistLength gets a reference to the given int32 and assigns it to the PlaylistLength field.
func (o *ModelPlaybackStopInfo) SetPlaylistLength(v int32) {
	o.PlaylistLength = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetItem() ModelBaseItemDto {
	if o == nil || IsNil(o.Item) {
		var ret ModelBaseItemDto
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetItemOk() (*ModelBaseItemDto, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given ModelBaseItemDto and assigns it to the Item field.
func (o *ModelPlaybackStopInfo) SetItem(v ModelBaseItemDto) {
	o.Item = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ModelPlaybackStopInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *ModelPlaybackStopInfo) SetSessionId(v string) {
	o.SessionId = &v
}

// GetMediaSourceId returns the MediaSourceId field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetMediaSourceId() string {
	if o == nil || IsNil(o.MediaSourceId) {
		var ret string
		return ret
	}
	return *o.MediaSourceId
}

// GetMediaSourceIdOk returns a tuple with the MediaSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetMediaSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.MediaSourceId) {
		return nil, false
	}
	return o.MediaSourceId, true
}

// HasMediaSourceId returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasMediaSourceId() bool {
	if o != nil && !IsNil(o.MediaSourceId) {
		return true
	}

	return false
}

// SetMediaSourceId gets a reference to the given string and assigns it to the MediaSourceId field.
func (o *ModelPlaybackStopInfo) SetMediaSourceId(v string) {
	o.MediaSourceId = &v
}

// GetPositionTicks returns the PositionTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelPlaybackStopInfo) GetPositionTicks() int64 {
	if o == nil || IsNil(o.PositionTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.PositionTicks.Get()
}

// GetPositionTicksOk returns a tuple with the PositionTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelPlaybackStopInfo) GetPositionTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PositionTicks.Get(), o.PositionTicks.IsSet()
}

// HasPositionTicks returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasPositionTicks() bool {
	if o != nil && o.PositionTicks.IsSet() {
		return true
	}

	return false
}

// SetPositionTicks gets a reference to the given NullableInt64 and assigns it to the PositionTicks field.
func (o *ModelPlaybackStopInfo) SetPositionTicks(v int64) {
	o.PositionTicks.Set(&v)
}
// SetPositionTicksNil sets the value for PositionTicks to be an explicit nil
func (o *ModelPlaybackStopInfo) SetPositionTicksNil() {
	o.PositionTicks.Set(nil)
}

// UnsetPositionTicks ensures that no value is present for PositionTicks, not even an explicit nil
func (o *ModelPlaybackStopInfo) UnsetPositionTicks() {
	o.PositionTicks.Unset()
}

// GetLiveStreamId returns the LiveStreamId field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetLiveStreamId() string {
	if o == nil || IsNil(o.LiveStreamId) {
		var ret string
		return ret
	}
	return *o.LiveStreamId
}

// GetLiveStreamIdOk returns a tuple with the LiveStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetLiveStreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.LiveStreamId) {
		return nil, false
	}
	return o.LiveStreamId, true
}

// HasLiveStreamId returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasLiveStreamId() bool {
	if o != nil && !IsNil(o.LiveStreamId) {
		return true
	}

	return false
}

// SetLiveStreamId gets a reference to the given string and assigns it to the LiveStreamId field.
func (o *ModelPlaybackStopInfo) SetLiveStreamId(v string) {
	o.LiveStreamId = &v
}

// GetPlaySessionId returns the PlaySessionId field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetPlaySessionId() string {
	if o == nil || IsNil(o.PlaySessionId) {
		var ret string
		return ret
	}
	return *o.PlaySessionId
}

// GetPlaySessionIdOk returns a tuple with the PlaySessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetPlaySessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlaySessionId) {
		return nil, false
	}
	return o.PlaySessionId, true
}

// HasPlaySessionId returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasPlaySessionId() bool {
	if o != nil && !IsNil(o.PlaySessionId) {
		return true
	}

	return false
}

// SetPlaySessionId gets a reference to the given string and assigns it to the PlaySessionId field.
func (o *ModelPlaybackStopInfo) SetPlaySessionId(v string) {
	o.PlaySessionId = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetFailed() bool {
	if o == nil || IsNil(o.Failed) {
		var ret bool
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetFailedOk() (*bool, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given bool and assigns it to the Failed field.
func (o *ModelPlaybackStopInfo) SetFailed(v bool) {
	o.Failed = &v
}

// GetIsAutomated returns the IsAutomated field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetIsAutomated() bool {
	if o == nil || IsNil(o.IsAutomated) {
		var ret bool
		return ret
	}
	return *o.IsAutomated
}

// GetIsAutomatedOk returns a tuple with the IsAutomated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetIsAutomatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutomated) {
		return nil, false
	}
	return o.IsAutomated, true
}

// HasIsAutomated returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasIsAutomated() bool {
	if o != nil && !IsNil(o.IsAutomated) {
		return true
	}

	return false
}

// SetIsAutomated gets a reference to the given bool and assigns it to the IsAutomated field.
func (o *ModelPlaybackStopInfo) SetIsAutomated(v bool) {
	o.IsAutomated = &v
}

// GetNextMediaType returns the NextMediaType field value if set, zero value otherwise.
func (o *ModelPlaybackStopInfo) GetNextMediaType() string {
	if o == nil || IsNil(o.NextMediaType) {
		var ret string
		return ret
	}
	return *o.NextMediaType
}

// GetNextMediaTypeOk returns a tuple with the NextMediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelPlaybackStopInfo) GetNextMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NextMediaType) {
		return nil, false
	}
	return o.NextMediaType, true
}

// HasNextMediaType returns a boolean if a field has been set.
func (o *ModelPlaybackStopInfo) HasNextMediaType() bool {
	if o != nil && !IsNil(o.NextMediaType) {
		return true
	}

	return false
}

// SetNextMediaType gets a reference to the given string and assigns it to the NextMediaType field.
func (o *ModelPlaybackStopInfo) SetNextMediaType(v string) {
	o.NextMediaType = &v
}

func (o ModelPlaybackStopInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelPlaybackStopInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NowPlayingQueue) {
		toSerialize["NowPlayingQueue"] = o.NowPlayingQueue
	}
	if !IsNil(o.PlaylistItemId) {
		toSerialize["PlaylistItemId"] = o.PlaylistItemId
	}
	if !IsNil(o.PlaylistIndex) {
		toSerialize["PlaylistIndex"] = o.PlaylistIndex
	}
	if !IsNil(o.PlaylistLength) {
		toSerialize["PlaylistLength"] = o.PlaylistLength
	}
	if !IsNil(o.Item) {
		toSerialize["Item"] = o.Item
	}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.SessionId) {
		toSerialize["SessionId"] = o.SessionId
	}
	if !IsNil(o.MediaSourceId) {
		toSerialize["MediaSourceId"] = o.MediaSourceId
	}
	if o.PositionTicks.IsSet() {
		toSerialize["PositionTicks"] = o.PositionTicks.Get()
	}
	if !IsNil(o.LiveStreamId) {
		toSerialize["LiveStreamId"] = o.LiveStreamId
	}
	if !IsNil(o.PlaySessionId) {
		toSerialize["PlaySessionId"] = o.PlaySessionId
	}
	if !IsNil(o.Failed) {
		toSerialize["Failed"] = o.Failed
	}
	if !IsNil(o.IsAutomated) {
		toSerialize["IsAutomated"] = o.IsAutomated
	}
	if !IsNil(o.NextMediaType) {
		toSerialize["NextMediaType"] = o.NextMediaType
	}
	return toSerialize, nil
}

type NullableModelPlaybackStopInfo struct {
	value *ModelPlaybackStopInfo
	isSet bool
}

func (v NullableModelPlaybackStopInfo) Get() *ModelPlaybackStopInfo {
	return v.value
}

func (v *NullableModelPlaybackStopInfo) Set(val *ModelPlaybackStopInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelPlaybackStopInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelPlaybackStopInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelPlaybackStopInfo(val *ModelPlaybackStopInfo) *NullableModelPlaybackStopInfo {
	return &NullableModelPlaybackStopInfo{value: val, isSet: true}
}

func (v NullableModelPlaybackStopInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelPlaybackStopInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


