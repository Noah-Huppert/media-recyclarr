/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelProfileLevelInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelProfileLevelInformation{}

// ModelProfileLevelInformation struct for ModelProfileLevelInformation
type ModelProfileLevelInformation struct {
	Profile *ModelProfileInformation `json:"Profile,omitempty"`
	Level *ModelLevelInformation `json:"Level,omitempty"`
}

// NewModelProfileLevelInformation instantiates a new ModelProfileLevelInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelProfileLevelInformation() *ModelProfileLevelInformation {
	this := ModelProfileLevelInformation{}
	return &this
}

// NewModelProfileLevelInformationWithDefaults instantiates a new ModelProfileLevelInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelProfileLevelInformationWithDefaults() *ModelProfileLevelInformation {
	this := ModelProfileLevelInformation{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ModelProfileLevelInformation) GetProfile() ModelProfileInformation {
	if o == nil || IsNil(o.Profile) {
		var ret ModelProfileInformation
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileLevelInformation) GetProfileOk() (*ModelProfileInformation, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ModelProfileLevelInformation) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given ModelProfileInformation and assigns it to the Profile field.
func (o *ModelProfileLevelInformation) SetProfile(v ModelProfileInformation) {
	o.Profile = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *ModelProfileLevelInformation) GetLevel() ModelLevelInformation {
	if o == nil || IsNil(o.Level) {
		var ret ModelLevelInformation
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelProfileLevelInformation) GetLevelOk() (*ModelLevelInformation, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *ModelProfileLevelInformation) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given ModelLevelInformation and assigns it to the Level field.
func (o *ModelProfileLevelInformation) SetLevel(v ModelLevelInformation) {
	o.Level = &v
}

func (o ModelProfileLevelInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelProfileLevelInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["Profile"] = o.Profile
	}
	if !IsNil(o.Level) {
		toSerialize["Level"] = o.Level
	}
	return toSerialize, nil
}

type NullableModelProfileLevelInformation struct {
	value *ModelProfileLevelInformation
	isSet bool
}

func (v NullableModelProfileLevelInformation) Get() *ModelProfileLevelInformation {
	return v.value
}

func (v *NullableModelProfileLevelInformation) Set(val *ModelProfileLevelInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableModelProfileLevelInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableModelProfileLevelInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelProfileLevelInformation(val *ModelProfileLevelInformation) *NullableModelProfileLevelInformation {
	return &NullableModelProfileLevelInformation{value: val, isSet: true}
}

func (v NullableModelProfileLevelInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelProfileLevelInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


