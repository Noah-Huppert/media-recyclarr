/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelGenericEditIEditObjectContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelGenericEditIEditObjectContainer{}

// ModelGenericEditIEditObjectContainer struct for ModelGenericEditIEditObjectContainer
type ModelGenericEditIEditObjectContainer struct {
	Object map[string]interface{} `json:"Object,omitempty"`
	DefaultObject map[string]interface{} `json:"DefaultObject,omitempty"`
	TypeName *string `json:"TypeName,omitempty"`
}

// NewModelGenericEditIEditObjectContainer instantiates a new ModelGenericEditIEditObjectContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelGenericEditIEditObjectContainer() *ModelGenericEditIEditObjectContainer {
	this := ModelGenericEditIEditObjectContainer{}
	return &this
}

// NewModelGenericEditIEditObjectContainerWithDefaults instantiates a new ModelGenericEditIEditObjectContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelGenericEditIEditObjectContainerWithDefaults() *ModelGenericEditIEditObjectContainer {
	this := ModelGenericEditIEditObjectContainer{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ModelGenericEditIEditObjectContainer) GetObject() map[string]interface{} {
	if o == nil || IsNil(o.Object) {
		var ret map[string]interface{}
		return ret
	}
	return o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGenericEditIEditObjectContainer) GetObjectOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Object) {
		return map[string]interface{}{}, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ModelGenericEditIEditObjectContainer) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given map[string]interface{} and assigns it to the Object field.
func (o *ModelGenericEditIEditObjectContainer) SetObject(v map[string]interface{}) {
	o.Object = v
}

// GetDefaultObject returns the DefaultObject field value if set, zero value otherwise.
func (o *ModelGenericEditIEditObjectContainer) GetDefaultObject() map[string]interface{} {
	if o == nil || IsNil(o.DefaultObject) {
		var ret map[string]interface{}
		return ret
	}
	return o.DefaultObject
}

// GetDefaultObjectOk returns a tuple with the DefaultObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGenericEditIEditObjectContainer) GetDefaultObjectOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DefaultObject) {
		return map[string]interface{}{}, false
	}
	return o.DefaultObject, true
}

// HasDefaultObject returns a boolean if a field has been set.
func (o *ModelGenericEditIEditObjectContainer) HasDefaultObject() bool {
	if o != nil && !IsNil(o.DefaultObject) {
		return true
	}

	return false
}

// SetDefaultObject gets a reference to the given map[string]interface{} and assigns it to the DefaultObject field.
func (o *ModelGenericEditIEditObjectContainer) SetDefaultObject(v map[string]interface{}) {
	o.DefaultObject = v
}

// GetTypeName returns the TypeName field value if set, zero value otherwise.
func (o *ModelGenericEditIEditObjectContainer) GetTypeName() string {
	if o == nil || IsNil(o.TypeName) {
		var ret string
		return ret
	}
	return *o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGenericEditIEditObjectContainer) GetTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.TypeName) {
		return nil, false
	}
	return o.TypeName, true
}

// HasTypeName returns a boolean if a field has been set.
func (o *ModelGenericEditIEditObjectContainer) HasTypeName() bool {
	if o != nil && !IsNil(o.TypeName) {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given string and assigns it to the TypeName field.
func (o *ModelGenericEditIEditObjectContainer) SetTypeName(v string) {
	o.TypeName = &v
}

func (o ModelGenericEditIEditObjectContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelGenericEditIEditObjectContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["Object"] = o.Object
	}
	if !IsNil(o.DefaultObject) {
		toSerialize["DefaultObject"] = o.DefaultObject
	}
	if !IsNil(o.TypeName) {
		toSerialize["TypeName"] = o.TypeName
	}
	return toSerialize, nil
}

type NullableModelGenericEditIEditObjectContainer struct {
	value *ModelGenericEditIEditObjectContainer
	isSet bool
}

func (v NullableModelGenericEditIEditObjectContainer) Get() *ModelGenericEditIEditObjectContainer {
	return v.value
}

func (v *NullableModelGenericEditIEditObjectContainer) Set(val *ModelGenericEditIEditObjectContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableModelGenericEditIEditObjectContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableModelGenericEditIEditObjectContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelGenericEditIEditObjectContainer(val *ModelGenericEditIEditObjectContainer) *NullableModelGenericEditIEditObjectContainer {
	return &NullableModelGenericEditIEditObjectContainer{value: val, isSet: true}
}

func (v NullableModelGenericEditIEditObjectContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelGenericEditIEditObjectContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


