/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelVirtualFolderInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelVirtualFolderInfo{}

// ModelVirtualFolderInfo struct for ModelVirtualFolderInfo
type ModelVirtualFolderInfo struct {
	Name *string `json:"Name,omitempty"`
	Locations []string `json:"Locations,omitempty"`
	CollectionType *string `json:"CollectionType,omitempty"`
	LibraryOptions *ModelLibraryOptions `json:"LibraryOptions,omitempty"`
	ItemId *string `json:"ItemId,omitempty"`
	Id *string `json:"Id,omitempty"`
	Guid *string `json:"Guid,omitempty"`
	PrimaryImageItemId *string `json:"PrimaryImageItemId,omitempty"`
	RefreshProgress NullableFloat64 `json:"RefreshProgress,omitempty"`
	RefreshStatus *string `json:"RefreshStatus,omitempty"`
}

// NewModelVirtualFolderInfo instantiates a new ModelVirtualFolderInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelVirtualFolderInfo() *ModelVirtualFolderInfo {
	this := ModelVirtualFolderInfo{}
	return &this
}

// NewModelVirtualFolderInfoWithDefaults instantiates a new ModelVirtualFolderInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelVirtualFolderInfoWithDefaults() *ModelVirtualFolderInfo {
	this := ModelVirtualFolderInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelVirtualFolderInfo) SetName(v string) {
	o.Name = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetLocations() []string {
	if o == nil || IsNil(o.Locations) {
		var ret []string
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetLocationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []string and assigns it to the Locations field.
func (o *ModelVirtualFolderInfo) SetLocations(v []string) {
	o.Locations = v
}

// GetCollectionType returns the CollectionType field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetCollectionType() string {
	if o == nil || IsNil(o.CollectionType) {
		var ret string
		return ret
	}
	return *o.CollectionType
}

// GetCollectionTypeOk returns a tuple with the CollectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetCollectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CollectionType) {
		return nil, false
	}
	return o.CollectionType, true
}

// HasCollectionType returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasCollectionType() bool {
	if o != nil && !IsNil(o.CollectionType) {
		return true
	}

	return false
}

// SetCollectionType gets a reference to the given string and assigns it to the CollectionType field.
func (o *ModelVirtualFolderInfo) SetCollectionType(v string) {
	o.CollectionType = &v
}

// GetLibraryOptions returns the LibraryOptions field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetLibraryOptions() ModelLibraryOptions {
	if o == nil || IsNil(o.LibraryOptions) {
		var ret ModelLibraryOptions
		return ret
	}
	return *o.LibraryOptions
}

// GetLibraryOptionsOk returns a tuple with the LibraryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetLibraryOptionsOk() (*ModelLibraryOptions, bool) {
	if o == nil || IsNil(o.LibraryOptions) {
		return nil, false
	}
	return o.LibraryOptions, true
}

// HasLibraryOptions returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasLibraryOptions() bool {
	if o != nil && !IsNil(o.LibraryOptions) {
		return true
	}

	return false
}

// SetLibraryOptions gets a reference to the given ModelLibraryOptions and assigns it to the LibraryOptions field.
func (o *ModelVirtualFolderInfo) SetLibraryOptions(v ModelLibraryOptions) {
	o.LibraryOptions = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ModelVirtualFolderInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelVirtualFolderInfo) SetId(v string) {
	o.Id = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *ModelVirtualFolderInfo) SetGuid(v string) {
	o.Guid = &v
}

// GetPrimaryImageItemId returns the PrimaryImageItemId field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetPrimaryImageItemId() string {
	if o == nil || IsNil(o.PrimaryImageItemId) {
		var ret string
		return ret
	}
	return *o.PrimaryImageItemId
}

// GetPrimaryImageItemIdOk returns a tuple with the PrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetPrimaryImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryImageItemId) {
		return nil, false
	}
	return o.PrimaryImageItemId, true
}

// HasPrimaryImageItemId returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasPrimaryImageItemId() bool {
	if o != nil && !IsNil(o.PrimaryImageItemId) {
		return true
	}

	return false
}

// SetPrimaryImageItemId gets a reference to the given string and assigns it to the PrimaryImageItemId field.
func (o *ModelVirtualFolderInfo) SetPrimaryImageItemId(v string) {
	o.PrimaryImageItemId = &v
}

// GetRefreshProgress returns the RefreshProgress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelVirtualFolderInfo) GetRefreshProgress() float64 {
	if o == nil || IsNil(o.RefreshProgress.Get()) {
		var ret float64
		return ret
	}
	return *o.RefreshProgress.Get()
}

// GetRefreshProgressOk returns a tuple with the RefreshProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelVirtualFolderInfo) GetRefreshProgressOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefreshProgress.Get(), o.RefreshProgress.IsSet()
}

// HasRefreshProgress returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasRefreshProgress() bool {
	if o != nil && o.RefreshProgress.IsSet() {
		return true
	}

	return false
}

// SetRefreshProgress gets a reference to the given NullableFloat64 and assigns it to the RefreshProgress field.
func (o *ModelVirtualFolderInfo) SetRefreshProgress(v float64) {
	o.RefreshProgress.Set(&v)
}
// SetRefreshProgressNil sets the value for RefreshProgress to be an explicit nil
func (o *ModelVirtualFolderInfo) SetRefreshProgressNil() {
	o.RefreshProgress.Set(nil)
}

// UnsetRefreshProgress ensures that no value is present for RefreshProgress, not even an explicit nil
func (o *ModelVirtualFolderInfo) UnsetRefreshProgress() {
	o.RefreshProgress.Unset()
}

// GetRefreshStatus returns the RefreshStatus field value if set, zero value otherwise.
func (o *ModelVirtualFolderInfo) GetRefreshStatus() string {
	if o == nil || IsNil(o.RefreshStatus) {
		var ret string
		return ret
	}
	return *o.RefreshStatus
}

// GetRefreshStatusOk returns a tuple with the RefreshStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelVirtualFolderInfo) GetRefreshStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshStatus) {
		return nil, false
	}
	return o.RefreshStatus, true
}

// HasRefreshStatus returns a boolean if a field has been set.
func (o *ModelVirtualFolderInfo) HasRefreshStatus() bool {
	if o != nil && !IsNil(o.RefreshStatus) {
		return true
	}

	return false
}

// SetRefreshStatus gets a reference to the given string and assigns it to the RefreshStatus field.
func (o *ModelVirtualFolderInfo) SetRefreshStatus(v string) {
	o.RefreshStatus = &v
}

func (o ModelVirtualFolderInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelVirtualFolderInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Locations) {
		toSerialize["Locations"] = o.Locations
	}
	if !IsNil(o.CollectionType) {
		toSerialize["CollectionType"] = o.CollectionType
	}
	if !IsNil(o.LibraryOptions) {
		toSerialize["LibraryOptions"] = o.LibraryOptions
	}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Guid) {
		toSerialize["Guid"] = o.Guid
	}
	if !IsNil(o.PrimaryImageItemId) {
		toSerialize["PrimaryImageItemId"] = o.PrimaryImageItemId
	}
	if o.RefreshProgress.IsSet() {
		toSerialize["RefreshProgress"] = o.RefreshProgress.Get()
	}
	if !IsNil(o.RefreshStatus) {
		toSerialize["RefreshStatus"] = o.RefreshStatus
	}
	return toSerialize, nil
}

type NullableModelVirtualFolderInfo struct {
	value *ModelVirtualFolderInfo
	isSet bool
}

func (v NullableModelVirtualFolderInfo) Get() *ModelVirtualFolderInfo {
	return v.value
}

func (v *NullableModelVirtualFolderInfo) Set(val *ModelVirtualFolderInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelVirtualFolderInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelVirtualFolderInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelVirtualFolderInfo(val *ModelVirtualFolderInfo) *NullableModelVirtualFolderInfo {
	return &NullableModelVirtualFolderInfo{value: val, isSet: true}
}

func (v NullableModelVirtualFolderInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelVirtualFolderInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


