/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelExternalUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelExternalUrl{}

// ModelExternalUrl struct for ModelExternalUrl
type ModelExternalUrl struct {
	Name *string `json:"Name,omitempty"`
	Url *string `json:"Url,omitempty"`
}

// NewModelExternalUrl instantiates a new ModelExternalUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelExternalUrl() *ModelExternalUrl {
	this := ModelExternalUrl{}
	return &this
}

// NewModelExternalUrlWithDefaults instantiates a new ModelExternalUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelExternalUrlWithDefaults() *ModelExternalUrl {
	this := ModelExternalUrl{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelExternalUrl) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelExternalUrl) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelExternalUrl) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelExternalUrl) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ModelExternalUrl) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelExternalUrl) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ModelExternalUrl) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ModelExternalUrl) SetUrl(v string) {
	o.Url = &v
}

func (o ModelExternalUrl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelExternalUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	return toSerialize, nil
}

type NullableModelExternalUrl struct {
	value *ModelExternalUrl
	isSet bool
}

func (v NullableModelExternalUrl) Get() *ModelExternalUrl {
	return v.value
}

func (v *NullableModelExternalUrl) Set(val *ModelExternalUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableModelExternalUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableModelExternalUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelExternalUrl(val *ModelExternalUrl) *NullableModelExternalUrl {
	return &NullableModelExternalUrl{value: val, isSet: true}
}

func (v NullableModelExternalUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelExternalUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


