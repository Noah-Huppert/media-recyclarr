/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelDevicesDeviceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelDevicesDeviceInfo{}

// ModelDevicesDeviceInfo struct for ModelDevicesDeviceInfo
type ModelDevicesDeviceInfo struct {
	Name *string `json:"Name,omitempty"`
	Id *string `json:"Id,omitempty"`
	InternalId *int64 `json:"InternalId,omitempty"`
	ReportedDeviceId *string `json:"ReportedDeviceId,omitempty"`
	LastUserName *string `json:"LastUserName,omitempty"`
	AppName *string `json:"AppName,omitempty"`
	AppVersion *string `json:"AppVersion,omitempty"`
	LastUserId *string `json:"LastUserId,omitempty"`
	DateLastActivity *time.Time `json:"DateLastActivity,omitempty"`
	IconUrl *string `json:"IconUrl,omitempty"`
	IpAddress *string `json:"IpAddress,omitempty"`
}

// NewModelDevicesDeviceInfo instantiates a new ModelDevicesDeviceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelDevicesDeviceInfo() *ModelDevicesDeviceInfo {
	this := ModelDevicesDeviceInfo{}
	return &this
}

// NewModelDevicesDeviceInfoWithDefaults instantiates a new ModelDevicesDeviceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelDevicesDeviceInfoWithDefaults() *ModelDevicesDeviceInfo {
	this := ModelDevicesDeviceInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelDevicesDeviceInfo) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelDevicesDeviceInfo) SetId(v string) {
	o.Id = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetInternalId() int64 {
	if o == nil || IsNil(o.InternalId) {
		var ret int64
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetInternalIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given int64 and assigns it to the InternalId field.
func (o *ModelDevicesDeviceInfo) SetInternalId(v int64) {
	o.InternalId = &v
}

// GetReportedDeviceId returns the ReportedDeviceId field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetReportedDeviceId() string {
	if o == nil || IsNil(o.ReportedDeviceId) {
		var ret string
		return ret
	}
	return *o.ReportedDeviceId
}

// GetReportedDeviceIdOk returns a tuple with the ReportedDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetReportedDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReportedDeviceId) {
		return nil, false
	}
	return o.ReportedDeviceId, true
}

// HasReportedDeviceId returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasReportedDeviceId() bool {
	if o != nil && !IsNil(o.ReportedDeviceId) {
		return true
	}

	return false
}

// SetReportedDeviceId gets a reference to the given string and assigns it to the ReportedDeviceId field.
func (o *ModelDevicesDeviceInfo) SetReportedDeviceId(v string) {
	o.ReportedDeviceId = &v
}

// GetLastUserName returns the LastUserName field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetLastUserName() string {
	if o == nil || IsNil(o.LastUserName) {
		var ret string
		return ret
	}
	return *o.LastUserName
}

// GetLastUserNameOk returns a tuple with the LastUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetLastUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastUserName) {
		return nil, false
	}
	return o.LastUserName, true
}

// HasLastUserName returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasLastUserName() bool {
	if o != nil && !IsNil(o.LastUserName) {
		return true
	}

	return false
}

// SetLastUserName gets a reference to the given string and assigns it to the LastUserName field.
func (o *ModelDevicesDeviceInfo) SetLastUserName(v string) {
	o.LastUserName = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *ModelDevicesDeviceInfo) SetAppName(v string) {
	o.AppName = &v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion) {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetAppVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *ModelDevicesDeviceInfo) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetLastUserId returns the LastUserId field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetLastUserId() string {
	if o == nil || IsNil(o.LastUserId) {
		var ret string
		return ret
	}
	return *o.LastUserId
}

// GetLastUserIdOk returns a tuple with the LastUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetLastUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastUserId) {
		return nil, false
	}
	return o.LastUserId, true
}

// HasLastUserId returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasLastUserId() bool {
	if o != nil && !IsNil(o.LastUserId) {
		return true
	}

	return false
}

// SetLastUserId gets a reference to the given string and assigns it to the LastUserId field.
func (o *ModelDevicesDeviceInfo) SetLastUserId(v string) {
	o.LastUserId = &v
}

// GetDateLastActivity returns the DateLastActivity field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetDateLastActivity() time.Time {
	if o == nil || IsNil(o.DateLastActivity) {
		var ret time.Time
		return ret
	}
	return *o.DateLastActivity
}

// GetDateLastActivityOk returns a tuple with the DateLastActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetDateLastActivityOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateLastActivity) {
		return nil, false
	}
	return o.DateLastActivity, true
}

// HasDateLastActivity returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasDateLastActivity() bool {
	if o != nil && !IsNil(o.DateLastActivity) {
		return true
	}

	return false
}

// SetDateLastActivity gets a reference to the given time.Time and assigns it to the DateLastActivity field.
func (o *ModelDevicesDeviceInfo) SetDateLastActivity(v time.Time) {
	o.DateLastActivity = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *ModelDevicesDeviceInfo) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ModelDevicesDeviceInfo) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDevicesDeviceInfo) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ModelDevicesDeviceInfo) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ModelDevicesDeviceInfo) SetIpAddress(v string) {
	o.IpAddress = &v
}

func (o ModelDevicesDeviceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelDevicesDeviceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.InternalId) {
		toSerialize["InternalId"] = o.InternalId
	}
	if !IsNil(o.ReportedDeviceId) {
		toSerialize["ReportedDeviceId"] = o.ReportedDeviceId
	}
	if !IsNil(o.LastUserName) {
		toSerialize["LastUserName"] = o.LastUserName
	}
	if !IsNil(o.AppName) {
		toSerialize["AppName"] = o.AppName
	}
	if !IsNil(o.AppVersion) {
		toSerialize["AppVersion"] = o.AppVersion
	}
	if !IsNil(o.LastUserId) {
		toSerialize["LastUserId"] = o.LastUserId
	}
	if !IsNil(o.DateLastActivity) {
		toSerialize["DateLastActivity"] = o.DateLastActivity
	}
	if !IsNil(o.IconUrl) {
		toSerialize["IconUrl"] = o.IconUrl
	}
	if !IsNil(o.IpAddress) {
		toSerialize["IpAddress"] = o.IpAddress
	}
	return toSerialize, nil
}

type NullableModelDevicesDeviceInfo struct {
	value *ModelDevicesDeviceInfo
	isSet bool
}

func (v NullableModelDevicesDeviceInfo) Get() *ModelDevicesDeviceInfo {
	return v.value
}

func (v *NullableModelDevicesDeviceInfo) Set(val *ModelDevicesDeviceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelDevicesDeviceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelDevicesDeviceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelDevicesDeviceInfo(val *ModelDevicesDeviceInfo) *NullableModelDevicesDeviceInfo {
	return &NullableModelDevicesDeviceInfo{value: val, isSet: true}
}

func (v NullableModelDevicesDeviceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelDevicesDeviceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


