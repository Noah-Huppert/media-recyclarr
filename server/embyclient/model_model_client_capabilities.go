/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelClientCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelClientCapabilities{}

// ModelClientCapabilities struct for ModelClientCapabilities
type ModelClientCapabilities struct {
	PlayableMediaTypes []string `json:"PlayableMediaTypes,omitempty"`
	SupportedCommands []string `json:"SupportedCommands,omitempty"`
	SupportsMediaControl *bool `json:"SupportsMediaControl,omitempty"`
	PushToken *string `json:"PushToken,omitempty"`
	PushTokenType *string `json:"PushTokenType,omitempty"`
	SupportsSync *bool `json:"SupportsSync,omitempty"`
	DeviceProfile *ModelDeviceProfile `json:"DeviceProfile,omitempty"`
	IconUrl *string `json:"IconUrl,omitempty"`
	AppId *string `json:"AppId,omitempty"`
}

// NewModelClientCapabilities instantiates a new ModelClientCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelClientCapabilities() *ModelClientCapabilities {
	this := ModelClientCapabilities{}
	return &this
}

// NewModelClientCapabilitiesWithDefaults instantiates a new ModelClientCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelClientCapabilitiesWithDefaults() *ModelClientCapabilities {
	this := ModelClientCapabilities{}
	return &this
}

// GetPlayableMediaTypes returns the PlayableMediaTypes field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetPlayableMediaTypes() []string {
	if o == nil || IsNil(o.PlayableMediaTypes) {
		var ret []string
		return ret
	}
	return o.PlayableMediaTypes
}

// GetPlayableMediaTypesOk returns a tuple with the PlayableMediaTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetPlayableMediaTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.PlayableMediaTypes) {
		return nil, false
	}
	return o.PlayableMediaTypes, true
}

// HasPlayableMediaTypes returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasPlayableMediaTypes() bool {
	if o != nil && !IsNil(o.PlayableMediaTypes) {
		return true
	}

	return false
}

// SetPlayableMediaTypes gets a reference to the given []string and assigns it to the PlayableMediaTypes field.
func (o *ModelClientCapabilities) SetPlayableMediaTypes(v []string) {
	o.PlayableMediaTypes = v
}

// GetSupportedCommands returns the SupportedCommands field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetSupportedCommands() []string {
	if o == nil || IsNil(o.SupportedCommands) {
		var ret []string
		return ret
	}
	return o.SupportedCommands
}

// GetSupportedCommandsOk returns a tuple with the SupportedCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetSupportedCommandsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedCommands) {
		return nil, false
	}
	return o.SupportedCommands, true
}

// HasSupportedCommands returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasSupportedCommands() bool {
	if o != nil && !IsNil(o.SupportedCommands) {
		return true
	}

	return false
}

// SetSupportedCommands gets a reference to the given []string and assigns it to the SupportedCommands field.
func (o *ModelClientCapabilities) SetSupportedCommands(v []string) {
	o.SupportedCommands = v
}

// GetSupportsMediaControl returns the SupportsMediaControl field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetSupportsMediaControl() bool {
	if o == nil || IsNil(o.SupportsMediaControl) {
		var ret bool
		return ret
	}
	return *o.SupportsMediaControl
}

// GetSupportsMediaControlOk returns a tuple with the SupportsMediaControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetSupportsMediaControlOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsMediaControl) {
		return nil, false
	}
	return o.SupportsMediaControl, true
}

// HasSupportsMediaControl returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasSupportsMediaControl() bool {
	if o != nil && !IsNil(o.SupportsMediaControl) {
		return true
	}

	return false
}

// SetSupportsMediaControl gets a reference to the given bool and assigns it to the SupportsMediaControl field.
func (o *ModelClientCapabilities) SetSupportsMediaControl(v bool) {
	o.SupportsMediaControl = &v
}

// GetPushToken returns the PushToken field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetPushToken() string {
	if o == nil || IsNil(o.PushToken) {
		var ret string
		return ret
	}
	return *o.PushToken
}

// GetPushTokenOk returns a tuple with the PushToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetPushTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PushToken) {
		return nil, false
	}
	return o.PushToken, true
}

// HasPushToken returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasPushToken() bool {
	if o != nil && !IsNil(o.PushToken) {
		return true
	}

	return false
}

// SetPushToken gets a reference to the given string and assigns it to the PushToken field.
func (o *ModelClientCapabilities) SetPushToken(v string) {
	o.PushToken = &v
}

// GetPushTokenType returns the PushTokenType field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetPushTokenType() string {
	if o == nil || IsNil(o.PushTokenType) {
		var ret string
		return ret
	}
	return *o.PushTokenType
}

// GetPushTokenTypeOk returns a tuple with the PushTokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetPushTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PushTokenType) {
		return nil, false
	}
	return o.PushTokenType, true
}

// HasPushTokenType returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasPushTokenType() bool {
	if o != nil && !IsNil(o.PushTokenType) {
		return true
	}

	return false
}

// SetPushTokenType gets a reference to the given string and assigns it to the PushTokenType field.
func (o *ModelClientCapabilities) SetPushTokenType(v string) {
	o.PushTokenType = &v
}

// GetSupportsSync returns the SupportsSync field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetSupportsSync() bool {
	if o == nil || IsNil(o.SupportsSync) {
		var ret bool
		return ret
	}
	return *o.SupportsSync
}

// GetSupportsSyncOk returns a tuple with the SupportsSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetSupportsSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsSync) {
		return nil, false
	}
	return o.SupportsSync, true
}

// HasSupportsSync returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasSupportsSync() bool {
	if o != nil && !IsNil(o.SupportsSync) {
		return true
	}

	return false
}

// SetSupportsSync gets a reference to the given bool and assigns it to the SupportsSync field.
func (o *ModelClientCapabilities) SetSupportsSync(v bool) {
	o.SupportsSync = &v
}

// GetDeviceProfile returns the DeviceProfile field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetDeviceProfile() ModelDeviceProfile {
	if o == nil || IsNil(o.DeviceProfile) {
		var ret ModelDeviceProfile
		return ret
	}
	return *o.DeviceProfile
}

// GetDeviceProfileOk returns a tuple with the DeviceProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetDeviceProfileOk() (*ModelDeviceProfile, bool) {
	if o == nil || IsNil(o.DeviceProfile) {
		return nil, false
	}
	return o.DeviceProfile, true
}

// HasDeviceProfile returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasDeviceProfile() bool {
	if o != nil && !IsNil(o.DeviceProfile) {
		return true
	}

	return false
}

// SetDeviceProfile gets a reference to the given ModelDeviceProfile and assigns it to the DeviceProfile field.
func (o *ModelClientCapabilities) SetDeviceProfile(v ModelDeviceProfile) {
	o.DeviceProfile = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *ModelClientCapabilities) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ModelClientCapabilities) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelClientCapabilities) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ModelClientCapabilities) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *ModelClientCapabilities) SetAppId(v string) {
	o.AppId = &v
}

func (o ModelClientCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelClientCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlayableMediaTypes) {
		toSerialize["PlayableMediaTypes"] = o.PlayableMediaTypes
	}
	if !IsNil(o.SupportedCommands) {
		toSerialize["SupportedCommands"] = o.SupportedCommands
	}
	if !IsNil(o.SupportsMediaControl) {
		toSerialize["SupportsMediaControl"] = o.SupportsMediaControl
	}
	if !IsNil(o.PushToken) {
		toSerialize["PushToken"] = o.PushToken
	}
	if !IsNil(o.PushTokenType) {
		toSerialize["PushTokenType"] = o.PushTokenType
	}
	if !IsNil(o.SupportsSync) {
		toSerialize["SupportsSync"] = o.SupportsSync
	}
	if !IsNil(o.DeviceProfile) {
		toSerialize["DeviceProfile"] = o.DeviceProfile
	}
	if !IsNil(o.IconUrl) {
		toSerialize["IconUrl"] = o.IconUrl
	}
	if !IsNil(o.AppId) {
		toSerialize["AppId"] = o.AppId
	}
	return toSerialize, nil
}

type NullableModelClientCapabilities struct {
	value *ModelClientCapabilities
	isSet bool
}

func (v NullableModelClientCapabilities) Get() *ModelClientCapabilities {
	return v.value
}

func (v *NullableModelClientCapabilities) Set(val *ModelClientCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableModelClientCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableModelClientCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelClientCapabilities(val *ModelClientCapabilities) *NullableModelClientCapabilities {
	return &NullableModelClientCapabilities{value: val, isSet: true}
}

func (v NullableModelClientCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelClientCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


