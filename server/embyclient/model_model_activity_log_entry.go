/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelActivityLogEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelActivityLogEntry{}

// ModelActivityLogEntry struct for ModelActivityLogEntry
type ModelActivityLogEntry struct {
	Id *int64 `json:"Id,omitempty"`
	Name *string `json:"Name,omitempty"`
	Overview *string `json:"Overview,omitempty"`
	ShortOverview *string `json:"ShortOverview,omitempty"`
	Type *string `json:"Type,omitempty"`
	ItemId *string `json:"ItemId,omitempty"`
	Date *time.Time `json:"Date,omitempty"`
	UserId *string `json:"UserId,omitempty"`
	UserPrimaryImageTag *string `json:"UserPrimaryImageTag,omitempty"`
	Severity *ModelLoggingLogSeverity `json:"Severity,omitempty"`
}

// NewModelActivityLogEntry instantiates a new ModelActivityLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelActivityLogEntry() *ModelActivityLogEntry {
	this := ModelActivityLogEntry{}
	return &this
}

// NewModelActivityLogEntryWithDefaults instantiates a new ModelActivityLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelActivityLogEntryWithDefaults() *ModelActivityLogEntry {
	this := ModelActivityLogEntry{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ModelActivityLogEntry) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelActivityLogEntry) SetName(v string) {
	o.Name = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetOverview() string {
	if o == nil || IsNil(o.Overview) {
		var ret string
		return ret
	}
	return *o.Overview
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.Overview) {
		return nil, false
	}
	return o.Overview, true
}

// HasOverview returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasOverview() bool {
	if o != nil && !IsNil(o.Overview) {
		return true
	}

	return false
}

// SetOverview gets a reference to the given string and assigns it to the Overview field.
func (o *ModelActivityLogEntry) SetOverview(v string) {
	o.Overview = &v
}

// GetShortOverview returns the ShortOverview field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetShortOverview() string {
	if o == nil || IsNil(o.ShortOverview) {
		var ret string
		return ret
	}
	return *o.ShortOverview
}

// GetShortOverviewOk returns a tuple with the ShortOverview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetShortOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.ShortOverview) {
		return nil, false
	}
	return o.ShortOverview, true
}

// HasShortOverview returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasShortOverview() bool {
	if o != nil && !IsNil(o.ShortOverview) {
		return true
	}

	return false
}

// SetShortOverview gets a reference to the given string and assigns it to the ShortOverview field.
func (o *ModelActivityLogEntry) SetShortOverview(v string) {
	o.ShortOverview = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ModelActivityLogEntry) SetType(v string) {
	o.Type = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ModelActivityLogEntry) SetItemId(v string) {
	o.ItemId = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *ModelActivityLogEntry) SetDate(v time.Time) {
	o.Date = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelActivityLogEntry) SetUserId(v string) {
	o.UserId = &v
}

// GetUserPrimaryImageTag returns the UserPrimaryImageTag field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetUserPrimaryImageTag() string {
	if o == nil || IsNil(o.UserPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.UserPrimaryImageTag
}

// GetUserPrimaryImageTagOk returns a tuple with the UserPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetUserPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.UserPrimaryImageTag) {
		return nil, false
	}
	return o.UserPrimaryImageTag, true
}

// HasUserPrimaryImageTag returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasUserPrimaryImageTag() bool {
	if o != nil && !IsNil(o.UserPrimaryImageTag) {
		return true
	}

	return false
}

// SetUserPrimaryImageTag gets a reference to the given string and assigns it to the UserPrimaryImageTag field.
func (o *ModelActivityLogEntry) SetUserPrimaryImageTag(v string) {
	o.UserPrimaryImageTag = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *ModelActivityLogEntry) GetSeverity() ModelLoggingLogSeverity {
	if o == nil || IsNil(o.Severity) {
		var ret ModelLoggingLogSeverity
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelActivityLogEntry) GetSeverityOk() (*ModelLoggingLogSeverity, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *ModelActivityLogEntry) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given ModelLoggingLogSeverity and assigns it to the Severity field.
func (o *ModelActivityLogEntry) SetSeverity(v ModelLoggingLogSeverity) {
	o.Severity = &v
}

func (o ModelActivityLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelActivityLogEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Overview) {
		toSerialize["Overview"] = o.Overview
	}
	if !IsNil(o.ShortOverview) {
		toSerialize["ShortOverview"] = o.ShortOverview
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.Date) {
		toSerialize["Date"] = o.Date
	}
	if !IsNil(o.UserId) {
		toSerialize["UserId"] = o.UserId
	}
	if !IsNil(o.UserPrimaryImageTag) {
		toSerialize["UserPrimaryImageTag"] = o.UserPrimaryImageTag
	}
	if !IsNil(o.Severity) {
		toSerialize["Severity"] = o.Severity
	}
	return toSerialize, nil
}

type NullableModelActivityLogEntry struct {
	value *ModelActivityLogEntry
	isSet bool
}

func (v NullableModelActivityLogEntry) Get() *ModelActivityLogEntry {
	return v.value
}

func (v *NullableModelActivityLogEntry) Set(val *ModelActivityLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableModelActivityLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableModelActivityLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelActivityLogEntry(val *ModelActivityLogEntry) *NullableModelActivityLogEntry {
	return &NullableModelActivityLogEntry{value: val, isSet: true}
}

func (v NullableModelActivityLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelActivityLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


