/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
)

// checks if the ModelThemeMediaResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelThemeMediaResult{}

// ModelThemeMediaResult struct for ModelThemeMediaResult
type ModelThemeMediaResult struct {
	OwnerId *int64 `json:"OwnerId,omitempty"`
	Items []ModelBaseItemDto `json:"Items,omitempty"`
	TotalRecordCount *int32 `json:"TotalRecordCount,omitempty"`
}

// NewModelThemeMediaResult instantiates a new ModelThemeMediaResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelThemeMediaResult() *ModelThemeMediaResult {
	this := ModelThemeMediaResult{}
	return &this
}

// NewModelThemeMediaResultWithDefaults instantiates a new ModelThemeMediaResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelThemeMediaResultWithDefaults() *ModelThemeMediaResult {
	this := ModelThemeMediaResult{}
	return &this
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ModelThemeMediaResult) GetOwnerId() int64 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int64
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelThemeMediaResult) GetOwnerIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ModelThemeMediaResult) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int64 and assigns it to the OwnerId field.
func (o *ModelThemeMediaResult) SetOwnerId(v int64) {
	o.OwnerId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ModelThemeMediaResult) GetItems() []ModelBaseItemDto {
	if o == nil || IsNil(o.Items) {
		var ret []ModelBaseItemDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelThemeMediaResult) GetItemsOk() ([]ModelBaseItemDto, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ModelThemeMediaResult) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ModelBaseItemDto and assigns it to the Items field.
func (o *ModelThemeMediaResult) SetItems(v []ModelBaseItemDto) {
	o.Items = v
}

// GetTotalRecordCount returns the TotalRecordCount field value if set, zero value otherwise.
func (o *ModelThemeMediaResult) GetTotalRecordCount() int32 {
	if o == nil || IsNil(o.TotalRecordCount) {
		var ret int32
		return ret
	}
	return *o.TotalRecordCount
}

// GetTotalRecordCountOk returns a tuple with the TotalRecordCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelThemeMediaResult) GetTotalRecordCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRecordCount) {
		return nil, false
	}
	return o.TotalRecordCount, true
}

// HasTotalRecordCount returns a boolean if a field has been set.
func (o *ModelThemeMediaResult) HasTotalRecordCount() bool {
	if o != nil && !IsNil(o.TotalRecordCount) {
		return true
	}

	return false
}

// SetTotalRecordCount gets a reference to the given int32 and assigns it to the TotalRecordCount field.
func (o *ModelThemeMediaResult) SetTotalRecordCount(v int32) {
	o.TotalRecordCount = &v
}

func (o ModelThemeMediaResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelThemeMediaResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OwnerId) {
		toSerialize["OwnerId"] = o.OwnerId
	}
	if !IsNil(o.Items) {
		toSerialize["Items"] = o.Items
	}
	if !IsNil(o.TotalRecordCount) {
		toSerialize["TotalRecordCount"] = o.TotalRecordCount
	}
	return toSerialize, nil
}

type NullableModelThemeMediaResult struct {
	value *ModelThemeMediaResult
	isSet bool
}

func (v NullableModelThemeMediaResult) Get() *ModelThemeMediaResult {
	return v.value
}

func (v *NullableModelThemeMediaResult) Set(val *ModelThemeMediaResult) {
	v.value = val
	v.isSet = true
}

func (v NullableModelThemeMediaResult) IsSet() bool {
	return v.isSet
}

func (v *NullableModelThemeMediaResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelThemeMediaResult(val *ModelThemeMediaResult) *NullableModelThemeMediaResult {
	return &NullableModelThemeMediaResult{value: val, isSet: true}
}

func (v NullableModelThemeMediaResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelThemeMediaResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


