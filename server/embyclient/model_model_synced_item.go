/*
Emby Server REST API (BETA)

Explore the Emby Server API

API version: 4.8.0.61
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package embyclient

import (
	"encoding/json"
	"time"
)

// checks if the ModelSyncedItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSyncedItem{}

// ModelSyncedItem struct for ModelSyncedItem
type ModelSyncedItem struct {
	ServerId *string `json:"ServerId,omitempty"`
	SyncJobId *int64 `json:"SyncJobId,omitempty"`
	SyncJobName *string `json:"SyncJobName,omitempty"`
	SyncJobDateCreated *time.Time `json:"SyncJobDateCreated,omitempty"`
	SyncJobItemId *int64 `json:"SyncJobItemId,omitempty"`
	OriginalFileName *string `json:"OriginalFileName,omitempty"`
	Item *ModelBaseItemDto `json:"Item,omitempty"`
	UserId *string `json:"UserId,omitempty"`
	AdditionalFiles []ModelItemFileInfo `json:"AdditionalFiles,omitempty"`
}

// NewModelSyncedItem instantiates a new ModelSyncedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSyncedItem() *ModelSyncedItem {
	this := ModelSyncedItem{}
	return &this
}

// NewModelSyncedItemWithDefaults instantiates a new ModelSyncedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSyncedItemWithDefaults() *ModelSyncedItem {
	this := ModelSyncedItem{}
	return &this
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *ModelSyncedItem) SetServerId(v string) {
	o.ServerId = &v
}

// GetSyncJobId returns the SyncJobId field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetSyncJobId() int64 {
	if o == nil || IsNil(o.SyncJobId) {
		var ret int64
		return ret
	}
	return *o.SyncJobId
}

// GetSyncJobIdOk returns a tuple with the SyncJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetSyncJobIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SyncJobId) {
		return nil, false
	}
	return o.SyncJobId, true
}

// HasSyncJobId returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasSyncJobId() bool {
	if o != nil && !IsNil(o.SyncJobId) {
		return true
	}

	return false
}

// SetSyncJobId gets a reference to the given int64 and assigns it to the SyncJobId field.
func (o *ModelSyncedItem) SetSyncJobId(v int64) {
	o.SyncJobId = &v
}

// GetSyncJobName returns the SyncJobName field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetSyncJobName() string {
	if o == nil || IsNil(o.SyncJobName) {
		var ret string
		return ret
	}
	return *o.SyncJobName
}

// GetSyncJobNameOk returns a tuple with the SyncJobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetSyncJobNameOk() (*string, bool) {
	if o == nil || IsNil(o.SyncJobName) {
		return nil, false
	}
	return o.SyncJobName, true
}

// HasSyncJobName returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasSyncJobName() bool {
	if o != nil && !IsNil(o.SyncJobName) {
		return true
	}

	return false
}

// SetSyncJobName gets a reference to the given string and assigns it to the SyncJobName field.
func (o *ModelSyncedItem) SetSyncJobName(v string) {
	o.SyncJobName = &v
}

// GetSyncJobDateCreated returns the SyncJobDateCreated field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetSyncJobDateCreated() time.Time {
	if o == nil || IsNil(o.SyncJobDateCreated) {
		var ret time.Time
		return ret
	}
	return *o.SyncJobDateCreated
}

// GetSyncJobDateCreatedOk returns a tuple with the SyncJobDateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetSyncJobDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SyncJobDateCreated) {
		return nil, false
	}
	return o.SyncJobDateCreated, true
}

// HasSyncJobDateCreated returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasSyncJobDateCreated() bool {
	if o != nil && !IsNil(o.SyncJobDateCreated) {
		return true
	}

	return false
}

// SetSyncJobDateCreated gets a reference to the given time.Time and assigns it to the SyncJobDateCreated field.
func (o *ModelSyncedItem) SetSyncJobDateCreated(v time.Time) {
	o.SyncJobDateCreated = &v
}

// GetSyncJobItemId returns the SyncJobItemId field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetSyncJobItemId() int64 {
	if o == nil || IsNil(o.SyncJobItemId) {
		var ret int64
		return ret
	}
	return *o.SyncJobItemId
}

// GetSyncJobItemIdOk returns a tuple with the SyncJobItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetSyncJobItemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SyncJobItemId) {
		return nil, false
	}
	return o.SyncJobItemId, true
}

// HasSyncJobItemId returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasSyncJobItemId() bool {
	if o != nil && !IsNil(o.SyncJobItemId) {
		return true
	}

	return false
}

// SetSyncJobItemId gets a reference to the given int64 and assigns it to the SyncJobItemId field.
func (o *ModelSyncedItem) SetSyncJobItemId(v int64) {
	o.SyncJobItemId = &v
}

// GetOriginalFileName returns the OriginalFileName field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetOriginalFileName() string {
	if o == nil || IsNil(o.OriginalFileName) {
		var ret string
		return ret
	}
	return *o.OriginalFileName
}

// GetOriginalFileNameOk returns a tuple with the OriginalFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetOriginalFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalFileName) {
		return nil, false
	}
	return o.OriginalFileName, true
}

// HasOriginalFileName returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasOriginalFileName() bool {
	if o != nil && !IsNil(o.OriginalFileName) {
		return true
	}

	return false
}

// SetOriginalFileName gets a reference to the given string and assigns it to the OriginalFileName field.
func (o *ModelSyncedItem) SetOriginalFileName(v string) {
	o.OriginalFileName = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetItem() ModelBaseItemDto {
	if o == nil || IsNil(o.Item) {
		var ret ModelBaseItemDto
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetItemOk() (*ModelBaseItemDto, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given ModelBaseItemDto and assigns it to the Item field.
func (o *ModelSyncedItem) SetItem(v ModelBaseItemDto) {
	o.Item = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelSyncedItem) SetUserId(v string) {
	o.UserId = &v
}

// GetAdditionalFiles returns the AdditionalFiles field value if set, zero value otherwise.
func (o *ModelSyncedItem) GetAdditionalFiles() []ModelItemFileInfo {
	if o == nil || IsNil(o.AdditionalFiles) {
		var ret []ModelItemFileInfo
		return ret
	}
	return o.AdditionalFiles
}

// GetAdditionalFilesOk returns a tuple with the AdditionalFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSyncedItem) GetAdditionalFilesOk() ([]ModelItemFileInfo, bool) {
	if o == nil || IsNil(o.AdditionalFiles) {
		return nil, false
	}
	return o.AdditionalFiles, true
}

// HasAdditionalFiles returns a boolean if a field has been set.
func (o *ModelSyncedItem) HasAdditionalFiles() bool {
	if o != nil && !IsNil(o.AdditionalFiles) {
		return true
	}

	return false
}

// SetAdditionalFiles gets a reference to the given []ModelItemFileInfo and assigns it to the AdditionalFiles field.
func (o *ModelSyncedItem) SetAdditionalFiles(v []ModelItemFileInfo) {
	o.AdditionalFiles = v
}

func (o ModelSyncedItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSyncedItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !IsNil(o.SyncJobId) {
		toSerialize["SyncJobId"] = o.SyncJobId
	}
	if !IsNil(o.SyncJobName) {
		toSerialize["SyncJobName"] = o.SyncJobName
	}
	if !IsNil(o.SyncJobDateCreated) {
		toSerialize["SyncJobDateCreated"] = o.SyncJobDateCreated
	}
	if !IsNil(o.SyncJobItemId) {
		toSerialize["SyncJobItemId"] = o.SyncJobItemId
	}
	if !IsNil(o.OriginalFileName) {
		toSerialize["OriginalFileName"] = o.OriginalFileName
	}
	if !IsNil(o.Item) {
		toSerialize["Item"] = o.Item
	}
	if !IsNil(o.UserId) {
		toSerialize["UserId"] = o.UserId
	}
	if !IsNil(o.AdditionalFiles) {
		toSerialize["AdditionalFiles"] = o.AdditionalFiles
	}
	return toSerialize, nil
}

type NullableModelSyncedItem struct {
	value *ModelSyncedItem
	isSet bool
}

func (v NullableModelSyncedItem) Get() *ModelSyncedItem {
	return v.value
}

func (v *NullableModelSyncedItem) Set(val *ModelSyncedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSyncedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSyncedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSyncedItem(val *ModelSyncedItem) *NullableModelSyncedItem {
	return &NullableModelSyncedItem{value: val, isSet: true}
}

func (v NullableModelSyncedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSyncedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


